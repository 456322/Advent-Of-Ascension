package net.tslat.aoa3.client.model.entity.mob.creeponia;

import com.mojang.blaze3d.matrix.MatrixStack;
import com.mojang.blaze3d.vertex.IVertexBuilder;
import net.minecraft.client.renderer.entity.model.EntityModel;
import net.minecraft.client.renderer.model.ModelRenderer;
import net.minecraft.util.math.MathHelper;
import net.tslat.aoa3.entity.mob.creeponia.AoACreeponiaCreeper;

public class CreeperlockModel extends EntityModel<AoACreeponiaCreeper> {
	private final ModelRenderer head;
	private final ModelRenderer leg3;
	private final ModelRenderer leg4;
	private final ModelRenderer leg1;
	private final ModelRenderer leg2;
	private final ModelRenderer head2;
	private final ModelRenderer head3;
	private final ModelRenderer head4;
	private final ModelRenderer head5;
	private final ModelRenderer r1;
	private final ModelRenderer r2;
	private final ModelRenderer r3;
	private final ModelRenderer r4;
	private final ModelRenderer r5;
	private final ModelRenderer r6;
	private final ModelRenderer r7;
	private final ModelRenderer r8;
	private final ModelRenderer r9;
	private final ModelRenderer body;
	private final ModelRenderer r10;
	private final ModelRenderer r11;
	private final ModelRenderer r12;
	private final ModelRenderer r13;
	private final ModelRenderer r14;

	public CreeperlockModel(float delta) {
		texWidth = 64;
		texHeight = 64;
		(head = new ModelRenderer(this, 40, 34)).addBox(-2.0f, -20.0f, -2.0f, 4, 4, 4, delta);
		head.setPos(0.0f, 6.0f, 0.0f);
		head.setTexSize(64, 32);
		head.mirror = true;
		setRotation(head, 0.0f, 0.0f, 0.0f);
		(leg3 = new ModelRenderer(this, 0, 16)).addBox(-2.0f, 0.0f, -2.0f, 4, 6, 4, delta);
		leg3.setPos(-2.0f, 18.0f, -4.0f);
		leg3.setTexSize(64, 32);
		leg3.mirror = true;
		setRotation(leg3, 0.0f, 0.0f, 0.0f);
		(leg4 = new ModelRenderer(this, 0, 16)).addBox(-2.0f, 0.0f, -2.0f, 4, 6, 4, delta);
		leg4.setPos(2.0f, 18.0f, -4.0f);
		leg4.setTexSize(64, 32);
		leg4.mirror = true;
		setRotation(leg4, 0.0f, 0.0f, 0.0f);
		(leg1 = new ModelRenderer(this, 0, 16)).addBox(0.0f, 0.0f, -2.0f, 4, 6, 4, delta);
		leg1.setPos(-4.0f, 18.0f, 4.0f);
		leg1.setTexSize(64, 32);
		leg1.mirror = true;
		setRotation(leg1, 0.0f, 0.0f, 0.0f);
		(leg2 = new ModelRenderer(this, 0, 16)).addBox(-2.0f, 0.0f, -2.0f, 4, 6, 4, delta);
		leg2.setPos(2.0f, 18.0f, 4.0f);
		leg2.setTexSize(64, 32);
		leg2.mirror = true;
		setRotation(leg2, 0.0f, 0.0f, 0.0f);
		(head2 = new ModelRenderer(this, 0, 0)).addBox(-4.0f, -8.0f, -4.0f, 8, 8, 8, delta);
		head2.setPos(0.0f, 6.0f, 0.0f);
		head2.setTexSize(64, 32);
		head2.mirror = true;
		setRotation(head2, 0.0f, 0.0f, 0.0f);
		(head3 = new ModelRenderer(this, 0, 32)).addBox(-6.0f, -10.0f, -6.0f, 12, 2, 12, delta);
		head3.setPos(0.0f, 6.0f, 0.0f);
		head3.setTexSize(64, 32);
		head3.mirror = true;
		setRotation(head3, 0.0f, 0.0f, 0.0f);
		(head4 = new ModelRenderer(this, 0, 47)).addBox(-5.0f, -12.0f, -5.0f, 10, 2, 10, delta);
		head4.setPos(0.0f, 6.0f, 0.0f);
		head4.setTexSize(64, 32);
		head4.mirror = true;
		setRotation(head4, 0.0f, 0.0f, 0.0f);
		(head5 = new ModelRenderer(this, 40, 47)).addBox(-3.0f, -16.0f, -3.0f, 6, 4, 6, delta);
		head5.setPos(0.0f, 6.0f, 0.0f);
		head5.setTexSize(64, 32);
		head5.mirror = true;
		setRotation(head5, 0.0f, 0.0f, 0.0f);
		(r1 = new ModelRenderer(this, 42, 21)).addBox(1.0f, 3.0f, 5.0f, 1, 2, 2, delta);
		r1.setPos(0.0f, 6.0f, 0.0f);
		r1.setTexSize(64, 32);
		r1.mirror = true;
		setRotation(r1, 0.0f, 0.0f, 0.0f);
		(r2 = new ModelRenderer(this, 29, 2)).addBox(8.0f, 4.0f, 2.0f, 1, 1, 2, delta);
		r2.setPos(0.0f, 6.0f, 0.0f);
		r2.setTexSize(64, 32);
		r2.mirror = true;
		setRotation(r2, 0.0f, 0.0f, 0.0f);
		(r3 = new ModelRenderer(this, 42, 16)).addBox(-4.0f, 1.0f, 5.0f, 8, 2, 2, delta);
		r3.setPos(0.0f, 6.0f, 0.0f);
		r3.setTexSize(64, 32);
		r3.mirror = true;
		setRotation(r3, 0.0f, 0.0f, 0.0f);
		(r4 = new ModelRenderer(this, 42, 16)).addBox(-4.0f, 5.0f, 5.0f, 8, 2, 2, delta);
		r4.setPos(0.0f, 6.0f, 0.0f);
		r4.setTexSize(64, 32);
		r4.mirror = true;
		setRotation(r4, 0.0f, 0.0f, 0.0f);
		(r5 = new ModelRenderer(this, 42, 21)).addBox(-2.0f, 3.0f, 5.0f, 1, 2, 2, delta);
		r5.setPos(0.0f, 6.0f, 0.0f);
		r5.setTexSize(64, 32);
		r5.mirror = true;
		setRotation(r5, 0.0f, 0.0f, 0.0f);
		(r6 = new ModelRenderer(this, 42, 16)).addBox(-4.0f, 5.0f, -7.0f, 8, 2, 2, delta);
		r6.setPos(0.0f, 6.0f, 0.0f);
		r6.setTexSize(64, 32);
		r6.mirror = true;
		setRotation(r6, 0.0f, 0.0f, 0.0f);
		(r7 = new ModelRenderer(this, 42, 21)).addBox(1.0f, 3.0f, -7.0f, 1, 2, 2, delta);
		r7.setPos(0.0f, 6.0f, 0.0f);
		r7.setTexSize(64, 32);
		r7.mirror = true;
		setRotation(r7, 0.0f, 0.0f, 0.0f);
		(r8 = new ModelRenderer(this, 42, 21)).addBox(-2.0f, 3.0f, -7.0f, 1, 2, 2, delta);
		r8.setPos(0.0f, 6.0f, 0.0f);
		r8.setTexSize(64, 32);
		r8.mirror = true;
		setRotation(r8, 0.0f, 0.0f, 0.0f);
		(r9 = new ModelRenderer(this, 42, 16)).addBox(-4.0f, 1.0f, -7.0f, 8, 2, 2, delta);
		r9.setPos(0.0f, 6.0f, 0.0f);
		r9.setTexSize(64, 32);
		r9.mirror = true;
		setRotation(r9, 0.0f, 0.0f, 0.0f);
		(body = new ModelRenderer(this, 16, 16)).addBox(-4.0f, 0.0f, -2.0f, 8, 12, 4, delta);
		body.setPos(0.0f, 6.0f, 0.0f);
		body.setTexSize(64, 32);
		body.mirror = true;
		setRotation(body, 0.0f, 0.0f, 0.0f);
		(r10 = new ModelRenderer(this, 35, 2)).addBox(7.0f, 3.0f, -2.0f, 3, 3, 4, delta);
		r10.setPos(0.0f, 6.0f, 0.0f);
		r10.setTexSize(64, 32);
		r10.mirror = true;
		setRotation(r10, 0.0f, 0.0f, 0.0f);
		(r11 = new ModelRenderer(this, 29, 2)).addBox(8.0f, 4.0f, -4.0f, 1, 1, 2, delta);
		r11.setPos(0.0f, 6.0f, 0.0f);
		r11.setTexSize(64, 32);
		r11.mirror = true;
		setRotation(r11, 0.0f, 0.0f, 0.0f);
		(r12 = new ModelRenderer(this, 29, 2)).addBox(-9.0f, 4.0f, 2.0f, 1, 1, 2, delta);
		r12.setPos(0.0f, 6.0f, 0.0f);
		r12.setTexSize(64, 32);
		r12.mirror = true;
		setRotation(r12, 0.0f, 0.0f, 0.0f);
		(r13 = new ModelRenderer(this, 29, 2)).addBox(-9.0f, 4.0f, -4.0f, 1, 1, 2, delta);
		r13.setPos(0.0f, 6.0f, 0.0f);
		r13.setTexSize(64, 32);
		r13.mirror = true;
		setRotation(r13, 0.0f, 0.0f, 0.0f);
		(r14 = new ModelRenderer(this, 35, 2)).addBox(-10.0f, 3.0f, -2.0f, 3, 3, 4, delta);
		r14.setPos(0.0f, 6.0f, 0.0f);
		r14.setTexSize(64, 32);
		r14.mirror = true;
		setRotation(r14, 0.0f, 0.0f, 0.0f);
	}

	@Override
	public void renderToBuffer(MatrixStack matrix, IVertexBuilder buffer, int light, int overlay, float red, float green, float blue, float alpha) {
		head.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg3.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg4.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg1.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg2.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head2.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head3.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head4.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head5.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		r1.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		r2.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		r3.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		r4.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		r5.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		r6.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		r7.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		r8.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		r9.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		r10.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		r11.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		r12.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		r13.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		r14.render(matrix, buffer, light, overlay, red, green, blue, alpha);
	}

	private void setRotation(final ModelRenderer model, final float x, final float y, final float z) {
		model.xRot = x;
		model.yRot = y;
		model.zRot = z;
	}

	@Override
	public void setupAnim(AoACreeponiaCreeper entityIn, float limbSwing, float limbSwingAmount, float ageInTicks, float netHeadYaw, float headPitch) {
		head.yRot = netHeadYaw / 57.295776f;
		head.xRot = headPitch / 57.295776f;
		head2.yRot = netHeadYaw / 57.295776f;
		head2.xRot = headPitch / 57.295776f;
		head3.yRot = netHeadYaw / 57.295776f;
		head3.xRot = headPitch / 57.295776f;
		head4.yRot = netHeadYaw / 57.295776f;
		head4.xRot = headPitch / 57.295776f;
		head5.yRot = netHeadYaw / 57.295776f;
		head5.xRot = headPitch / 57.295776f;
		leg1.xRot = MathHelper.cos(limbSwing * 0.6662f) * 1.4f * limbSwingAmount;
		leg2.xRot = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
		leg3.xRot = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
		leg4.xRot = MathHelper.cos(limbSwing * 0.6662f) * 1.4f * limbSwingAmount;
		r1.yRot = ageInTicks * 0.267f * 0.65f;
		r2.yRot = ageInTicks * 0.267f * 0.65f;
		r3.yRot = ageInTicks * 0.267f * 0.65f;
		r4.yRot = ageInTicks * 0.267f * 0.65f;
		r5.yRot = ageInTicks * 0.267f * 0.65f;
		r6.yRot = ageInTicks * 0.267f * 0.65f;
		r7.yRot = ageInTicks * 0.267f * 0.65f;
		r8.yRot = ageInTicks * 0.267f * 0.65f;
		r9.yRot = ageInTicks * 0.267f * 0.65f;
		r10.yRot = ageInTicks * 0.267f * 0.65f;
		r11.yRot = ageInTicks * 0.267f * 0.65f;
		r12.yRot = ageInTicks * 0.267f * 0.65f;
		r13.yRot = ageInTicks * 0.267f * 0.65f;
		r14.yRot = ageInTicks * 0.267f * 0.65f;
	}
}
