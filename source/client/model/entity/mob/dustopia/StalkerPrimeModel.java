package net.tslat.aoa3.client.model.entity.mob.dustopia;

import com.mojang.blaze3d.matrix.MatrixStack;
import com.mojang.blaze3d.vertex.IVertexBuilder;
import net.minecraft.client.renderer.entity.model.EntityModel;
import net.minecraft.client.renderer.model.ModelRenderer;
import net.minecraft.entity.MobEntity;
import net.minecraft.util.math.MathHelper;

public class StalkerPrimeModel extends EntityModel<MobEntity> {
	private final ModelRenderer head;
	private final ModelRenderer body;
	private final ModelRenderer rightLeg;
	private final ModelRenderer leftLeg;
	private final ModelRenderer body2;
	private final ModelRenderer leftArm;
	private final ModelRenderer leftArm2;
	private final ModelRenderer leftArm3;
	private final ModelRenderer leftArm4;
	private final ModelRenderer leftArm5;
	private final ModelRenderer leftArm6;
	private final ModelRenderer body3;
	private final ModelRenderer leftArm7;
	private final ModelRenderer leftArm8;
	private final ModelRenderer leftArm9;
	private final ModelRenderer leftArm10;
	private final ModelRenderer leftArm11;
	private final ModelRenderer leftArm12;
	private final ModelRenderer leftArm13;
	private final ModelRenderer leftArm14;
	private final ModelRenderer leftArm15;
	private final ModelRenderer leftArm16;
	private final ModelRenderer leftArm17;
	private final ModelRenderer leftArm18;
	private final ModelRenderer leftArm19;
	private final ModelRenderer leftArm20;
	private final ModelRenderer body4;
	private final ModelRenderer head2;

	public StalkerPrimeModel() {
		textureWidth = 64;
		textureHeight = 64;
		(head = new ModelRenderer(this, 0, 0)).addBox(-3.0f, -6.0f, -3.0f, 6, 6, 6);
		head.setRotationPoint(5.0f, -10.0f, -1.0f);
		head.setTextureSize(64, 64);
		head.mirror = true;
		setRotation(head, 0.0f, 0.0f, 0.0f);
		(body = new ModelRenderer(this, 25, 12)).addBox(-1.0f, -2.0f, -1.0f, 2, 2, 2);
		body.setRotationPoint(5.0f, -8.0f, 0.0f);
		body.setTextureSize(64, 64);
		body.mirror = true;
		setRotation(body, 0.0f, 0.0f, 0.0f);
		(rightLeg = new ModelRenderer(this, 0, 16)).addBox(-2.0f, 0.0f, -2.0f, 4, 21, 4);
		rightLeg.setRotationPoint(-3.0f, 3.0f, 0.0f);
		rightLeg.setTextureSize(64, 64);
		rightLeg.mirror = true;
		setRotation(rightLeg, 0.0f, 0.0f, 0.0f);
		(leftLeg = new ModelRenderer(this, 0, 16)).addBox(-2.0f, 0.0f, -2.0f, 4, 21, 4);
		leftLeg.setRotationPoint(3.0f, 3.0f, 0.0f);
		leftLeg.setTextureSize(64, 64);
		leftLeg.mirror = true;
		setRotation(leftLeg, 0.0f, 0.0f, 0.0f);
		(body2 = new ModelRenderer(this, 16, 36)).addBox(-4.0f, 0.0f, -2.0f, 6, 7, 3);
		body2.setRotationPoint(1.0f, -8.0f, 4.0f);
		body2.setTextureSize(64, 64);
		body2.mirror = true;
		setRotation(body2, 0.0f, 0.0f, 0.0f);
		(leftArm = new ModelRenderer(this, 42, 59)).addBox(2.0f, 9.0f, -2.0f, 4, 2, 2);
		leftArm.setRotationPoint(-4.0f, -1.0f, 4.0f);
		leftArm.setTextureSize(64, 64);
		leftArm.mirror = true;
		setRotation(leftArm, 0.0f, 0.0f, 1.047198f);
		(leftArm2 = new ModelRenderer(this, 42, 47)).addBox(-2.0f, -4.0f, -3.0f, 4, 4, 4);
		leftArm2.setRotationPoint(-12.0f, -4.0f, 4.0f);
		leftArm2.setTextureSize(64, 64);
		leftArm2.mirror = true;
		setRotation(leftArm2, 0.0f, 0.0f, -1.570796f);
		(leftArm3 = new ModelRenderer(this, 42, 59)).addBox(2.0f, 9.0f, -2.0f, 4, 2, 2);
		leftArm3.setRotationPoint(-4.0f, -7.0f, 4.0f);
		leftArm3.setTextureSize(64, 64);
		leftArm3.mirror = true;
		setRotation(leftArm3, 0.0f, 0.0f, 2.094395f);
		(leftArm4 = new ModelRenderer(this, 42, 47)).addBox(-2.0f, 8.0f, -3.0f, 4, 4, 4);
		leftArm4.setRotationPoint(4.0f, -4.0f, 4.0f);
		leftArm4.setTextureSize(64, 64);
		leftArm4.mirror = true;
		setRotation(leftArm4, 0.0f, 0.0f, -1.570796f);
		(leftArm5 = new ModelRenderer(this, 42, 59)).addBox(2.0f, 9.0f, -2.0f, 4, 2, 2);
		leftArm5.setRotationPoint(4.0f, -1.0f, 4.0f);
		leftArm5.setTextureSize(64, 64);
		leftArm5.mirror = true;
		setRotation(leftArm5, 0.0f, 0.0f, -1.047198f);
		(leftArm6 = new ModelRenderer(this, 42, 59)).addBox(2.0f, 9.0f, -2.0f, 4, 2, 2);
		leftArm6.setRotationPoint(4.0f, -7.0f, 4.0f);
		leftArm6.setTextureSize(64, 64);
		leftArm6.mirror = true;
		setRotation(leftArm6, 0.0f, 0.0f, -2.094395f);
		(body3 = new ModelRenderer(this, 16, 16)).addBox(-4.0f, 0.0f, -2.0f, 8, 12, 4);
		body3.setRotationPoint(0.0f, -9.0f, 0.0f);
		body3.setTextureSize(64, 64);
		body3.mirror = true;
		setRotation(body3, 0.0f, 0.0f, 0.0f);
		(leftArm7 = new ModelRenderer(this, 42, 19)).addBox(-1.0f, -2.0f, -2.0f, 2, 12, 2);
		leftArm7.setRotationPoint(-4.0f, -1.0f, 4.0f);
		leftArm7.setTextureSize(64, 64);
		leftArm7.mirror = true;
		setRotation(leftArm7, 0.0f, 0.0f, 1.047198f);
		(leftArm8 = new ModelRenderer(this, 42, 19)).addBox(-1.0f, -2.0f, -2.0f, 2, 12, 2);
		leftArm8.setRotationPoint(4.0f, -1.0f, 4.0f);
		leftArm8.setTextureSize(64, 64);
		leftArm8.mirror = true;
		setRotation(leftArm8, 0.0f, 0.0f, -1.047198f);
		(leftArm9 = new ModelRenderer(this, 42, 19)).addBox(-1.0f, -2.0f, -2.0f, 2, 12, 2);
		leftArm9.setRotationPoint(4.0f, -4.0f, 4.0f);
		leftArm9.setTextureSize(64, 64);
		leftArm9.mirror = true;
		setRotation(leftArm9, 0.0f, 0.0f, -1.570796f);
		(leftArm10 = new ModelRenderer(this, 42, 19)).addBox(-1.0f, -2.0f, -2.0f, 2, 12, 2);
		leftArm10.setRotationPoint(4.0f, -7.0f, 4.0f);
		leftArm10.setTextureSize(64, 64);
		leftArm10.mirror = true;
		setRotation(leftArm10, 0.0f, 0.0f, -2.094395f);
		(leftArm11 = new ModelRenderer(this, 42, 19)).addBox(-1.0f, -2.0f, -2.0f, 2, 12, 2);
		leftArm11.setRotationPoint(-4.0f, -7.0f, 4.0f);
		leftArm11.setTextureSize(64, 64);
		leftArm11.mirror = true;
		setRotation(leftArm11, 0.0f, 0.0f, 2.094395f);
		(leftArm12 = new ModelRenderer(this, 42, 19)).addBox(-1.0f, -2.0f, -2.0f, 2, 12, 2);
		leftArm12.setRotationPoint(-12.0f, -4.0f, 4.0f);
		leftArm12.setTextureSize(64, 64);
		leftArm12.mirror = true;
		setRotation(leftArm12, 0.0f, 0.0f, -1.570796f);
		(leftArm13 = new ModelRenderer(this, 42, 47)).addBox(-2.0f, 8.0f, -3.0f, 4, 4, 4);
		leftArm13.setRotationPoint(4.0f, -7.0f, 4.0f);
		leftArm13.setTextureSize(64, 64);
		leftArm13.mirror = true;
		setRotation(leftArm13, 0.0f, 0.0f, -2.094395f);
		(leftArm14 = new ModelRenderer(this, 42, 47)).addBox(-2.0f, 8.0f, -3.0f, 4, 4, 4);
		leftArm14.setRotationPoint(-4.0f, -7.0f, 4.0f);
		leftArm14.setTextureSize(64, 64);
		leftArm14.mirror = true;
		setRotation(leftArm14, 0.0f, 0.0f, 2.094395f);
		(leftArm15 = new ModelRenderer(this, 42, 47)).addBox(-2.0f, 8.0f, -3.0f, 4, 4, 4);
		leftArm15.setRotationPoint(4.0f, -1.0f, 4.0f);
		leftArm15.setTextureSize(64, 64);
		leftArm15.mirror = true;
		setRotation(leftArm15, 0.0f, 0.0f, -1.047198f);
		(leftArm16 = new ModelRenderer(this, 42, 47)).addBox(-2.0f, 8.0f, -3.0f, 4, 4, 4);
		leftArm16.setRotationPoint(-4.0f, -1.0f, 4.0f);
		leftArm16.setTextureSize(64, 64);
		leftArm16.mirror = true;
		setRotation(leftArm16, 0.0f, 0.0f, 1.047198f);
		(leftArm17 = new ModelRenderer(this, 42, 59)).addBox(-6.0f, 9.0f, -2.0f, 4, 2, 2);
		leftArm17.setRotationPoint(4.0f, -7.0f, 4.0f);
		leftArm17.setTextureSize(64, 64);
		leftArm17.mirror = true;
		setRotation(leftArm17, 0.0f, 0.0f, -2.094395f);
		(leftArm18 = new ModelRenderer(this, 42, 59)).addBox(-6.0f, 9.0f, -2.0f, 4, 2, 2);
		leftArm18.setRotationPoint(-4.0f, -7.0f, 4.0f);
		leftArm18.setTextureSize(64, 64);
		leftArm18.mirror = true;
		setRotation(leftArm18, 0.0f, 0.0f, 2.094395f);
		(leftArm19 = new ModelRenderer(this, 42, 59)).addBox(-6.0f, 9.0f, -2.0f, 4, 2, 2);
		leftArm19.setRotationPoint(4.0f, -1.0f, 4.0f);
		leftArm19.setTextureSize(64, 64);
		leftArm19.mirror = true;
		setRotation(leftArm19, 0.0f, 0.0f, -1.047198f);
		(leftArm20 = new ModelRenderer(this, 42, 59)).addBox(-6.0f, 9.0f, -2.0f, 4, 2, 2);
		leftArm20.setRotationPoint(-4.0f, -1.0f, 4.0f);
		leftArm20.setTextureSize(64, 64);
		leftArm20.mirror = true;
		setRotation(leftArm20, 0.0f, 0.0f, 1.047198f);
		(body4 = new ModelRenderer(this, 25, 12)).addBox(-1.0f, -2.0f, -1.0f, 2, 2, 2);
		body4.setRotationPoint(-5.0f, -8.0f, 0.0f);
		body4.setTextureSize(64, 64);
		body4.mirror = true;
		setRotation(body4, 0.0f, 0.0f, 0.0f);
		(head2 = new ModelRenderer(this, 0, 0)).addBox(-3.0f, -6.0f, -3.0f, 6, 6, 6);
		head2.setRotationPoint(-5.0f, -10.0f, -1.0f);
		head2.setTextureSize(64, 64);
		head2.mirror = true;
		setRotation(head2, 0.0f, 0.0f, 0.0f);
	}

	@Override
	public void render(MatrixStack matrix, IVertexBuilder buffer, int light, int overlay, float red, float green, float blue, float alpha) {
		head.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		rightLeg.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leftLeg.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body2.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leftArm.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leftArm2.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leftArm3.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leftArm4.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leftArm5.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leftArm6.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body3.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leftArm7.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leftArm8.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leftArm9.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leftArm10.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leftArm11.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leftArm12.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leftArm13.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leftArm14.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leftArm15.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leftArm16.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leftArm17.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leftArm18.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leftArm19.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leftArm20.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body4.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head2.render(matrix, buffer, light, overlay, red, green, blue, alpha);
	}

	private void setRotation(final ModelRenderer model, final float x, final float y, final float z) {
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
	}

	@Override
	public void setRotationAngles(MobEntity entityIn, float limbSwing, float limbSwingAmount, float ageInTicks, float netHeadYaw, float headPitch) {
		rightLeg.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f) * 1.4f * limbSwingAmount;
		rightLeg.rotateAngleY = 0.0f;
		leftLeg.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
	}
}
