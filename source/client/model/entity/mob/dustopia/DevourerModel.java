package net.tslat.aoa3.client.model.entity.mob.dustopia;

import com.mojang.blaze3d.matrix.MatrixStack;
import com.mojang.blaze3d.vertex.IVertexBuilder;
import net.minecraft.client.renderer.entity.model.EntityModel;
import net.minecraft.client.renderer.model.ModelRenderer;
import net.minecraft.entity.MobEntity;
import net.minecraft.util.math.MathHelper;

public class DevourerModel extends EntityModel<MobEntity> {
	private final ModelRenderer head;
	private final ModelRenderer body;
	private final ModelRenderer leg1;
	private final ModelRenderer leg2;
	private final ModelRenderer leg3;
	private final ModelRenderer leg4;
	private final ModelRenderer head2;
	private final ModelRenderer shape1;
	private final ModelRenderer shape2;
	private final ModelRenderer shape3;
	private final ModelRenderer shape4;
	private final ModelRenderer shape5;
	private final ModelRenderer shape6;
	private final ModelRenderer leg3p2;
	private final ModelRenderer leg4p2;
	private final ModelRenderer leg1p2;
	private final ModelRenderer leg2p2;
	private final ModelRenderer leg1p3;
	private final ModelRenderer leg2p3;
	private final ModelRenderer leg2p4;
	private final ModelRenderer leg1p4;
	private final ModelRenderer body2;
	private final ModelRenderer shape7;
	private final ModelRenderer shape8;
	private final ModelRenderer shape9;
	private final ModelRenderer shape10;
	private final ModelRenderer shape11;
	private final ModelRenderer shape12;

	public DevourerModel() {
		texWidth = 64;
		texHeight = 64;
		(head = new ModelRenderer(this, 0, 0)).addBox(-3.0f, -3.0f, -6.0f, 6, 6, 6);
		head.setPos(5.0f, 9.0f, -8.0f);
		head.setTexSize(64, 64);
		head.mirror = true;
		setRotation(head, 0.0f, 0.0f, 0.0f);
		(body = new ModelRenderer(this, 18, 25)).addBox(-6.0f, -17.0f, -8.0f, 14, 7, 10);
		body.setPos(-1.0f, 7.0f, 8.0f);
		body.setTexSize(64, 64);
		body.mirror = true;
		setRotation(body, 1.745329f, 0.0f, 0.0f);
		(leg1 = new ModelRenderer(this, 23, 15)).addBox(-4.0f, 9.0f, 3.0f, 6, 3, 6);
		leg1.setPos(-6.0f, 12.0f, 7.0f);
		leg1.setTexSize(64, 64);
		leg1.mirror = true;
		setRotation(leg1, 0.0f, 0.0f, 0.0f);
		(leg2 = new ModelRenderer(this, 23, 15)).addBox(-2.0f, 9.0f, 3.0f, 6, 3, 6);
		leg2.setPos(6.0f, 12.0f, 7.0f);
		leg2.setTexSize(64, 64);
		leg2.mirror = true;
		setRotation(leg2, 0.0f, 0.0f, 0.0f);
		(leg3 = new ModelRenderer(this, 0, 54)).addBox(-4.0f, 4.0f, -8.0f, 6, 4, 4);
		leg3.setPos(-8.0f, 15.0f, -5.0f);
		leg3.setTexSize(64, 64);
		leg3.mirror = true;
		setRotation(leg3, 0.0f, 0.0f, 0.0f);
		(leg4 = new ModelRenderer(this, 0, 54)).addBox(-2.0f, 4.0f, -8.0f, 6, 4, 4);
		leg4.setPos(8.0f, 15.0f, -5.0f);
		leg4.setTexSize(64, 64);
		leg4.mirror = true;
		setRotation(leg4, 0.0f, 0.0f, 0.0f);
		(head2 = new ModelRenderer(this, 0, 0)).addBox(-3.0f, -3.0f, -6.0f, 6, 6, 6);
		head2.setPos(-5.0f, 9.0f, -8.0f);
		head2.setTexSize(64, 64);
		head2.mirror = true;
		setRotation(head2, 0.0f, 0.0f, 0.0f);
		(shape1 = new ModelRenderer(this, 48, 15)).addBox(0.0f, -1.0f, -10.0f, 2, 1, 6);
		shape1.setPos(3.0f, 4.0f, -6.0f);
		shape1.setTexSize(64, 64);
		shape1.mirror = true;
		setRotation(shape1, 0.0f, 0.0f, 0.0f);
		(shape2 = new ModelRenderer(this, 48, 15)).addBox(0.0f, -1.0f, -10.0f, 2, 1, 6);
		shape2.setPos(10.0f, 7.0f, -8.0f);
		shape2.setTexSize(64, 64);
		shape2.mirror = true;
		setRotation(shape2, 0.0f, 0.0f, 1.570796f);
		(shape3 = new ModelRenderer(this, 26, 6)).addBox(0.0f, 0.0f, 0.0f, 2, 4, 2);
		shape3.setPos(3.0f, 4.0f, -6.0f);
		shape3.setTexSize(64, 64);
		shape3.mirror = true;
		setRotation(shape3, 0.0f, 0.0f, 0.0f);
		(shape4 = new ModelRenderer(this, 26, 6)).addBox(0.0f, 0.0f, 0.0f, 2, 4, 2);
		shape4.setPos(10.0f, 7.0f, -8.0f);
		shape4.setTexSize(64, 64);
		shape4.mirror = true;
		setRotation(shape4, 0.0f, 0.0f, 1.570796f);
		(shape5 = new ModelRenderer(this, 35, 5)).addBox(0.0f, -2.0f, -4.0f, 2, 2, 6);
		shape5.setPos(3.0f, 4.0f, -6.0f);
		shape5.setTexSize(64, 64);
		shape5.mirror = true;
		setRotation(shape5, 0.0f, 0.0f, 0.0f);
		(shape6 = new ModelRenderer(this, 35, 5)).addBox(0.0f, -2.0f, -4.0f, 2, 2, 6);
		shape6.setPos(10.0f, 7.0f, -8.0f);
		shape6.setTexSize(64, 64);
		shape6.mirror = true;
		setRotation(shape6, 0.0f, 0.0f, 1.570796f);
		(leg3p2 = new ModelRenderer(this, 0, 40)).addBox(-3.0f, 0.0f, -3.0f, 4, 9, 4);
		leg3p2.setPos(-8.0f, 15.0f, -5.0f);
		leg3p2.setTexSize(64, 64);
		leg3p2.mirror = true;
		setRotation(leg3p2, -0.5235988f, 0.0f, 0.0f);
		(leg4p2 = new ModelRenderer(this, 0, 40)).addBox(-1.0f, 0.0f, -3.0f, 4, 9, 4);
		leg4p2.setPos(8.0f, 15.0f, -5.0f);
		leg4p2.setTexSize(64, 64);
		leg4p2.mirror = true;
		setRotation(leg4p2, -0.5235988f, 0.0f, 0.0f);
		(leg1p2 = new ModelRenderer(this, 0, 14)).addBox(-3.0f, 0.0f, -2.0f, 4, 6, 4);
		leg1p2.setPos(-6.0f, 12.0f, 7.0f);
		leg1p2.setTexSize(64, 64);
		leg1p2.mirror = true;
		setRotation(leg1p2, 0.0f, 0.0f, 0.0f);
		(leg2p2 = new ModelRenderer(this, 0, 14)).addBox(-1.0f, 0.0f, -2.0f, 4, 6, 4);
		leg2p2.setPos(6.0f, 12.0f, 7.0f);
		leg2p2.setTexSize(64, 64);
		leg2p2.mirror = true;
		setRotation(leg2p2, 0.0f, 0.0f, 0.0f);
		(leg1p3 = new ModelRenderer(this, 0, 35)).addBox(-3.0f, 3.0f, 2.0f, 4, 3, 2);
		leg1p3.setPos(-6.0f, 12.0f, 7.0f);
		leg1p3.setTexSize(64, 64);
		leg1p3.mirror = true;
		setRotation(leg1p3, 0.0f, 0.0f, 0.0f);
		(leg2p3 = new ModelRenderer(this, 0, 35)).addBox(-1.0f, 3.0f, 2.0f, 4, 3, 2);
		leg2p3.setPos(6.0f, 12.0f, 7.0f);
		leg2p3.setTexSize(64, 64);
		leg2p3.mirror = true;
		setRotation(leg2p3, 0.0f, 0.0f, 0.0f);
		(leg2p4 = new ModelRenderer(this, 0, 25)).addBox(-1.0f, 3.0f, 4.0f, 4, 6, 4);
		leg2p4.setPos(6.0f, 12.0f, 7.0f);
		leg2p4.setTexSize(64, 64);
		leg2p4.mirror = true;
		setRotation(leg2p4, 0.0f, 0.0f, 0.0f);
		(leg1p4 = new ModelRenderer(this, 0, 25)).addBox(-3.0f, 3.0f, 4.0f, 4, 6, 4);
		leg1p4.setPos(-6.0f, 12.0f, 7.0f);
		leg1p4.setTexSize(64, 64);
		leg1p4.mirror = true;
		setRotation(leg1p4, 0.0f, 0.0f, 0.0f);
		(body2 = new ModelRenderer(this, 24, 42)).addBox(-6.0f, -10.0f, -8.0f, 10, 12, 10);
		body2.setPos(1.0f, 7.0f, 8.0f);
		body2.setTexSize(64, 64);
		body2.mirror = true;
		setRotation(body2, 1.745329f, 0.0f, 0.0f);
		(shape7 = new ModelRenderer(this, 26, 6)).addBox(0.0f, 0.0f, 0.0f, 2, 4, 2);
		shape7.setPos(-5.0f, 4.0f, -6.0f);
		shape7.setTexSize(64, 64);
		shape7.mirror = true;
		setRotation(shape7, 0.0f, 0.0f, 0.0f);
		(shape8 = new ModelRenderer(this, 35, 5)).addBox(0.0f, -2.0f, -4.0f, 2, 2, 6);
		shape8.setPos(-5.0f, 4.0f, -6.0f);
		shape8.setTexSize(64, 64);
		shape8.mirror = true;
		setRotation(shape8, 0.0f, 0.0f, 0.0f);
		(shape9 = new ModelRenderer(this, 48, 15)).addBox(0.0f, -1.0f, -10.0f, 2, 1, 6);
		shape9.setPos(-5.0f, 4.0f, -6.0f);
		shape9.setTexSize(64, 64);
		shape9.mirror = true;
		setRotation(shape9, 0.0f, 0.0f, 0.0f);
		(shape10 = new ModelRenderer(this, 26, 6)).addBox(0.0f, 0.0f, 0.0f, 2, 4, 2);
		shape10.setPos(-10.0f, 9.0f, -8.0f);
		shape10.setTexSize(64, 64);
		shape10.mirror = true;
		setRotation(shape10, 0.0f, 0.0f, -1.570796f);
		(shape11 = new ModelRenderer(this, 35, 5)).addBox(0.0f, -2.0f, -4.0f, 2, 2, 6);
		shape11.setPos(-10.0f, 9.0f, -8.0f);
		shape11.setTexSize(64, 64);
		shape11.mirror = true;
		setRotation(shape11, 0.0f, 0.0f, -1.570796f);
		(shape12 = new ModelRenderer(this, 48, 15)).addBox(0.0f, -1.0f, -10.0f, 2, 1, 6);
		shape12.setPos(-10.0f, 9.0f, -8.0f);
		shape12.setTexSize(64, 64);
		shape12.mirror = true;
		setRotation(shape12, 0.0f, 0.0f, -1.570796f);
	}

	@Override
	public void renderToBuffer(MatrixStack matrix, IVertexBuilder buffer, int light, int overlay, float red, float green, float blue, float alpha) {
		head.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg1.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg2.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg3.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg4.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head2.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		shape1.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		shape2.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		shape3.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		shape4.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		shape5.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		shape6.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg3p2.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg4p2.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg1p2.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg2p2.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg1p3.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg2p3.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg2p4.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg1p4.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body2.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		shape7.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		shape8.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		shape9.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		shape10.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		shape11.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		shape12.render(matrix, buffer, light, overlay, red, green, blue, alpha);
	}

	private void setRotation(final ModelRenderer model, final float x, final float y, final float z) {
		model.xRot = x;
		model.yRot = y;
		model.zRot = z;
	}

	@Override
	public void setupAnim(MobEntity entityIn, float limbSwing, float limbSwingAmount, float ageInTicks, float netHeadYaw, float headPitch) {
		leg1.xRot = MathHelper.cos(limbSwing * 0.6662f) * 1.4f * limbSwingAmount;
		leg1.yRot = 0.0f;
		leg1p2.xRot = MathHelper.cos(limbSwing * 0.6662f) * 1.4f * limbSwingAmount;
		leg1p2.yRot = 0.0f;
		leg1p3.xRot = MathHelper.cos(limbSwing * 0.6662f) * 1.4f * limbSwingAmount;
		leg1p3.yRot = 0.0f;
		leg1p4.xRot = MathHelper.cos(limbSwing * 0.6662f) * 1.4f * limbSwingAmount;
		leg1p4.yRot = 0.0f;
		leg3.xRot = MathHelper.cos(limbSwing * 0.6662f) * 1.4f * limbSwingAmount;
		leg3.yRot = 0.0f;
		leg3p2.xRot = MathHelper.cos(limbSwing * 0.6662f) * 1.4f * limbSwingAmount - 0.523f;
		leg3p2.yRot = 0.0f;
		leg2.xRot = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
		leg4.xRot = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
		leg4p2.xRot = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount - 0.523f;
		leg2p2.xRot = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
		leg2p3.xRot = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
		leg2p4.xRot = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
	}
}
