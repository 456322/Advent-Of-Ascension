package net.tslat.aoa3.client.model.entity.mob.dustopia;

import com.mojang.blaze3d.matrix.MatrixStack;
import com.mojang.blaze3d.vertex.IVertexBuilder;
import net.minecraft.client.renderer.entity.model.EntityModel;
import net.minecraft.client.renderer.model.ModelRenderer;
import net.minecraft.entity.MobEntity;

public class DusteivaModel extends EntityModel<MobEntity> {
	private final ModelRenderer head;
	private final ModelRenderer body;
	private final ModelRenderer body2;
	private final ModelRenderer body3;
	private final ModelRenderer body4;
	private final ModelRenderer body5;
	private final ModelRenderer body6;
	private final ModelRenderer body7;
	private final ModelRenderer body8;
	private final ModelRenderer body9;
	private final ModelRenderer body10;
	private final ModelRenderer body11;
	private final ModelRenderer body12;
	private final ModelRenderer body13;
	private final ModelRenderer body14;
	private final ModelRenderer body15;
	private final ModelRenderer body16;
	private final ModelRenderer body17;
	private final ModelRenderer body18;
	private final ModelRenderer body19;
	private final ModelRenderer body20;
	private final ModelRenderer body21;
	private final ModelRenderer head2;
	private final ModelRenderer head3;
	private final ModelRenderer head4;

	public DusteivaModel() {
		texWidth = 64;
		texHeight = 64;
		(head = new ModelRenderer(this, 22, 0)).addBox(-2.0f, -13.0f, -2.0f, 4, 5, 2);
		head.setPos(0.0f, -4.0f, 1.0f);
		head.setTexSize(64, 64);
		head.mirror = true;
		setRotation(head, 0.0f, 0.0f, 0.0f);
		(body = new ModelRenderer(this, 47, 26)).addBox(-1.0f, 24.0f, -1.0f, 2, 4, 2);
		body.setPos(0.0f, -4.0f, 0.0f);
		body.setTexSize(64, 64);
		body.mirror = true;
		setRotation(body, 0.0f, 0.0f, 0.0f);
		(body2 = new ModelRenderer(this, 33, 16)).addBox(2.0f, 19.0f, -1.0f, 6, 4, 2);
		body2.setPos(0.0f, -4.0f, 0.0f);
		body2.setTexSize(64, 64);
		body2.mirror = true;
		setRotation(body2, 0.0f, 0.0f, 0.0f);
		(body3 = new ModelRenderer(this, 34, 26)).addBox(-2.0f, 12.0f, -1.0f, 4, 12, 2);
		body3.setPos(0.0f, -4.0f, 0.0f);
		body3.setTexSize(64, 64);
		body3.mirror = true;
		setRotation(body3, 0.0f, 0.0f, 0.0f);
		(body4 = new ModelRenderer(this, 16, 26)).addBox(-3.0f, 0.0f, -1.0f, 6, 12, 2);
		body4.setPos(0.0f, -4.0f, 0.0f);
		body4.setTexSize(64, 64);
		body4.mirror = true;
		setRotation(body4, 0.0f, 0.0f, 0.0f);
		(body5 = new ModelRenderer(this, 1, 23)).addBox(8.0f, 20.0f, -1.0f, 4, 2, 2);
		body5.setPos(0.0f, -4.0f, 0.0f);
		body5.setTexSize(64, 64);
		body5.mirror = true;
		setRotation(body5, 0.0f, 0.0f, 0.0f);
		(body6 = new ModelRenderer(this, 49, 10)).addBox(4.0f, 5.0f, -1.0f, 3, 2, 2);
		body6.setPos(1.0f, -4.0f, 0.0f);
		body6.setTexSize(64, 64);
		body6.mirror = true;
		setRotation(body6, 0.0f, 0.0f, 0.0f);
		(body7 = new ModelRenderer(this, 1, 23)).addBox(9.0f, 2.0f, -1.0f, 4, 2, 2);
		body7.setPos(0.0f, -4.0f, 0.0f);
		body7.setTexSize(64, 64);
		body7.mirror = true;
		setRotation(body7, 0.0f, 0.0f, 0.0f);
		(body8 = new ModelRenderer(this, 33, 16)).addBox(3.0f, 7.0f, -1.0f, 6, 4, 2);
		body8.setPos(0.0f, -4.0f, 0.0f);
		body8.setTexSize(64, 64);
		body8.mirror = true;
		setRotation(body8, 0.0f, 0.0f, 0.0f);
		(body9 = new ModelRenderer(this, 1, 23)).addBox(9.0f, 8.0f, -1.0f, 4, 2, 2);
		body9.setPos(0.0f, -4.0f, 0.0f);
		body9.setTexSize(64, 64);
		body9.mirror = true;
		setRotation(body9, 0.0f, 0.0f, 0.0f);
		(body10 = new ModelRenderer(this, 1, 23)).addBox(8.0f, 14.0f, -1.0f, 4, 2, 2);
		body10.setPos(0.0f, -4.0f, 0.0f);
		body10.setTexSize(64, 64);
		body10.mirror = true;
		setRotation(body10, 0.0f, 0.0f, 0.0f);
		(body11 = new ModelRenderer(this, 33, 16)).addBox(2.0f, 13.0f, -1.0f, 6, 4, 2);
		body11.setPos(0.0f, -4.0f, 0.0f);
		body11.setTexSize(64, 64);
		body11.mirror = true;
		setRotation(body11, 0.0f, 0.0f, 0.0f);
		(body12 = new ModelRenderer(this, 32, 10)).addBox(-7.0f, 5.0f, -1.0f, 3, 2, 2);
		body12.setPos(-1.0f, -4.0f, 0.0f);
		body12.setTexSize(64, 64);
		body12.mirror = true;
		setRotation(body12, 0.0f, 0.0f, 0.0f);
		(body13 = new ModelRenderer(this, 16, 16)).addBox(-9.0f, 7.0f, -1.0f, 6, 4, 2);
		body13.setPos(0.0f, -4.0f, 0.0f);
		body13.setTexSize(64, 64);
		body13.mirror = true;
		setRotation(body13, 0.0f, 0.0f, 0.0f);
		(body14 = new ModelRenderer(this, 16, 16)).addBox(-8.0f, 13.0f, -1.0f, 6, 4, 2);
		body14.setPos(0.0f, -4.0f, 0.0f);
		body14.setTexSize(64, 64);
		body14.mirror = true;
		setRotation(body14, 0.0f, 0.0f, 0.0f);
		(body15 = new ModelRenderer(this, 16, 16)).addBox(-8.0f, 19.0f, -1.0f, 6, 4, 2);
		body15.setPos(0.0f, -4.0f, 0.0f);
		body15.setTexSize(64, 64);
		body15.mirror = true;
		setRotation(body15, 0.0f, 0.0f, 0.0f);
		(body16 = new ModelRenderer(this, 1, 16)).addBox(-13.0f, 8.0f, -1.0f, 4, 2, 2);
		body16.setPos(0.0f, -4.0f, 0.0f);
		body16.setTexSize(64, 64);
		body16.mirror = true;
		setRotation(body16, 0.0f, 0.0f, 0.0f);
		(body17 = new ModelRenderer(this, 1, 16)).addBox(-12.0f, 14.0f, -1.0f, 4, 2, 2);
		body17.setPos(0.0f, -4.0f, 0.0f);
		body17.setTexSize(64, 64);
		body17.mirror = true;
		setRotation(body17, 0.0f, 0.0f, 0.0f);
		(body18 = new ModelRenderer(this, 1, 16)).addBox(-12.0f, 20.0f, -1.0f, 4, 2, 2);
		body18.setPos(0.0f, -4.0f, 0.0f);
		body18.setTexSize(64, 64);
		body18.mirror = true;
		setRotation(body18, 0.0f, 0.0f, 0.0f);
		(body19 = new ModelRenderer(this, 1, 16)).addBox(-13.0f, 2.0f, -1.0f, 4, 2, 2);
		body19.setPos(0.0f, -4.0f, 0.0f);
		body19.setTexSize(64, 64);
		body19.mirror = true;
		setRotation(body19, 0.0f, 0.0f, 0.0f);
		(body20 = new ModelRenderer(this, 33, 16)).addBox(3.0f, 1.0f, -1.0f, 6, 4, 2);
		body20.setPos(0.0f, -4.0f, 0.0f);
		body20.setTexSize(64, 64);
		body20.mirror = true;
		setRotation(body20, 0.0f, 0.0f, 0.0f);
		(body21 = new ModelRenderer(this, 16, 16)).addBox(-9.0f, 1.0f, -1.0f, 6, 4, 2);
		body21.setPos(0.0f, -4.0f, 0.0f);
		body21.setTexSize(64, 64);
		body21.mirror = true;
		setRotation(body21, 0.0f, 0.0f, 0.0f);
		(head2 = new ModelRenderer(this, 50, 0)).addBox(4.0f, -6.0f, -2.0f, 5, 4, 2);
		head2.setPos(0.0f, -4.0f, 1.0f);
		head2.setTexSize(64, 64);
		head2.mirror = true;
		setRotation(head2, 0.0f, 0.0f, 0.0f);
		(head3 = new ModelRenderer(this, 0, 0)).addBox(-4.0f, -8.0f, -2.0f, 8, 8, 2);
		head3.setPos(0.0f, -4.0f, 1.0f);
		head3.setTexSize(64, 64);
		head3.mirror = true;
		setRotation(head3, 0.0f, 0.0f, 0.0f);
		(head4 = new ModelRenderer(this, 35, 0)).addBox(-9.0f, -6.0f, -2.0f, 5, 4, 2);
		head4.setPos(0.0f, -4.0f, 1.0f);
		head4.setTexSize(64, 64);
		head4.mirror = true;
		setRotation(head4, 0.0f, 0.0f, 0.0f);
	}

	@Override
	public void renderToBuffer(MatrixStack matrix, IVertexBuilder buffer, int light, int overlay, float red, float green, float blue, float alpha) {
		head.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body2.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body3.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body4.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body5.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body6.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body7.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body8.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body9.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body10.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body11.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body12.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body13.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body14.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body15.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body16.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body17.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body18.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body19.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body20.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body21.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head2.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head3.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head4.render(matrix, buffer, light, overlay, red, green, blue, alpha);
	}

	private void setRotation(final ModelRenderer model, final float x, final float y, final float z) {
		model.xRot = x;
		model.yRot = y;
		model.zRot = z;
	}

	@Override
	public void setupAnim(MobEntity entityIn, float limbSwing, float limbSwingAmount, float ageInTicks, float netHeadYaw, float headPitch) {
	}
}
