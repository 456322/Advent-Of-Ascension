package net.tslat.aoa3.client.model.entity.mob.overworld;

import com.mojang.blaze3d.matrix.MatrixStack;
import com.mojang.blaze3d.vertex.IVertexBuilder;
import net.minecraft.client.renderer.entity.model.EntityModel;
import net.minecraft.client.renderer.model.ModelRenderer;
import net.minecraft.entity.MobEntity;
import net.minecraft.util.math.MathHelper;

public class BonebackModel extends EntityModel<MobEntity> {
	private final ModelRenderer head;
	private final ModelRenderer body;
	private final ModelRenderer leg1;
	private final ModelRenderer leg2;
	private final ModelRenderer leg3;
	private final ModelRenderer leg4;
	private final ModelRenderer leg1p2;
	private final ModelRenderer leg3p2;
	private final ModelRenderer leg4p2;
	private final ModelRenderer leg2p2;
	private final ModelRenderer body2;
	private final ModelRenderer body3;
	private final ModelRenderer leg4p3;
	private final ModelRenderer leg2p3;
	private final ModelRenderer leg3p3;
	private final ModelRenderer leg1p3;
	private final ModelRenderer leg4p4;
	private final ModelRenderer leg2p4;
	private final ModelRenderer leg3p4;
	private final ModelRenderer leg1p4;
	private final ModelRenderer body4;
	private final ModelRenderer body7;
	private final ModelRenderer body5;
	private final ModelRenderer body6;
	private final ModelRenderer head2;
	private final ModelRenderer head3;
	private final ModelRenderer head4;
	private final ModelRenderer head5;
	private final ModelRenderer head6;
	private final ModelRenderer head7;
	private final ModelRenderer head8;
	private final ModelRenderer head9;
	private final ModelRenderer head10;
	private final ModelRenderer head11;
	private final ModelRenderer head12;
	private final ModelRenderer head13;
	private final ModelRenderer head14;
	private final ModelRenderer head15;
	private final ModelRenderer head16;
	private final ModelRenderer head17;

	public BonebackModel() {
		texWidth = 64;
		texHeight = 64;
		(head = new ModelRenderer(this, 0, 53)).addBox(-1.5f, -6.0f, -6.0f, 1, 2, 5);
		head.setPos(1.0f, 17.0f, -10.0f);
		head.setTexSize(64, 64);
		head.mirror = true;
		setRotation(head, 0.0f, 0.0f, 0.0f);
		(body = new ModelRenderer(this, 41, 51)).addBox(-4.0f, -8.0f, -2.0f, 8, 10, 2);
		body.setPos(0.0f, 8.0f, 4.0f);
		body.setTexSize(64, 64);
		body.mirror = true;
		setRotation(body, 1.570796f, 0.0f, 0.0f);
		(leg1 = new ModelRenderer(this, 13, 29)).addBox(1.0f, -2.0f, -3.0f, 3, 6, 6);
		leg1.setPos(-8.0f, 16.0f, 7.0f);
		leg1.setTexSize(64, 64);
		leg1.mirror = true;
		setRotation(leg1, 0.0f, 0.0f, 0.0f);
		(leg2 = new ModelRenderer(this, 13, 29)).addBox(-4.0f, -2.0f, -3.0f, 3, 6, 6);
		leg2.setPos(8.0f, 16.0f, 7.0f);
		leg2.setTexSize(64, 64);
		leg2.mirror = true;
		setRotation(leg2, 0.0f, 0.0f, 0.0f);
		(leg3 = new ModelRenderer(this, 13, 29)).addBox(1.0f, -2.0f, -4.0f, 3, 6, 6);
		leg3.setPos(-8.0f, 16.0f, -5.0f);
		leg3.setTexSize(64, 64);
		leg3.mirror = true;
		setRotation(leg3, 0.0f, 0.0f, 0.0f);
		(leg4 = new ModelRenderer(this, 13, 29)).addBox(-4.0f, -2.0f, -4.0f, 3, 6, 6);
		leg4.setPos(8.0f, 16.0f, -5.0f);
		leg4.setTexSize(64, 64);
		leg4.mirror = true;
		setRotation(leg4, 0.0f, 0.0f, 0.0f);
		(leg1p2 = new ModelRenderer(this, 20, 42)).addBox(0.0f, 6.0f, -7.0f, 2, 2, 8);
		leg1p2.setPos(-8.0f, 16.0f, 7.0f);
		leg1p2.setTexSize(64, 64);
		leg1p2.mirror = true;
		setRotation(leg1p2, 0.0f, 0.0f, 0.0f);
		(leg3p2 = new ModelRenderer(this, 20, 42)).addBox(0.0f, 6.0f, -8.0f, 2, 2, 8);
		leg3p2.setPos(-8.0f, 16.0f, -5.0f);
		leg3p2.setTexSize(64, 64);
		leg3p2.mirror = true;
		setRotation(leg3p2, 0.0f, 0.0f, 0.0f);
		(leg4p2 = new ModelRenderer(this, 20, 42)).addBox(2.0f, 6.0f, -8.0f, 2, 2, 8);
		leg4p2.setPos(8.0f, 16.0f, -5.0f);
		leg4p2.setTexSize(64, 64);
		leg4p2.mirror = true;
		setRotation(leg4p2, 0.0f, 0.0f, 0.0f);
		(leg2p2 = new ModelRenderer(this, 20, 42)).addBox(2.0f, 6.0f, -7.0f, 2, 2, 8);
		leg2p2.setPos(8.0f, 16.0f, 7.0f);
		leg2p2.setTexSize(64, 64);
		leg2p2.mirror = true;
		setRotation(leg2p2, 0.0f, 0.0f, 0.0f);
		(body2 = new ModelRenderer(this, 18, 16)).addBox(-4.0f, -11.0f, -2.0f, 2, 7, 4);
		body2.setPos(3.0f, 16.0f, 5.0f);
		body2.setTexSize(64, 64);
		body2.mirror = true;
		setRotation(body2, -0.4363323f, 0.0f, 0.0f);
		(body3 = new ModelRenderer(this, 41, 34)).addBox(-4.0f, -8.0f, -2.0f, 8, 14, 2);
		body3.setPos(0.0f, 10.0f, 2.0f);
		body3.setTexSize(64, 64);
		body3.mirror = true;
		setRotation(body3, 1.570796f, 0.0f, 0.0f);
		(leg4p3 = new ModelRenderer(this, 0, 16)).addBox(-1.0f, 0.0f, -3.0f, 4, 8, 4);
		leg4p3.setPos(8.0f, 16.0f, -5.0f);
		leg4p3.setTexSize(64, 64);
		leg4p3.mirror = true;
		setRotation(leg4p3, 0.0f, 0.0f, 0.0f);
		(leg2p3 = new ModelRenderer(this, 0, 16)).addBox(-1.0f, 0.0f, -2.0f, 4, 8, 4);
		leg2p3.setPos(8.0f, 16.0f, 7.0f);
		leg2p3.setTexSize(64, 64);
		leg2p3.mirror = true;
		setRotation(leg2p3, 0.0f, 0.0f, 0.0f);
		(leg3p3 = new ModelRenderer(this, 0, 16)).addBox(-3.0f, 0.0f, -3.0f, 4, 8, 4);
		leg3p3.setPos(-8.0f, 16.0f, -5.0f);
		leg3p3.setTexSize(64, 64);
		leg3p3.mirror = true;
		setRotation(leg3p3, 0.0f, 0.0f, 0.0f);
		(leg1p3 = new ModelRenderer(this, 0, 16)).addBox(-3.0f, 0.0f, -2.0f, 4, 8, 4);
		leg1p3.setPos(-8.0f, 16.0f, 7.0f);
		leg1p3.setTexSize(64, 64);
		leg1p3.mirror = true;
		setRotation(leg1p3, 0.0f, 0.0f, 0.0f);
		(leg4p4 = new ModelRenderer(this, 20, 42)).addBox(-2.0f, 6.0f, -8.0f, 2, 2, 8);
		leg4p4.setPos(8.0f, 16.0f, -5.0f);
		leg4p4.setTexSize(64, 64);
		leg4p4.mirror = true;
		setRotation(leg4p4, 0.0f, 0.0f, 0.0f);
		(leg2p4 = new ModelRenderer(this, 20, 42)).addBox(-2.0f, 6.0f, -7.0f, 2, 2, 8);
		leg2p4.setPos(8.0f, 16.0f, 7.0f);
		leg2p4.setTexSize(64, 64);
		leg2p4.mirror = true;
		setRotation(leg2p4, 0.0f, 0.0f, 0.0f);
		(leg3p4 = new ModelRenderer(this, 20, 42)).addBox(-4.0f, 6.0f, -8.0f, 2, 2, 8);
		leg3p4.setPos(-8.0f, 16.0f, -5.0f);
		leg3p4.setTexSize(64, 64);
		leg3p4.mirror = true;
		setRotation(leg3p4, 0.0f, 0.0f, 0.0f);
		(leg1p4 = new ModelRenderer(this, 20, 42)).addBox(-4.0f, 6.0f, -7.0f, 2, 2, 8);
		leg1p4.setPos(-8.0f, 16.0f, 7.0f);
		leg1p4.setTexSize(64, 64);
		leg1p4.mirror = true;
		setRotation(leg1p4, 0.0f, 0.0f, 0.0f);
		(body4 = new ModelRenderer(this, 32, 6)).addBox(-4.0f, -10.0f, -4.0f, 8, 18, 8);
		body4.setPos(0.0f, 16.0f, 2.0f);
		body4.setTexSize(64, 64);
		body4.mirror = true;
		setRotation(body4, 1.570796f, 0.0f, 0.0f);
		(body7 = new ModelRenderer(this, 18, 16)).addBox(-4.0f, -10.0f, -4.0f, 2, 7, 4);
		body7.setPos(3.0f, 14.0f, -2.0f);
		body7.setTexSize(64, 64);
		body7.mirror = true;
		setRotation(body7, 0.6108652f, 0.0f, 0.0f);
		(body5 = new ModelRenderer(this, 18, 16)).addBox(-4.0f, -11.0f, -4.0f, 2, 7, 4);
		body5.setPos(3.0f, 14.0f, 1.0f);
		body5.setTexSize(64, 64);
		body5.mirror = true;
		setRotation(body5, 0.1745329f, 0.0f, 0.0f);
		(body6 = new ModelRenderer(this, 18, 16)).addBox(-4.0f, -12.0f, -4.0f, 2, 7, 4);
		body6.setPos(3.0f, 14.0f, 5.0f);
		body6.setTexSize(64, 64);
		body6.mirror = true;
		setRotation(body6, 0.0f, 0.0f, 0.0f);
		(head2 = new ModelRenderer(this, 0, 0)).addBox(2.0f, 0.0f, -3.0f, 1, 2, 1);
		head2.setPos(1.0f, 17.0f, -10.0f);
		head2.setTexSize(64, 64);
		head2.mirror = true;
		setRotation(head2, 0.0f, 0.0f, 0.0f);
		(head3 = new ModelRenderer(this, 0, 43)).addBox(-2.0f, -9.0f, -6.0f, 2, 3, 5);
		head3.setPos(1.0f, 17.0f, -10.0f);
		head3.setTexSize(64, 64);
		head3.mirror = true;
		setRotation(head3, 0.0f, 0.0f, 0.0f);
		(head4 = new ModelRenderer(this, 0, 0)).addBox(-4.0f, -4.0f, -6.0f, 6, 6, 8);
		head4.setPos(1.0f, 17.0f, -10.0f);
		head4.setTexSize(64, 64);
		head4.mirror = true;
		setRotation(head4, 0.0f, 0.0f, 0.0f);
		(head5 = new ModelRenderer(this, 22, 0)).addBox(2.0f, -0.5f, -4.0f, 1, 2, 1);
		head5.setPos(1.0f, 17.0f, -10.0f);
		head5.setTexSize(64, 64);
		head5.mirror = true;
		setRotation(head5, 0.0f, 0.0f, 0.0f);
		(head6 = new ModelRenderer(this, 0, 0)).addBox(2.0f, 0.0f, -5.0f, 1, 2, 1);
		head6.setPos(1.0f, 17.0f, -10.0f);
		head6.setTexSize(64, 64);
		head6.mirror = true;
		setRotation(head6, 0.0f, 0.0f, 0.0f);
		(head7 = new ModelRenderer(this, 0, 0)).addBox(-5.0f, 0.0f, -3.0f, 1, 2, 1);
		head7.setPos(1.0f, 17.0f, -10.0f);
		head7.setTexSize(64, 64);
		head7.mirror = true;
		setRotation(head7, 0.0f, 0.0f, 0.0f);
		(head8 = new ModelRenderer(this, 0, 0)).addBox(-5.0f, 0.0f, -5.0f, 1, 2, 1);
		head8.setPos(1.0f, 17.0f, -10.0f);
		head8.setTexSize(64, 64);
		head8.mirror = true;
		setRotation(head8, 0.0f, 0.0f, 0.0f);
		(head9 = new ModelRenderer(this, 0, 0)).addBox(-4.0f, 0.0f, -7.0f, 1, 2, 1);
		head9.setPos(1.0f, 17.0f, -10.0f);
		head9.setTexSize(64, 64);
		head9.mirror = true;
		setRotation(head9, 0.0f, 0.0f, 0.0f);
		(head10 = new ModelRenderer(this, 0, 0)).addBox(1.0f, 0.0f, -7.0f, 1, 2, 1);
		head10.setPos(1.0f, 17.0f, -10.0f);
		head10.setTexSize(64, 64);
		head10.mirror = true;
		setRotation(head10, 0.0f, 0.0f, 0.0f);
		(head11 = new ModelRenderer(this, 0, 0)).addBox(-2.0f, 0.0f, -7.0f, 1, 2, 1);
		head11.setPos(1.0f, 17.0f, -10.0f);
		head11.setTexSize(64, 64);
		head11.mirror = true;
		setRotation(head11, 0.0f, 0.0f, 0.0f);
		(head12 = new ModelRenderer(this, 0, 0)).addBox(-1.0f, 0.0f, -7.0f, 1, 2, 1);
		head12.setPos(1.0f, 17.0f, -10.0f);
		head12.setTexSize(64, 64);
		head12.mirror = true;
		setRotation(head12, 0.0f, 0.0f, 0.0f);
		(head13 = new ModelRenderer(this, 22, 0)).addBox(0.0f, -0.5f, -7.0f, 1, 2, 1);
		head13.setPos(1.0f, 17.0f, -10.0f);
		head13.setTexSize(64, 64);
		head13.mirror = true;
		setRotation(head13, 0.0f, 0.0f, 0.0f);
		(head14 = new ModelRenderer(this, 22, 0)).addBox(-3.0f, -0.5f, -7.0f, 1, 2, 1);
		head14.setPos(1.0f, 17.0f, -10.0f);
		head14.setTexSize(64, 64);
		head14.mirror = true;
		setRotation(head14, 0.0f, 0.0f, 0.0f);
		(head15 = new ModelRenderer(this, 22, 0)).addBox(2.0f, -0.5f, -6.0f, 1, 2, 1);
		head15.setPos(1.0f, 17.0f, -10.0f);
		head15.setTexSize(64, 64);
		head15.mirror = true;
		setRotation(head15, 0.0f, 0.0f, 0.0f);
		(head16 = new ModelRenderer(this, 22, 0)).addBox(-5.0f, -0.5f, -4.0f, 1, 2, 1);
		head16.setPos(1.0f, 17.0f, -10.0f);
		head16.setTexSize(64, 64);
		head16.mirror = true;
		setRotation(head16, 0.0f, 0.0f, 0.0f);
		(head17 = new ModelRenderer(this, 22, 0)).addBox(-5.0f, -0.5f, -6.0f, 1, 2, 1);
		head17.setPos(1.0f, 17.0f, -10.0f);
		head17.setTexSize(64, 64);
		head17.mirror = true;
		setRotation(head17, 0.0f, 0.0f, 0.0f);
	}

	@Override
	public void setupAnim(MobEntity entityIn, float limbSwing, float limbSwingAmount, float ageInTicks, float netHeadYaw, float headPitch) {
		leg1.xRot = MathHelper.cos(limbSwing * 0.6662f) * 1.4f * limbSwingAmount;
		leg2.xRot = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
		leg3.xRot = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
		leg4.xRot = MathHelper.cos(limbSwing * 0.6662f) * 1.4f * limbSwingAmount;
		leg1p2.xRot = MathHelper.cos(limbSwing * 0.6662f) * 1.4f * limbSwingAmount;
		leg2p2.xRot = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
		leg3p2.xRot = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
		leg4p2.xRot = MathHelper.cos(limbSwing * 0.6662f) * 1.4f * limbSwingAmount;
		leg1p3.xRot = MathHelper.cos(limbSwing * 0.6662f) * 1.4f * limbSwingAmount;
		leg2p3.xRot = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
		leg3p3.xRot = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
		leg4p3.xRot = MathHelper.cos(limbSwing * 0.6662f) * 1.4f * limbSwingAmount;
		leg1p4.xRot = MathHelper.cos(limbSwing * 0.6662f) * 1.4f * limbSwingAmount;
		leg2p4.xRot = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
		leg3p4.xRot = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
		leg4p4.xRot = MathHelper.cos(limbSwing * 0.6662f) * 1.4f * limbSwingAmount;
	}

	@Override
	public void renderToBuffer(MatrixStack matrix, IVertexBuilder buffer, int light, int overlay, float red, float green, float blue, float alpha) {
		head.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg1.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg2.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg3.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg4.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg1p2.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg3p2.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg4p2.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg2p2.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body2.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body3.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg4p3.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg2p3.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg3p3.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg1p3.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg4p4.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg2p4.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg3p4.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg1p4.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body4.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body7.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body5.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body6.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head2.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head3.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head4.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head5.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head6.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head7.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head8.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head9.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head10.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head11.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head12.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head13.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head14.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head15.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head16.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head17.render(matrix, buffer, light, overlay, red, green, blue, alpha);
	}

	private void setRotation(final ModelRenderer model, final float x, final float y, final float z) {
		model.xRot = x;
		model.yRot = y;
		model.zRot = z;
	}
}
