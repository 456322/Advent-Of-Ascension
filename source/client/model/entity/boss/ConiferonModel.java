package net.tslat.aoa3.client.model.entity.boss;

import com.mojang.blaze3d.matrix.MatrixStack;
import com.mojang.blaze3d.vertex.IVertexBuilder;
import net.minecraft.client.renderer.entity.model.EntityModel;
import net.minecraft.client.renderer.model.ModelRenderer;
import net.minecraft.entity.MobEntity;
import net.minecraft.util.math.MathHelper;

public class ConiferonModel extends EntityModel<MobEntity> {
	private final ModelRenderer shape1;
	private final ModelRenderer shape2;
	private final ModelRenderer shape3;
	private final ModelRenderer shape4;
	private final ModelRenderer shape5;
	private final ModelRenderer shape6;
	private final ModelRenderer shape7;
	private final ModelRenderer ra1;
	private final ModelRenderer ra2;
	private final ModelRenderer ra3;
	private final ModelRenderer ra4;
	private final ModelRenderer ra5;
	private final ModelRenderer ra6;
	private final ModelRenderer ra7;
	private final ModelRenderer ra8;
	private final ModelRenderer ra9;
	private final ModelRenderer la1;
	private final ModelRenderer la2;
	private final ModelRenderer la3;
	private final ModelRenderer la4;
	private final ModelRenderer la5;
	private final ModelRenderer la6;
	private final ModelRenderer la7;
	private final ModelRenderer la8;
	private final ModelRenderer la9;
	private final ModelRenderer shape8;
	private final ModelRenderer shape9;
	private final ModelRenderer shape10;
	private final ModelRenderer shape11;
	private final ModelRenderer shape12;
	private final ModelRenderer shape13;
	private final ModelRenderer shape14;
	private final ModelRenderer shape15;
	private final ModelRenderer shape16;
	private final ModelRenderer shape17;
	private final ModelRenderer shape18;
	private final ModelRenderer shape19;
	private final ModelRenderer shape20;
	private final ModelRenderer shape21;
	private final ModelRenderer shape22;
	private final ModelRenderer shape23;
	private final ModelRenderer shape24;
	private final ModelRenderer shape25;
	private final ModelRenderer shape26;
	private final ModelRenderer shape27;
	private final ModelRenderer la10;
	private final ModelRenderer ra10;
	private final ModelRenderer shape28;
	private final ModelRenderer shape29;
	private final ModelRenderer shape30;
	private final ModelRenderer shape31;
	private final ModelRenderer shape32;

	public ConiferonModel() {
		textureWidth = 256;
		textureHeight = 64;
		(shape1 = new ModelRenderer(this, 67, 47)).addBox(0.0f, 0.0f, 0.0f, 14, 2, 14);
		shape1.setRotationPoint(-7.0f, 3.0f, -7.0f);
		shape1.setTextureSize(256, 64);
		shape1.mirror = true;
		setRotation(shape1, 0.0f, 0.0f, 0.0f);
		(shape2 = new ModelRenderer(this, 215, 49)).addBox(-1.0f, 20.0f, -1.0f, 8, 6, 8);
		shape2.setRotationPoint(5.0f, -24.0f, 7.0f);
		shape2.setTextureSize(256, 64);
		shape2.mirror = true;
		setRotation(shape2, 0.0f, 0.0f, 0.0f);
		(shape3 = new ModelRenderer(this, 0, 27)).addBox(9.0f, 8.0f, 9.0f, 6, 2, 6);
		shape3.setRotationPoint(-8.0f, 14.0f, -8.0f);
		shape3.setTextureSize(256, 64);
		shape3.mirror = true;
		setRotation(shape3, 0.0f, 0.0f, 0.0f);
		(shape4 = new ModelRenderer(this, 67, 47)).addBox(0.0f, 0.0f, 0.0f, 14, 2, 14);
		shape4.setRotationPoint(-7.0f, 12.0f, -7.0f);
		shape4.setTextureSize(256, 64);
		shape4.mirror = true;
		setRotation(shape4, 0.0f, 0.0f, 0.0f);
		(shape5 = new ModelRenderer(this, 0, 0)).addBox(0.0f, 0.0f, 0.0f, 16, 7, 16);
		shape5.setRotationPoint(-8.0f, 5.0f, -8.0f);
		shape5.setTextureSize(256, 64);
		shape5.mirror = true;
		setRotation(shape5, 0.0f, 0.0f, 0.0f);
		(shape6 = new ModelRenderer(this, 175, 51)).addBox(-5.0f, 8.0f, -4.0f, 10, 4, 8);
		shape6.setRotationPoint(0.0f, -15.0f, -9.0f);
		shape6.setTextureSize(256, 64);
		shape6.mirror = true;
		setRotation(shape6, 0.0f, 0.0f, 0.0f);
		(shape7 = new ModelRenderer(this, 115, 25)).addBox(2.0f, -7.0f, -4.0f, 3, 3, 3);
		shape7.setRotationPoint(0.0f, -15.0f, -9.0f);
		shape7.setTextureSize(256, 64);
		shape7.mirror = true;
		setRotation(shape7, 0.0f, 0.0f, 0.0f);
		(ra1 = new ModelRenderer(this, 129, 42)).addBox(-6.0f, 27.0f, -5.0f, 2, 4, 2);
		ra1.setRotationPoint(-9.0f, -8.0f, 0.0f);
		ra1.setTextureSize(256, 64);
		ra1.mirror = true;
		setRotation(ra1, 0.0f, 0.0f, 0.0f);
		(ra2 = new ModelRenderer(this, 212, 29)).addBox(-9.0f, -8.0f, -5.0f, 10, 3, 10);
		ra2.setRotationPoint(-9.0f, -8.0f, 0.0f);
		ra2.setTextureSize(256, 64);
		ra2.mirror = true;
		setRotation(ra2, 0.0f, 0.0f, 0.0f);
		(ra3 = new ModelRenderer(this, 130, 49)).addBox(-11.0f, 3.0f, -5.0f, 12, 3, 10);
		ra3.setRotationPoint(-9.0f, -8.0f, 0.0f);
		ra3.setTextureSize(256, 64);
		ra3.mirror = true;
		setRotation(ra3, 0.0f, 0.0f, 0.0f);
		(ra4 = new ModelRenderer(this, 172, 0)).addBox(-9.0f, 14.0f, -4.0f, 8, 3, 8);
		ra4.setRotationPoint(-9.0f, -8.0f, 0.0f);
		ra4.setTextureSize(256, 64);
		ra4.mirror = true;
		setRotation(ra4, 0.0f, 0.0f, 0.0f);
		(ra5 = new ModelRenderer(this, 130, 24)).addBox(-10.0f, 9.0f, -5.0f, 10, 5, 10);
		ra5.setRotationPoint(-9.0f, -8.0f, 0.0f);
		ra5.setTextureSize(256, 64);
		ra5.mirror = true;
		setRotation(ra5, 0.0f, 0.0f, 0.0f);
		(ra6 = new ModelRenderer(this, 172, 0)).addBox(-9.0f, 6.0f, -4.0f, 8, 3, 8);
		ra6.setRotationPoint(-9.0f, -8.0f, 0.0f);
		ra6.setTextureSize(256, 64);
		ra6.mirror = true;
		setRotation(ra6, 0.0f, 0.0f, 0.0f);
		(ra7 = new ModelRenderer(this, 130, 0)).addBox(-10.0f, 17.0f, -5.0f, 10, 10, 10);
		ra7.setRotationPoint(-9.0f, -8.0f, 0.0f);
		ra7.setTextureSize(256, 64);
		ra7.mirror = true;
		setRotation(ra7, 0.0f, 0.0f, 0.0f);
		(ra8 = new ModelRenderer(this, 129, 42)).addBox(-10.0f, 27.0f, -5.0f, 2, 4, 2);
		ra8.setRotationPoint(-9.0f, -8.0f, 0.0f);
		ra8.setTextureSize(256, 64);
		ra8.mirror = true;
		setRotation(ra8, 0.0f, 0.0f, 0.0f);
		(ra9 = new ModelRenderer(this, 129, 42)).addBox(-2.0f, 27.0f, -5.0f, 2, 4, 2);
		ra9.setRotationPoint(-9.0f, -8.0f, 0.0f);
		ra9.setTextureSize(256, 64);
		ra9.mirror = true;
		setRotation(ra9, 0.0f, 0.0f, 0.0f);
		(la1 = new ModelRenderer(this, 212, 29)).addBox(0.0f, -8.0f, -5.0f, 10, 3, 10);
		la1.setRotationPoint(8.0f, -8.0f, 0.0f);
		la1.setTextureSize(256, 64);
		la1.mirror = true;
		setRotation(la1, 0.0f, 0.0f, 0.0f);
		(la2 = new ModelRenderer(this, 130, 49)).addBox(0.0f, 3.0f, -5.0f, 12, 3, 10);
		la2.setRotationPoint(8.0f, -8.0f, 0.0f);
		la2.setTextureSize(256, 64);
		la2.mirror = true;
		setRotation(la2, 0.0f, 0.0f, 0.0f);
		(la3 = new ModelRenderer(this, 130, 24)).addBox(1.0f, 9.0f, -5.0f, 10, 5, 10);
		la3.setRotationPoint(8.0f, -8.0f, 0.0f);
		la3.setTextureSize(256, 64);
		la3.mirror = true;
		setRotation(la3, 0.0f, 0.0f, 0.0f);
		(la4 = new ModelRenderer(this, 172, 0)).addBox(2.0f, 6.0f, -4.0f, 8, 3, 8);
		la4.setRotationPoint(8.0f, -8.0f, 0.0f);
		la4.setTextureSize(256, 64);
		la4.mirror = true;
		setRotation(la4, 0.0f, 0.0f, 0.0f);
		(la5 = new ModelRenderer(this, 172, 0)).addBox(2.0f, 14.0f, -4.0f, 8, 3, 8);
		la5.setRotationPoint(8.0f, -8.0f, 0.0f);
		la5.setTextureSize(256, 64);
		la5.mirror = true;
		setRotation(la5, 0.0f, 0.0f, 0.0f);
		(la6 = new ModelRenderer(this, 130, 0)).addBox(1.0f, 17.0f, -5.0f, 10, 10, 10);
		la6.setRotationPoint(8.0f, -8.0f, 0.0f);
		la6.setTextureSize(256, 64);
		la6.mirror = true;
		setRotation(la6, 0.0f, 0.0f, 0.0f);
		(la7 = new ModelRenderer(this, 129, 42)).addBox(1.0f, 27.0f, -5.0f, 2, 4, 2);
		la7.setRotationPoint(8.0f, -8.0f, 0.0f);
		la7.setTextureSize(256, 64);
		la7.mirror = true;
		setRotation(la7, 0.0f, 0.0f, 0.0f);
		(la8 = new ModelRenderer(this, 129, 42)).addBox(9.0f, 27.0f, -5.0f, 2, 4, 2);
		la8.setRotationPoint(8.0f, -8.0f, 0.0f);
		la8.setTextureSize(256, 64);
		la8.mirror = true;
		setRotation(la8, 0.0f, 0.0f, 0.0f);
		(la9 = new ModelRenderer(this, 129, 42)).addBox(5.0f, 27.0f, -5.0f, 2, 4, 2);
		la9.setRotationPoint(8.0f, -8.0f, 0.0f);
		la9.setTextureSize(256, 64);
		la9.mirror = true;
		setRotation(la9, 0.0f, 0.0f, 0.0f);
		(shape8 = new ModelRenderer(this, 64, 0)).addBox(0.0f, 0.0f, 0.0f, 16, 17, 16);
		shape8.setRotationPoint(-8.0f, -14.0f, -8.0f);
		shape8.setTextureSize(256, 64);
		shape8.mirror = true;
		setRotation(shape8, 0.0f, 0.0f, 0.0f);
		(shape9 = new ModelRenderer(this, 212, 29)).addBox(16.0f, -2.0f, -15.0f, 10, 10, 10);
		shape9.setRotationPoint(-11.0f, -32.0f, 7.0f);
		shape9.setTextureSize(256, 64);
		shape9.mirror = true;
		setRotation(shape9, 0.0f, 0.0f, 0.0f);
		(shape10 = new ModelRenderer(this, 215, 49)).addBox(-1.0f, 20.0f, -1.0f, 8, 6, 8);
		shape10.setRotationPoint(-11.0f, -24.0f, 7.0f);
		shape10.setTextureSize(256, 64);
		shape10.mirror = true;
		setRotation(shape10, 0.0f, 0.0f, 0.0f);
		(shape11 = new ModelRenderer(this, 212, 29)).addBox(-4.0f, -2.0f, -15.0f, 10, 10, 10);
		shape11.setRotationPoint(-11.0f, -32.0f, 7.0f);
		shape11.setTextureSize(256, 64);
		shape11.mirror = true;
		setRotation(shape11, 0.0f, 0.0f, 0.0f);
		(shape12 = new ModelRenderer(this, 212, 29)).addBox(6.0f, -2.0f, -15.0f, 10, 10, 10);
		shape12.setRotationPoint(-11.0f, -32.0f, 7.0f);
		shape12.setTextureSize(256, 64);
		shape12.mirror = true;
		setRotation(shape12, 0.0f, 0.0f, 0.0f);
		(shape13 = new ModelRenderer(this, 212, 29)).addBox(16.0f, -2.0f, 5.0f, 10, 10, 10);
		shape13.setRotationPoint(-11.0f, -32.0f, 7.0f);
		shape13.setTextureSize(256, 64);
		shape13.mirror = true;
		setRotation(shape13, 0.0f, 0.0f, 0.0f);
		(shape14 = new ModelRenderer(this, 212, 29)).addBox(6.0f, -2.0f, 5.0f, 10, 10, 10);
		shape14.setRotationPoint(-11.0f, -32.0f, 7.0f);
		shape14.setTextureSize(256, 64);
		shape14.mirror = true;
		setRotation(shape14, 0.0f, 0.0f, 0.0f);
		(shape15 = new ModelRenderer(this, 212, 29)).addBox(-4.0f, -2.0f, 5.0f, 10, 10, 10);
		shape15.setRotationPoint(-11.0f, -32.0f, 7.0f);
		shape15.setTextureSize(256, 64);
		shape15.mirror = true;
		setRotation(shape15, 0.0f, 0.0f, 0.0f);
		(shape16 = new ModelRenderer(this, 212, 29)).addBox(16.0f, -2.0f, -5.0f, 10, 10, 10);
		shape16.setRotationPoint(-11.0f, -32.0f, 7.0f);
		shape16.setTextureSize(256, 64);
		shape16.mirror = true;
		setRotation(shape16, 0.0f, 0.0f, 0.0f);
		(shape17 = new ModelRenderer(this, 212, 29)).addBox(-4.0f, -2.0f, -5.0f, 10, 10, 10);
		shape17.setRotationPoint(-11.0f, -32.0f, 7.0f);
		shape17.setTextureSize(256, 64);
		shape17.mirror = true;
		setRotation(shape17, 0.0f, 0.0f, 0.0f);
		(shape18 = new ModelRenderer(this, 212, 29)).addBox(6.0f, -2.0f, -5.0f, 10, 10, 10);
		shape18.setRotationPoint(-11.0f, -32.0f, 7.0f);
		shape18.setTextureSize(256, 64);
		shape18.mirror = true;
		setRotation(shape18, 0.0f, 0.0f, 0.0f);
		(shape19 = new ModelRenderer(this, 212, 29)).addBox(1.0f, -12.0f, 0.0f, 10, 10, 10);
		shape19.setRotationPoint(-11.0f, -32.0f, 7.0f);
		shape19.setTextureSize(256, 64);
		shape19.mirror = true;
		setRotation(shape19, 0.0f, 0.0f, 0.0f);
		(shape20 = new ModelRenderer(this, 212, 29)).addBox(11.0f, -12.0f, -10.0f, 10, 10, 10);
		shape20.setRotationPoint(-11.0f, -32.0f, 7.0f);
		shape20.setTextureSize(256, 64);
		shape20.mirror = true;
		setRotation(shape20, 0.0f, 0.0f, 0.0f);
		(shape21 = new ModelRenderer(this, 212, 29)).addBox(1.0f, -12.0f, -10.0f, 10, 10, 10);
		shape21.setRotationPoint(-11.0f, -32.0f, 7.0f);
		shape21.setTextureSize(256, 64);
		shape21.mirror = true;
		setRotation(shape21, 0.0f, 0.0f, 0.0f);
		(shape22 = new ModelRenderer(this, 215, 0)).addBox(0.0f, 0.0f, 0.0f, 6, 20, 6);
		shape22.setRotationPoint(5.0f, -24.0f, 7.0f);
		shape22.setTextureSize(256, 64);
		shape22.mirror = true;
		setRotation(shape22, 0.0f, 0.0f, 0.0f);
		(shape23 = new ModelRenderer(this, 215, 0)).addBox(0.0f, 0.0f, 0.0f, 6, 20, 6);
		shape23.setRotationPoint(-11.0f, -24.0f, 7.0f);
		shape23.setTextureSize(256, 64);
		shape23.mirror = true;
		setRotation(shape23, 0.0f, 0.0f, 0.0f);
		(shape24 = new ModelRenderer(this, 0, 38)).addBox(0.0f, 0.0f, 0.0f, 16, 8, 16);
		shape24.setRotationPoint(-8.0f, 14.0f, -8.0f);
		shape24.setTextureSize(256, 64);
		shape24.mirror = true;
		setRotation(shape24, 0.0f, 0.0f, 0.0f);
		(shape25 = new ModelRenderer(this, 0, 27)).addBox(1.0f, 8.0f, 9.0f, 6, 2, 6);
		shape25.setRotationPoint(-8.0f, 14.0f, -8.0f);
		shape25.setTextureSize(256, 64);
		shape25.mirror = true;
		setRotation(shape25, 0.0f, 0.0f, 0.0f);
		(shape26 = new ModelRenderer(this, 0, 27)).addBox(1.0f, 8.0f, 1.0f, 6, 2, 6);
		shape26.setRotationPoint(-8.0f, 14.0f, -8.0f);
		shape26.setTextureSize(256, 64);
		shape26.mirror = true;
		setRotation(shape26, 0.0f, 0.0f, 0.0f);
		(shape27 = new ModelRenderer(this, 0, 27)).addBox(9.0f, 8.0f, 1.0f, 6, 2, 6);
		shape27.setRotationPoint(-8.0f, 14.0f, -8.0f);
		shape27.setTextureSize(256, 64);
		shape27.mirror = true;
		setRotation(shape27, 0.0f, 0.0f, 0.0f);
		(la10 = new ModelRenderer(this, 172, 12)).addBox(0.0f, -5.0f, -5.0f, 10, 8, 10);
		la10.setRotationPoint(8.0f, -8.0f, 0.0f);
		la10.setTextureSize(256, 64);
		la10.mirror = true;
		setRotation(la10, 0.0f, 0.0f, 0.0f);
		(ra10 = new ModelRenderer(this, 172, 12)).addBox(-9.0f, -5.0f, -5.0f, 10, 8, 10);
		ra10.setRotationPoint(-9.0f, -8.0f, 0.0f);
		ra10.setTextureSize(256, 64);
		ra10.mirror = true;
		setRotation(ra10, 0.0f, 0.0f, 0.0f);
		(shape28 = new ModelRenderer(this, 212, 29)).addBox(-2.0f, 8.0f, -2.0f, 10, 3, 10);
		shape28.setRotationPoint(-11.0f, -32.0f, 7.0f);
		shape28.setTextureSize(256, 64);
		shape28.mirror = true;
		setRotation(shape28, 0.0f, 0.0f, 0.0f);
		(shape29 = new ModelRenderer(this, 212, 29)).addBox(11.0f, -12.0f, 0.0f, 10, 10, 10);
		shape29.setRotationPoint(-11.0f, -32.0f, 7.0f);
		shape29.setTextureSize(256, 64);
		shape29.mirror = true;
		setRotation(shape29, 0.0f, 0.0f, 0.0f);
		(shape30 = new ModelRenderer(this, 212, 29)).addBox(14.0f, 8.0f, -2.0f, 10, 3, 10);
		shape30.setRotationPoint(-11.0f, -32.0f, 7.0f);
		shape30.setTextureSize(256, 64);
		shape30.mirror = true;
		setRotation(shape30, 0.0f, 0.0f, 0.0f);
		(shape31 = new ModelRenderer(this, 175, 32)).addBox(-5.0f, -4.0f, -4.0f, 10, 10, 8);
		shape31.setRotationPoint(0.0f, -15.0f, -9.0f);
		shape31.setTextureSize(256, 64);
		shape31.mirror = true;
		setRotation(shape31, 0.0f, 0.0f, 0.0f);
		(shape32 = new ModelRenderer(this, 115, 25)).addBox(-5.0f, -7.0f, -4.0f, 3, 3, 3);
		shape32.setRotationPoint(0.0f, -15.0f, -9.0f);
		shape32.setTextureSize(256, 64);
		shape32.mirror = true;
		setRotation(shape32, 0.0f, 0.0f, 0.0f);
	}

	@Override
	public void render(MatrixStack matrix, IVertexBuilder buffer, int light, int overlay, float red, float green, float blue, float alpha) {
		shape1.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		shape2.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		shape3.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		shape4.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		shape5.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		shape6.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		shape7.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		ra1.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		ra2.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		ra3.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		ra4.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		ra5.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		ra6.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		ra7.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		ra8.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		ra9.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		la1.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		la2.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		la3.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		la4.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		la5.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		la6.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		la7.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		la8.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		la9.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		shape8.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		shape9.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		shape10.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		shape11.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		shape12.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		shape13.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		shape14.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		shape15.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		shape16.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		shape17.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		shape18.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		shape19.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		shape20.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		shape21.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		shape22.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		shape23.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		shape24.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		shape25.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		shape26.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		shape27.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		la10.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		ra10.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		shape28.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		shape29.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		shape30.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		shape31.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		shape32.render(matrix, buffer, light, overlay, red, green, blue, alpha);
	}

	private void setRotation(final ModelRenderer model, final float x, final float y, final float z) {
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
	}

	@Override
	public void setRotationAngles(MobEntity entityIn, float limbSwing, float limbSwingAmount, float ageInTicks, float netHeadYaw, float headPitch) {
		ra1.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 2.0f * limbSwingAmount * 0.5f;
		ra1.rotateAngleZ = 0.0f;
		ra2.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 2.0f * limbSwingAmount * 0.5f;
		ra2.rotateAngleZ = 0.0f;
		ra3.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 2.0f * limbSwingAmount * 0.5f;
		ra3.rotateAngleZ = 0.0f;
		ra4.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 2.0f * limbSwingAmount * 0.5f;
		ra4.rotateAngleZ = 0.0f;
		ra5.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 2.0f * limbSwingAmount * 0.5f;
		ra5.rotateAngleZ = 0.0f;
		ra6.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 2.0f * limbSwingAmount * 0.5f;
		ra6.rotateAngleZ = 0.0f;
		ra7.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 2.0f * limbSwingAmount * 0.5f;
		ra7.rotateAngleZ = 0.0f;
		ra8.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 2.0f * limbSwingAmount * 0.5f;
		ra8.rotateAngleZ = 0.0f;
		ra9.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 2.0f * limbSwingAmount * 0.5f;
		ra9.rotateAngleZ = 0.0f;
		ra10.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 2.0f * limbSwingAmount * 0.5f;
		ra10.rotateAngleZ = 0.0f;
		la1.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f) * 2.0f * limbSwingAmount * 0.5f;
		la1.rotateAngleZ = 0.0f;
		la2.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f) * 2.0f * limbSwingAmount * 0.5f;
		la2.rotateAngleZ = 0.0f;
		la3.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f) * 2.0f * limbSwingAmount * 0.5f;
		la3.rotateAngleZ = 0.0f;
		la4.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f) * 2.0f * limbSwingAmount * 0.5f;
		la4.rotateAngleZ = 0.0f;
		la5.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f) * 2.0f * limbSwingAmount * 0.5f;
		la5.rotateAngleZ = 0.0f;
		la6.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f) * 2.0f * limbSwingAmount * 0.5f;
		la6.rotateAngleZ = 0.0f;
		la7.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f) * 2.0f * limbSwingAmount * 0.5f;
		la7.rotateAngleZ = 0.0f;
		la8.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f) * 2.0f * limbSwingAmount * 0.5f;
		la8.rotateAngleZ = 0.0f;
		la9.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f) * 2.0f * limbSwingAmount * 0.5f;
		la9.rotateAngleZ = 0.0f;
		la10.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f) * 2.0f * limbSwingAmount * 0.5f;
		la10.rotateAngleZ = 0.0f;
	}
}
