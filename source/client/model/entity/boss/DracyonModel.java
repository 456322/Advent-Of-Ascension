package net.tslat.aoa3.client.model.entity.boss;

import com.mojang.blaze3d.matrix.MatrixStack;
import com.mojang.blaze3d.vertex.IVertexBuilder;
import net.minecraft.client.renderer.entity.model.EntityModel;
import net.minecraft.client.renderer.model.ModelRenderer;
import net.minecraft.entity.MobEntity;
import net.minecraft.util.math.MathHelper;

public class DracyonModel extends EntityModel<MobEntity> {
	private final ModelRenderer body;
	private final ModelRenderer head;
	private final ModelRenderer head2;
	private final ModelRenderer head3;
	private final ModelRenderer head4;
	private final ModelRenderer head5;
	private final ModelRenderer head6;
	private final ModelRenderer head7;
	private final ModelRenderer head8;
	private final ModelRenderer head9;
	private final ModelRenderer head10;
	private final ModelRenderer head11;
	private final ModelRenderer head12;
	private final ModelRenderer head13;
	private final ModelRenderer head14;
	private final ModelRenderer head15;
	private final ModelRenderer head16;
	private final ModelRenderer head17;
	private final ModelRenderer head18;
	private final ModelRenderer head19;
	private final ModelRenderer head20;
	private final ModelRenderer head21;
	private final ModelRenderer body2;
	private final ModelRenderer leg1;
	private final ModelRenderer leg2;
	private final ModelRenderer leg3;
	private final ModelRenderer leg4;
	private final ModelRenderer leg5;
	private final ModelRenderer leg6;
	private final ModelRenderer leg7;
	private final ModelRenderer leg8;
	private final ModelRenderer leg9;
	private final ModelRenderer leg10;
	private final ModelRenderer leg11;
	private final ModelRenderer leg12;
	private final ModelRenderer leg13;
	private final ModelRenderer leg14;
	private final ModelRenderer leg15;
	private final ModelRenderer leg16;
	private final ModelRenderer leg17;
	private final ModelRenderer leg18;
	private final ModelRenderer leg19;
	private final ModelRenderer body3;
	private final ModelRenderer leg20;
	private final ModelRenderer leg21;
	private final ModelRenderer leg22;
	private final ModelRenderer leg23;
	private final ModelRenderer leg24;
	private final ModelRenderer leg25;
	private final ModelRenderer leg26;
	private final ModelRenderer body4;
	private final ModelRenderer leg27;
	private final ModelRenderer leg28;
	private final ModelRenderer leg29;
	private final ModelRenderer leg30;
	private final ModelRenderer head22;
	private final ModelRenderer head23;
	private final ModelRenderer head24;
	private final ModelRenderer head25;
	private final ModelRenderer head26;
	private final ModelRenderer head27;

	public DracyonModel() {
		texWidth = 128;
		texHeight = 64;
		(body = new ModelRenderer(this, 33, 51)).addBox(-5.0f, -5.0f, -4.0f, 10, 6, 5);
		body.setPos(0.0f, 6.0f, 19.0f);
		body.setTexSize(128, 64);
		body.mirror = true;
		setRotation(body, 1.570796f, 0.0f, 0.0f);
		(head = new ModelRenderer(this, 68, 0)).addBox(-3.0f, 0.0f, 0.0f, 6, 3, 8);
		head.setPos(0.0f, 7.0f, -1.0f);
		head.setTexSize(128, 64);
		head.mirror = true;
		setRotation(head, 0.0f, 0.0f, 0.0f);
		(head2 = new ModelRenderer(this, 37, 14)).addBox(-4.0f, 0.0f, -2.0f, 8, 3, 2);
		head2.setPos(0.0f, 7.0f, -1.0f);
		head2.setTexSize(128, 64);
		head2.mirror = true;
		setRotation(head2, 0.0f, 0.0f, 0.0f);
		(head3 = new ModelRenderer(this, 14, 51)).addBox(-3.0f, -10.0f, 5.0f, 4, 3, 4);
		head3.setPos(0.0f, 7.0f, -1.0f);
		head3.setTexSize(128, 64);
		head3.mirror = true;
		setRotation(head3, 0.0f, 0.0f, 0.0f);
		(head4 = new ModelRenderer(this, 0, 52)).addBox(3.0f, 0.0f, -8.0f, 1, 1, 1);
		head4.setPos(0.0f, 7.0f, -1.0f);
		head4.setTexSize(128, 64);
		head4.mirror = true;
		setRotation(head4, 0.0f, 0.0f, 0.0f);
		(head5 = new ModelRenderer(this, 96, 0)).addBox(-4.0f, 3.0f, -8.0f, 8, 2, 8);
		head5.setPos(0.0f, 7.0f, -1.0f);
		head5.setTexSize(128, 64);
		head5.mirror = true;
		setRotation(head5, 0.0f, 0.0f, 0.0f);
		(head6 = new ModelRenderer(this, 0, 52)).addBox(3.0f, 0.0f, -4.0f, 1, 1, 1);
		head6.setPos(0.0f, 7.0f, -1.0f);
		head6.setTexSize(128, 64);
		head6.mirror = true;
		setRotation(head6, 0.0f, 0.0f, 0.0f);
		(head7 = new ModelRenderer(this, 0, 52)).addBox(3.0f, 0.0f, -6.0f, 1, 1, 1);
		head7.setPos(0.0f, 7.0f, -1.0f);
		head7.setTexSize(128, 64);
		head7.mirror = true;
		setRotation(head7, 0.0f, 0.0f, 0.0f);
		(head8 = new ModelRenderer(this, 0, 52)).addBox(-4.0f, 0.0f, -6.0f, 1, 1, 1);
		head8.setPos(0.0f, 7.0f, -1.0f);
		head8.setTexSize(128, 64);
		head8.mirror = true;
		setRotation(head8, 0.0f, 0.0f, 0.0f);
		(head9 = new ModelRenderer(this, 0, 52)).addBox(1.0f, 0.0f, -8.0f, 1, 1, 1);
		head9.setPos(0.0f, 7.0f, -1.0f);
		head9.setTexSize(128, 64);
		head9.mirror = true;
		setRotation(head9, 0.0f, 0.0f, 0.0f);
		(head10 = new ModelRenderer(this, 0, 52)).addBox(-4.0f, 0.0f, -4.0f, 1, 1, 1);
		head10.setPos(0.0f, 7.0f, -1.0f);
		head10.setTexSize(128, 64);
		head10.mirror = true;
		setRotation(head10, 0.0f, 0.0f, 0.0f);
		(head11 = new ModelRenderer(this, 0, 52)).addBox(-4.0f, 0.0f, -8.0f, 1, 1, 1);
		head11.setPos(0.0f, 7.0f, -1.0f);
		head11.setTexSize(128, 64);
		head11.mirror = true;
		setRotation(head11, 0.0f, 0.0f, 0.0f);
		(head12 = new ModelRenderer(this, 0, 52)).addBox(-2.0f, 0.0f, -8.0f, 1, 1, 1);
		head12.setPos(0.0f, 7.0f, -1.0f);
		head12.setTexSize(128, 64);
		head12.mirror = true;
		setRotation(head12, 0.0f, 0.0f, 0.0f);
		(head13 = new ModelRenderer(this, 0, 52)).addBox(3.0f, 2.0f, -4.0f, 1, 1, 1);
		head13.setPos(0.0f, 7.0f, -1.0f);
		head13.setTexSize(128, 64);
		head13.mirror = true;
		setRotation(head13, 0.0f, 0.0f, 0.0f);
		(head14 = new ModelRenderer(this, 0, 52)).addBox(-4.0f, 2.0f, -4.0f, 1, 1, 1);
		head14.setPos(0.0f, 7.0f, -1.0f);
		head14.setTexSize(128, 64);
		head14.mirror = true;
		setRotation(head14, 0.0f, 0.0f, 0.0f);
		(head15 = new ModelRenderer(this, 0, 52)).addBox(-4.0f, 2.0f, -6.0f, 1, 1, 1);
		head15.setPos(0.0f, 7.0f, -1.0f);
		head15.setTexSize(128, 64);
		head15.mirror = true;
		setRotation(head15, 0.0f, 0.0f, 0.0f);
		(head16 = new ModelRenderer(this, 0, 52)).addBox(-4.0f, 2.0f, -8.0f, 1, 1, 1);
		head16.setPos(0.0f, 7.0f, -1.0f);
		head16.setTexSize(128, 64);
		head16.mirror = true;
		setRotation(head16, 0.0f, 0.0f, 0.0f);
		(head17 = new ModelRenderer(this, 0, 52)).addBox(-2.0f, 2.0f, -8.0f, 1, 1, 1);
		head17.setPos(0.0f, 7.0f, -1.0f);
		head17.setTexSize(128, 64);
		head17.mirror = true;
		setRotation(head17, 0.0f, 0.0f, 0.0f);
		(head18 = new ModelRenderer(this, 0, 52)).addBox(1.0f, 2.0f, -8.0f, 1, 1, 1);
		head18.setPos(0.0f, 7.0f, -1.0f);
		head18.setTexSize(128, 64);
		head18.mirror = true;
		setRotation(head18, 0.0f, 0.0f, 0.0f);
		(head19 = new ModelRenderer(this, 0, 52)).addBox(3.0f, 2.0f, -8.0f, 1, 1, 1);
		head19.setPos(0.0f, 7.0f, -1.0f);
		head19.setTexSize(128, 64);
		head19.mirror = true;
		setRotation(head19, 0.0f, 0.0f, 0.0f);
		(head20 = new ModelRenderer(this, 0, 52)).addBox(3.0f, 2.0f, -6.0f, 1, 1, 1);
		head20.setPos(0.0f, 7.0f, -1.0f);
		head20.setTexSize(128, 64);
		head20.mirror = true;
		setRotation(head20, 0.0f, 0.0f, 0.0f);
		(head21 = new ModelRenderer(this, 32, 0)).addBox(-4.0f, -4.0f, 0.0f, 8, 4, 10);
		head21.setPos(0.0f, 7.0f, -1.0f);
		head21.setTexSize(128, 64);
		head21.mirror = true;
		setRotation(head21, 0.0f, 0.0f, 0.0f);
		(body2 = new ModelRenderer(this, 67, 48)).addBox(-5.0f, -10.0f, -7.0f, 10, 8, 6);
		body2.setPos(0.0f, 9.0f, 12.0f);
		body2.setTexSize(128, 64);
		body2.mirror = true;
		setRotation(body2, 1.570796f, 0.0f, 0.0f);
		(leg1 = new ModelRenderer(this, 115, 55)).addBox(-0.5f, 7.0f, -6.0f, 1, 2, 4);
		leg1.setPos(7.0f, 15.0f, 20.0f);
		leg1.setTexSize(128, 64);
		leg1.mirror = true;
		setRotation(leg1, 0.0f, 0.0f, 0.0f);
		(leg2 = new ModelRenderer(this, 111, 39)).addBox(-2.0f, 0.0f, -2.0f, 4, 9, 4);
		leg2.setPos(7.0f, 15.0f, 20.0f);
		leg2.setTexSize(128, 64);
		leg2.mirror = true;
		setRotation(leg2, 0.0f, 0.0f, 0.0f);
		(leg3 = new ModelRenderer(this, 115, 55)).addBox(-2.0f, 7.0f, -6.0f, 1, 2, 4);
		leg3.setPos(7.0f, 15.0f, 20.0f);
		leg3.setTexSize(128, 64);
		leg3.mirror = true;
		setRotation(leg3, 0.0f, 0.0f, 0.0f);
		(leg4 = new ModelRenderer(this, 115, 55)).addBox(1.0f, 7.0f, -6.0f, 1, 2, 4);
		leg4.setPos(7.0f, 15.0f, 20.0f);
		leg4.setTexSize(128, 64);
		leg4.mirror = true;
		setRotation(leg4, 0.0f, 0.0f, 0.0f);
		(leg5 = new ModelRenderer(this, 115, 55)).addBox(1.0f, 7.0f, -6.0f, 1, 2, 4);
		leg5.setPos(-7.0f, 15.0f, 20.0f);
		leg5.setTexSize(128, 64);
		leg5.mirror = true;
		setRotation(leg5, 0.0f, 0.0f, 0.0f);
		(leg6 = new ModelRenderer(this, 115, 55)).addBox(-0.5f, 7.0f, -6.0f, 1, 2, 4);
		leg6.setPos(-7.0f, 15.0f, 20.0f);
		leg6.setTexSize(128, 64);
		leg6.mirror = true;
		setRotation(leg6, 0.0f, 0.0f, 0.0f);
		(leg7 = new ModelRenderer(this, 115, 55)).addBox(-2.0f, 7.0f, -6.0f, 1, 2, 4);
		leg7.setPos(-7.0f, 15.0f, 20.0f);
		leg7.setTexSize(128, 64);
		leg7.mirror = true;
		setRotation(leg7, 0.0f, 0.0f, 0.0f);
		(leg8 = new ModelRenderer(this, 111, 39)).addBox(-2.0f, 0.0f, -2.0f, 4, 9, 4);
		leg8.setPos(-7.0f, 15.0f, 20.0f);
		leg8.setTexSize(128, 64);
		leg8.mirror = true;
		setRotation(leg8, 0.0f, 0.0f, 0.0f);
		(leg9 = new ModelRenderer(this, 112, 16)).addBox(-2.0f, -1.0f, 0.0f, 4, 2, 4);
		leg9.setPos(0.0f, 13.0f, 29.0f);
		leg9.setTexSize(128, 64);
		leg9.mirror = true;
		setRotation(leg9, 0.0f, 0.0f, 0.0f);
		(leg10 = new ModelRenderer(this, 115, 55)).addBox(-2.0f, 7.0f, -6.0f, 1, 2, 4);
		leg10.setPos(-7.0f, 15.0f, 4.0f);
		leg10.setTexSize(128, 64);
		leg10.mirror = true;
		setRotation(leg10, 0.0f, 0.0f, 0.0f);
		(leg11 = new ModelRenderer(this, 115, 55)).addBox(-0.5f, 7.0f, -6.0f, 1, 2, 4);
		leg11.setPos(-7.0f, 15.0f, 4.0f);
		leg11.setTexSize(128, 64);
		leg11.mirror = true;
		setRotation(leg11, 0.0f, 0.0f, 0.0f);
		(leg12 = new ModelRenderer(this, 115, 55)).addBox(1.0f, 7.0f, -6.0f, 1, 2, 4);
		leg12.setPos(-7.0f, 15.0f, 4.0f);
		leg12.setTexSize(128, 64);
		leg12.mirror = true;
		setRotation(leg12, 0.0f, 0.0f, 0.0f);
		(leg13 = new ModelRenderer(this, 115, 55)).addBox(-2.0f, 7.0f, -6.0f, 1, 2, 4);
		leg13.setPos(7.0f, 15.0f, 4.0f);
		leg13.setTexSize(128, 64);
		leg13.mirror = true;
		setRotation(leg13, 0.0f, 0.0f, 0.0f);
		(leg14 = new ModelRenderer(this, 115, 55)).addBox(-0.5f, 7.0f, -6.0f, 1, 2, 4);
		leg14.setPos(7.0f, 15.0f, 4.0f);
		leg14.setTexSize(128, 64);
		leg14.mirror = true;
		setRotation(leg14, 0.0f, 0.0f, 0.0f);
		(leg15 = new ModelRenderer(this, 115, 55)).addBox(1.0f, 7.0f, -6.0f, 1, 2, 4);
		leg15.setPos(7.0f, 15.0f, 4.0f);
		leg15.setTexSize(128, 64);
		leg15.mirror = true;
		setRotation(leg15, 0.0f, 0.0f, 0.0f);
		(leg16 = new ModelRenderer(this, 111, 39)).addBox(-2.0f, 0.0f, -2.0f, 4, 9, 4);
		leg16.setPos(7.0f, 15.0f, 4.0f);
		leg16.setTexSize(128, 64);
		leg16.mirror = true;
		setRotation(leg16, 0.0f, 0.0f, 0.0f);
		(leg17 = new ModelRenderer(this, 111, 39)).addBox(-2.0f, 0.0f, -2.0f, 4, 9, 4);
		leg17.setPos(-7.0f, 15.0f, 4.0f);
		leg17.setTexSize(128, 64);
		leg17.mirror = true;
		setRotation(leg17, 0.0f, 0.0f, 0.0f);
		(leg18 = new ModelRenderer(this, 102, 26)).addBox(-3.0f, -4.0f, -3.0f, 6, 4, 6);
		leg18.setPos(-7.0f, 15.0f, 4.0f);
		leg18.setTexSize(128, 64);
		leg18.mirror = true;
		setRotation(leg18, 0.0f, 0.0f, 0.0f);
		(leg19 = new ModelRenderer(this, 102, 26)).addBox(-3.0f, -4.0f, -3.0f, 6, 4, 6);
		leg19.setPos(7.0f, 15.0f, 4.0f);
		leg19.setTexSize(128, 64);
		leg19.mirror = true;
		setRotation(leg19, 0.0f, 0.0f, 0.0f);
		(body3 = new ModelRenderer(this, 67, 48)).addBox(-5.0f, -10.0f, -7.0f, 10, 8, 6);
		body3.setPos(0.0f, 9.0f, 28.0f);
		body3.setTexSize(128, 64);
		body3.mirror = true;
		setRotation(body3, 1.570796f, 0.0f, 0.0f);
		(leg20 = new ModelRenderer(this, 102, 26)).addBox(-3.0f, -4.0f, -3.0f, 6, 4, 6);
		leg20.setPos(-7.0f, 15.0f, 20.0f);
		leg20.setTexSize(128, 64);
		leg20.mirror = true;
		setRotation(leg20, 0.0f, 0.0f, 0.0f);
		(leg21 = new ModelRenderer(this, 86, 15)).addBox(-3.0f, -2.0f, 0.0f, 6, 4, 6);
		leg21.setPos(0.0f, 13.0f, 24.0f);
		leg21.setTexSize(128, 64);
		leg21.mirror = true;
		setRotation(leg21, 0.0f, 0.0f, 0.0f);
		(leg22 = new ModelRenderer(this, 102, 26)).addBox(-3.0f, -4.0f, -3.0f, 6, 4, 6);
		leg22.setPos(7.0f, 15.0f, 20.0f);
		leg22.setTexSize(128, 64);
		leg22.mirror = true;
		setRotation(leg22, 0.0f, 0.0f, 0.0f);
		(leg23 = new ModelRenderer(this, 53, 14)).addBox(-15.0f, -2.0f, -7.0f, 1, 3, 14);
		leg23.setPos(-4.0f, 7.0f, 17.0f);
		leg23.setTexSize(128, 64);
		leg23.mirror = true;
		setRotation(leg23, 0.0f, 0.0f, 0.0f);
		(leg24 = new ModelRenderer(this, 0, 16)).addBox(-14.0f, -2.0f, -7.0f, 14, 3, 1);
		leg24.setPos(-4.0f, 7.0f, 17.0f);
		leg24.setTexSize(128, 64);
		leg24.mirror = true;
		setRotation(leg24, 0.0f, 0.0f, 0.0f);
		(leg25 = new ModelRenderer(this, 0, 22)).addBox(-14.0f, -1.0f, -6.0f, 14, 1, 12);
		leg25.setPos(-4.0f, 7.0f, 17.0f);
		leg25.setTexSize(128, 64);
		leg25.mirror = true;
		setRotation(leg25, 0.0f, 0.0f, 0.0f);
		(leg26 = new ModelRenderer(this, 0, 16)).addBox(-14.0f, -2.0f, 6.0f, 14, 3, 1);
		leg26.setPos(-4.0f, 7.0f, 17.0f);
		leg26.setTexSize(128, 64);
		leg26.mirror = true;
		setRotation(leg26, 0.0f, 0.0f, 0.0f);
		(body4 = new ModelRenderer(this, 71, 33)).addBox(-5.0f, -10.0f, -4.0f, 10, 8, 3);
		body4.setPos(0.0f, 9.0f, 20.0f);
		body4.setTexSize(128, 64);
		body4.mirror = true;
		setRotation(body4, 1.570796f, 0.0f, 0.0f);
		(leg27 = new ModelRenderer(this, 0, 16)).addBox(0.0f, -2.0f, -7.0f, 14, 3, 1);
		leg27.setPos(4.0f, 7.0f, 17.0f);
		leg27.setTexSize(128, 64);
		leg27.mirror = true;
		setRotation(leg27, 0.0f, 0.0f, 0.0f);
		(leg28 = new ModelRenderer(this, 0, 16)).addBox(0.0f, -2.0f, 6.0f, 14, 3, 1);
		leg28.setPos(4.0f, 7.0f, 17.0f);
		leg28.setTexSize(128, 64);
		leg28.mirror = true;
		setRotation(leg28, 0.0f, 0.0f, 0.0f);
		(leg29 = new ModelRenderer(this, 0, 37)).addBox(0.0f, -1.0f, -6.0f, 14, 1, 12);
		leg29.setPos(4.0f, 7.0f, 17.0f);
		leg29.setTexSize(128, 64);
		leg29.mirror = true;
		setRotation(leg29, 0.0f, 0.0f, 0.0f);
		(leg30 = new ModelRenderer(this, 53, 14)).addBox(14.0f, -2.0f, -7.0f, 1, 3, 14);
		leg30.setPos(4.0f, 7.0f, 17.0f);
		leg30.setTexSize(128, 64);
		leg30.mirror = true;
		setRotation(leg30, 0.0f, 0.0f, 0.0f);
		(head22 = new ModelRenderer(this, 0, 0)).addBox(-4.0f, -4.0f, -8.0f, 8, 4, 8);
		head22.setPos(0.0f, 7.0f, -1.0f);
		head22.setTexSize(128, 64);
		head22.mirror = true;
		setRotation(head22, 0.0f, 0.0f, 0.0f);
		(head23 = new ModelRenderer(this, 0, 58)).addBox(-2.0f, -7.0f, 6.0f, 2, 3, 2);
		head23.setPos(0.0f, 7.0f, -1.0f);
		head23.setTexSize(128, 64);
		head23.mirror = true;
		setRotation(head23, 0.0f, 0.0f, 0.0f);
		(head24 = new ModelRenderer(this, 14, 51)).addBox(-3.0f, -10.0f, -7.0f, 4, 3, 4);
		head24.setPos(0.0f, 7.0f, -1.0f);
		head24.setTexSize(128, 64);
		head24.mirror = true;
		setRotation(head24, 0.0f, 0.0f, 0.0f);
		(head25 = new ModelRenderer(this, 0, 58)).addBox(-2.0f, -7.0f, -6.0f, 2, 3, 2);
		head25.setPos(0.0f, 7.0f, -1.0f);
		head25.setTexSize(128, 64);
		head25.mirror = true;
		setRotation(head25, 0.0f, 0.0f, 0.0f);
		(head26 = new ModelRenderer(this, 14, 51)).addBox(-3.0f, -10.0f, -1.0f, 4, 3, 4);
		head26.setPos(0.0f, 7.0f, -1.0f);
		head26.setTexSize(128, 64);
		head26.mirror = true;
		setRotation(head26, 0.0f, 0.0f, 0.0f);
		(head27 = new ModelRenderer(this, 0, 58)).addBox(-2.0f, -7.0f, 0.0f, 2, 3, 2);
		head27.setPos(0.0f, 7.0f, -1.0f);
		head27.setTexSize(128, 64);
		head27.mirror = true;
		setRotation(head27, 0.0f, 0.0f, 0.0f);
	}

	@Override
	public void renderToBuffer(MatrixStack matrix, IVertexBuilder buffer, int light, int overlay, float red, float green, float blue, float alpha) {
		body.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head2.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head3.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head4.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head5.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head6.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head7.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head8.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head9.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head10.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head11.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head12.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head13.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head14.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head15.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head16.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head17.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head18.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head19.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head20.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head21.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body2.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg1.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg2.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg3.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg4.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg5.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg6.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg7.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg8.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg9.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg10.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg11.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg12.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg13.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg14.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg15.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg16.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg17.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg18.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg19.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body3.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg20.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg21.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg22.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg23.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg24.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg25.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg26.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body4.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg27.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg28.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg29.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg30.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head22.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head23.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head24.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head25.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head26.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head27.render(matrix, buffer, light, overlay, red, green, blue, alpha);
	}

	private void setRotation(final ModelRenderer model, final float x, final float y, final float z) {
		model.xRot = x;
		model.yRot = y;
		model.zRot = z;
	}

	@Override
	public void setupAnim(MobEntity entityIn, float limbSwing, float limbSwingAmount, float ageInTicks, float netHeadYaw, float headPitch) {
		leg1.xRot = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
		leg2.xRot = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
		leg3.xRot = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
		leg4.xRot = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
		leg5.xRot = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
		leg6.xRot = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
		leg7.xRot = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
		leg8.xRot = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
		leg9.xRot = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
		leg10.xRot = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
		leg11.xRot = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
		leg12.xRot = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
		leg13.xRot = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
		leg14.xRot = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
		leg15.xRot = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
		leg16.xRot = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
		leg17.xRot = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
		leg18.xRot = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
		leg19.xRot = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
		leg20.xRot = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
		leg21.xRot = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
		leg22.xRot = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
		leg23.zRot = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
		leg24.zRot = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
		leg25.zRot = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
		leg26.zRot = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
		leg27.zRot = -MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
		leg28.zRot = -MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
		leg29.zRot = -MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
		leg30.zRot = -MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
	}
}
