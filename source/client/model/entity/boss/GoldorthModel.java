package net.tslat.aoa3.client.model.entity.boss;

import com.mojang.blaze3d.matrix.MatrixStack;
import com.mojang.blaze3d.vertex.IVertexBuilder;
import net.minecraft.client.renderer.entity.model.EntityModel;
import net.minecraft.client.renderer.model.ModelRenderer;
import net.minecraft.entity.MobEntity;
import net.minecraft.util.math.MathHelper;

public class GoldorthModel extends EntityModel<MobEntity> {
	private final ModelRenderer head1;
	private final ModelRenderer head2;
	private final ModelRenderer headx;
	private final ModelRenderer body;
	private final ModelRenderer leg1;
	private final ModelRenderer leg2;
	private final ModelRenderer leg3;
	private final ModelRenderer leg4;
	private final ModelRenderer headx2;
	private final ModelRenderer headx3;
	private final ModelRenderer headx4;
	private final ModelRenderer headx5;
	private final ModelRenderer leg4p;
	private final ModelRenderer leg3p;
	private final ModelRenderer leg2p;
	private final ModelRenderer leg1p;
	private final ModelRenderer body2;
	private final ModelRenderer headx6;
	private final ModelRenderer headx7;
	private final ModelRenderer headx8;
	private final ModelRenderer headx9;
	private final ModelRenderer headx10;
	private final ModelRenderer body3;
	private final ModelRenderer body4;
	private final ModelRenderer body5;
	private final ModelRenderer body6;
	private final ModelRenderer body7;
	private final ModelRenderer body8;
	private final ModelRenderer body9;
	private final ModelRenderer body10;
	private final ModelRenderer body11;
	private final ModelRenderer body12;
	private final ModelRenderer body13;
	private final ModelRenderer body14;
	private final ModelRenderer body15;
	private final ModelRenderer body16;
	private final ModelRenderer body17;
	private final ModelRenderer body18;

	public GoldorthModel() {
		textureWidth = 256;
		textureHeight = 64;
		(head1 = new ModelRenderer(this, 206, 2)).addBox(-4.0f, -12.0f, -1.0f, 8, 4, 6);
		head1.setRotationPoint(0.0f, -8.0f, 12.0f);
		head1.setTextureSize(256, 64);
		head1.mirror = true;
		setRotation(head1, 0.0f, 0.0f, 0.0f);
		(head2 = new ModelRenderer(this, 170, 0)).addBox(-4.0f, -8.0f, -1.0f, 8, 8, 6);
		head2.setRotationPoint(0.0f, -8.0f, 12.0f);
		head2.setTextureSize(256, 64);
		head2.mirror = true;
		setRotation(head2, 0.0f, 0.0f, 0.0f);
		(headx = new ModelRenderer(this, 17, 28)).addBox(4.5f, -3.5f, -9.0f, 2, 2, 3);
		headx.setRotationPoint(9.0f, 13.0f, -5.0f);
		headx.setTextureSize(256, 64);
		headx.mirror = true;
		setRotation(headx, -0.4363323f, 0.0f, 0.0f);
		(body = new ModelRenderer(this, 37, 33)).addBox(-6.0f, -22.0f, 13.0f, 12, 3, 2);
		body.setRotationPoint(0.0f, 10.0f, 4.0f);
		body.setTextureSize(256, 64);
		body.mirror = true;
		setRotation(body, 0.0f, 0.0f, 0.0f);
		(leg1 = new ModelRenderer(this, 0, 16)).addBox(-3.0f, 0.0f, -2.0f, 4, 8, 4);
		leg1.setRotationPoint(6.0f, 16.0f, 16.0f);
		leg1.setTextureSize(256, 64);
		leg1.mirror = true;
		setRotation(leg1, 0.0f, 0.0f, 0.0f);
		(leg2 = new ModelRenderer(this, 0, 16)).addBox(-1.0f, 0.0f, -2.0f, 4, 8, 4);
		leg2.setRotationPoint(12.0f, 16.0f, 16.0f);
		leg2.setTextureSize(256, 64);
		leg2.mirror = true;
		setRotation(leg2, 0.0f, 0.0f, 0.0f);
		(leg3 = new ModelRenderer(this, 0, 16)).addBox(-3.0f, 0.0f, -3.0f, 4, 8, 4);
		leg3.setRotationPoint(6.0f, 16.0f, 0.0f);
		leg3.setTextureSize(256, 64);
		leg3.mirror = true;
		setRotation(leg3, 0.0f, 0.0f, 0.0f);
		(leg4 = new ModelRenderer(this, 0, 16)).addBox(-1.0f, 0.0f, -3.0f, 4, 8, 4);
		leg4.setRotationPoint(12.0f, 16.0f, 0.0f);
		leg4.setTextureSize(256, 64);
		leg4.mirror = true;
		setRotation(leg4, 0.0f, 0.0f, 0.0f);
		(headx2 = new ModelRenderer(this, 0, 0)).addBox(-4.0f, -4.0f, -6.0f, 8, 8, 6);
		headx2.setRotationPoint(9.0f, 12.0f, -3.0f);
		headx2.setTextureSize(256, 64);
		headx2.mirror = true;
		setRotation(headx2, 0.0f, 0.0f, 0.0f);
		(headx3 = new ModelRenderer(this, 0, 30)).addBox(4.0f, -4.0f, -6.0f, 3, 3, 6);
		headx3.setRotationPoint(9.0f, 13.0f, -5.0f);
		headx3.setTextureSize(256, 64);
		headx3.mirror = true;
		setRotation(headx3, -0.4363323f, 0.0f, 0.0f);
		(headx4 = new ModelRenderer(this, 0, 30)).addBox(-7.0f, -4.0f, -6.0f, 3, 3, 6);
		headx4.setRotationPoint(9.0f, 13.0f, -5.0f);
		headx4.setTextureSize(256, 64);
		headx4.mirror = true;
		setRotation(headx4, -0.4363323f, 0.0f, 0.0f);
		(headx5 = new ModelRenderer(this, 17, 28)).addBox(-6.5f, -3.5f, -9.0f, 2, 2, 3);
		headx5.setRotationPoint(9.0f, 13.0f, -5.0f);
		headx5.setTextureSize(256, 64);
		headx5.mirror = true;
		setRotation(headx5, -0.4363323f, 0.0f, 0.0f);
		(leg4p = new ModelRenderer(this, 0, 16)).addBox(-1.0f, 0.0f, -3.0f, 4, 8, 4);
		leg4p.setRotationPoint(-6.0f, 16.0f, 0.0f);
		leg4p.setTextureSize(256, 64);
		leg4p.mirror = true;
		setRotation(leg4p, 0.0f, 0.0f, 0.0f);
		(leg3p = new ModelRenderer(this, 0, 16)).addBox(-3.0f, 0.0f, -3.0f, 4, 8, 4);
		leg3p.setRotationPoint(-12.0f, 16.0f, 0.0f);
		leg3p.setTextureSize(256, 64);
		leg3p.mirror = true;
		setRotation(leg3p, 0.0f, 0.0f, 0.0f);
		(leg2p = new ModelRenderer(this, 0, 16)).addBox(-1.0f, 0.0f, -2.0f, 4, 8, 4);
		leg2p.setRotationPoint(-6.0f, 16.0f, 16.0f);
		leg2p.setTextureSize(256, 64);
		leg2p.mirror = true;
		setRotation(leg2p, 0.0f, 0.0f, 0.0f);
		(leg1p = new ModelRenderer(this, 0, 16)).addBox(-3.0f, 0.0f, -2.0f, 4, 8, 4);
		leg1p.setRotationPoint(-12.0f, 16.0f, 16.0f);
		leg1p.setTextureSize(256, 64);
		leg1p.mirror = true;
		setRotation(leg1p, 0.0f, 0.0f, 0.0f);
		(body2 = new ModelRenderer(this, 162, 17)).addBox(-5.0f, -6.0f, -7.0f, 2, 6, 21);
		body2.setRotationPoint(-8.0f, 12.0f, 9.0f);
		body2.setTextureSize(256, 64);
		body2.mirror = true;
		setRotation(body2, 0.5235988f, 0.0f, 0.0f);
		(headx6 = new ModelRenderer(this, 0, 0)).addBox(-4.0f, -4.0f, -6.0f, 8, 8, 6);
		headx6.setRotationPoint(-9.0f, 12.0f, -3.0f);
		headx6.setTextureSize(256, 64);
		headx6.mirror = true;
		setRotation(headx6, 0.0f, 0.0f, 0.0f);
		(headx7 = new ModelRenderer(this, 0, 30)).addBox(-7.0f, -4.0f, -6.0f, 3, 3, 6);
		headx7.setRotationPoint(-9.0f, 13.0f, -5.0f);
		headx7.setTextureSize(256, 64);
		headx7.mirror = true;
		setRotation(headx7, -0.4363323f, 0.0f, 0.0f);
		(headx8 = new ModelRenderer(this, 17, 28)).addBox(-6.5f, -3.5f, -9.0f, 2, 2, 3);
		headx8.setRotationPoint(-9.0f, 13.0f, -5.0f);
		headx8.setTextureSize(256, 64);
		headx8.mirror = true;
		setRotation(headx8, -0.4363323f, 0.0f, 0.0f);
		(headx9 = new ModelRenderer(this, 0, 30)).addBox(4.0f, -4.0f, -6.0f, 3, 3, 6);
		headx9.setRotationPoint(-9.0f, 13.0f, -5.0f);
		headx9.setTextureSize(256, 64);
		headx9.mirror = true;
		setRotation(headx9, -0.4363323f, 0.0f, 0.0f);
		(headx10 = new ModelRenderer(this, 17, 28)).addBox(4.5f, -3.5f, -9.0f, 2, 2, 3);
		headx10.setRotationPoint(-9.0f, 13.0f, -5.0f);
		headx10.setTextureSize(256, 64);
		headx10.mirror = true;
		setRotation(headx10, -0.4363323f, 0.0f, 0.0f);
		(body3 = new ModelRenderer(this, 162, 17)).addBox(1.0f, -6.0f, -7.0f, 2, 6, 21);
		body3.setRotationPoint(10.0f, 12.0f, 9.0f);
		body3.setTextureSize(256, 64);
		body3.mirror = true;
		setRotation(body3, 0.5235988f, 0.0f, 0.0f);
		(body4 = new ModelRenderer(this, 72, 46)).addBox(9.0f, -12.0f, -7.0f, 2, 8, 2);
		body4.setRotationPoint(-2.0f, 14.0f, 6.0f);
		body4.setTextureSize(256, 64);
		body4.mirror = true;
		setRotation(body4, 0.0f, 0.0f, 0.0f);
		(body5 = new ModelRenderer(this, 18, 40)).addBox(-7.0f, -5.0f, -7.0f, 14, 2, 22);
		body5.setRotationPoint(0.0f, 13.0f, 4.0f);
		body5.setTextureSize(256, 64);
		body5.mirror = true;
		setRotation(body5, 0.0f, 0.0f, 0.0f);
		(body6 = new ModelRenderer(this, 72, 46)).addBox(-7.0f, -12.0f, -7.0f, 2, 8, 2);
		body6.setRotationPoint(-2.0f, 14.0f, 6.0f);
		body6.setTextureSize(256, 64);
		body6.mirror = true;
		setRotation(body6, 0.0f, 0.0f, 0.0f);
		(body7 = new ModelRenderer(this, 68, 10)).addBox(8.0f, -15.0f, -7.0f, 4, 1, 20);
		body7.setRotationPoint(-2.0f, 14.0f, 6.0f);
		body7.setTextureSize(256, 64);
		body7.mirror = true;
		setRotation(body7, 0.0f, 0.0f, 0.0f);
		(body8 = new ModelRenderer(this, 68, 10)).addBox(-8.0f, -15.0f, -7.0f, 4, 1, 20);
		body8.setRotationPoint(-2.0f, 14.0f, 6.0f);
		body8.setTextureSize(256, 64);
		body8.mirror = true;
		setRotation(body8, 0.0f, 0.0f, 0.0f);
		(body9 = new ModelRenderer(this, 82, 37)).addBox(9.0f, -14.0f, -7.0f, 2, 2, 20);
		body9.setRotationPoint(-2.0f, 14.0f, 6.0f);
		body9.setTextureSize(256, 64);
		body9.mirror = true;
		setRotation(body9, 0.0f, 0.0f, 0.0f);
		(body10 = new ModelRenderer(this, 82, 37)).addBox(-7.0f, -14.0f, -7.0f, 2, 2, 20);
		body10.setRotationPoint(-2.0f, 14.0f, 6.0f);
		body10.setTextureSize(256, 64);
		body10.mirror = true;
		setRotation(body10, 0.0f, 0.0f, 0.0f);
		(body11 = new ModelRenderer(this, 0, 40)).addBox(-7.0f, -19.0f, 13.0f, 14, 17, 2);
		body11.setRotationPoint(0.0f, 10.0f, 4.0f);
		body11.setTextureSize(256, 64);
		body11.mirror = true;
		setRotation(body11, 0.0f, 0.0f, 0.0f);
		(body12 = new ModelRenderer(this, 123, 20)).addBox(-1.0f, -6.0f, 3.0f, 4, 4, 14);
		body12.setRotationPoint(2.0f, 10.0f, 0.0f);
		body12.setTextureSize(256, 64);
		body12.mirror = true;
		setRotation(body12, 0.0f, 0.0f, 0.0f);
		(body13 = new ModelRenderer(this, 135, 1)).addBox(3.0f, -13.0f, 9.0f, 4, 4, 10);
		body13.setRotationPoint(2.0f, 10.0f, 0.0f);
		body13.setTextureSize(256, 64);
		body13.mirror = true;
		setRotation(body13, 0.2617994f, 0.0f, 0.0f);
		(body14 = new ModelRenderer(this, 123, 20)).addBox(-7.0f, -6.0f, 3.0f, 4, 4, 14);
		body14.setRotationPoint(2.0f, 10.0f, 0.0f);
		body14.setTextureSize(256, 64);
		body14.mirror = true;
		setRotation(body14, 0.0f, 0.0f, 0.0f);
		(body15 = new ModelRenderer(this, 100, 1)).addBox(-7.0f, -18.0f, 13.0f, 10, 12, 4);
		body15.setRotationPoint(2.0f, 10.0f, 0.0f);
		body15.setTextureSize(256, 64);
		body15.mirror = true;
		setRotation(body15, 0.0f, 0.0f, 0.0f);
		(body16 = new ModelRenderer(this, 135, 1)).addBox(-11.0f, -13.0f, 9.0f, 4, 4, 10);
		body16.setRotationPoint(2.0f, 10.0f, 0.0f);
		body16.setTextureSize(256, 64);
		body16.mirror = true;
		setRotation(body16, 0.2617994f, 0.0f, 0.0f);
		(body17 = new ModelRenderer(this, 18, 0)).addBox(-6.0f, -6.0f, -7.0f, 12, 6, 21);
		body17.setRotationPoint(9.0f, 16.0f, 4.0f);
		body17.setTextureSize(256, 64);
		body17.mirror = true;
		setRotation(body17, 0.0f, 0.0f, 0.0f);
		(body18 = new ModelRenderer(this, 18, 0)).addBox(-6.0f, -6.0f, -7.0f, 12, 6, 21);
		body18.setRotationPoint(-9.0f, 16.0f, 4.0f);
		body18.setTextureSize(256, 64);
		body18.mirror = true;
		setRotation(body18, 0.0f, 0.0f, 0.0f);
	}

	@Override
	public void render(MatrixStack matrix, IVertexBuilder buffer, int light, int overlay, float red, float green, float blue, float alpha) {
		head1.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head2.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		headx.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg1.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg2.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg3.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg4.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		headx2.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		headx3.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		headx4.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		headx5.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg4p.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg3p.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg2p.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leg1p.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body2.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		headx6.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		headx7.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		headx8.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		headx9.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		headx10.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body3.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body4.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body5.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body6.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body7.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body8.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body9.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body10.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body11.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body12.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body13.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body14.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body15.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body16.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body17.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body18.render(matrix, buffer, light, overlay, red, green, blue, alpha);
	}

	private void setRotation(final ModelRenderer model, final float x, final float y, final float z) {
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
	}

	@Override
	public void setRotationAngles(MobEntity entityIn, float limbSwing, float limbSwingAmount, float ageInTicks, float netHeadYaw, float headPitch) {
		leg1.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f) * 1.4f * limbSwingAmount;
		leg1.rotateAngleY = 0.0f;
		leg3.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f) * 1.4f * limbSwingAmount;
		leg3.rotateAngleY = 0.0f;
		leg1p.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f) * 1.4f * limbSwingAmount;
		leg1p.rotateAngleY = 0.0f;
		leg3p.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f) * 1.4f * limbSwingAmount;
		leg3p.rotateAngleY = 0.0f;
		leg2.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
		leg4.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
		leg2p.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
		leg4p.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
		head1.rotateAngleY = netHeadYaw / 57.295776f;
		head1.rotateAngleX = headPitch / 54.11268f;
		head2.rotateAngleY = netHeadYaw / 57.295776f;
		head2.rotateAngleX = headPitch / 54.11268f;
	}
}
