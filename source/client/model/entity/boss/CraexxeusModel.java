package net.tslat.aoa3.client.model.entity.boss;

import com.mojang.blaze3d.matrix.MatrixStack;
import com.mojang.blaze3d.vertex.IVertexBuilder;
import net.minecraft.client.renderer.entity.model.EntityModel;
import net.minecraft.client.renderer.model.ModelRenderer;
import net.minecraft.entity.MobEntity;
import net.minecraft.util.math.MathHelper;

public class CraexxeusModel extends EntityModel<MobEntity> {
	private final ModelRenderer head;
	private final ModelRenderer wingR1;
	private final ModelRenderer rightArm;
	private final ModelRenderer leftArm;
	private final ModelRenderer rightLeg;
	private final ModelRenderer leftLeg;
	private final ModelRenderer rightArm2;
	private final ModelRenderer leftArm2;
	private final ModelRenderer leftArm3;
	private final ModelRenderer rightArm3;
	private final ModelRenderer leftArm4;
	private final ModelRenderer rightArm4;
	private final ModelRenderer leftArm5;
	private final ModelRenderer rightArm5;
	private final ModelRenderer rightArm6;
	private final ModelRenderer leftArm6;
	private final ModelRenderer rightArm7;
	private final ModelRenderer leftArm7;
	private final ModelRenderer rightArm8;
	private final ModelRenderer leftArm8;
	private final ModelRenderer rightArm9;
	private final ModelRenderer leftArm9;
	private final ModelRenderer rightArm10;
	private final ModelRenderer leftArm10;
	private final ModelRenderer rightArm11;
	private final ModelRenderer leftArm11;
	private final ModelRenderer head2;
	private final ModelRenderer head3;
	private final ModelRenderer head4;
	private final ModelRenderer head5;
	private final ModelRenderer head6;
	private final ModelRenderer head7;
	private final ModelRenderer body8;
	private final ModelRenderer drag;
	private final ModelRenderer drag2;
	private final ModelRenderer drag3;
	private final ModelRenderer drag4;
	private final ModelRenderer drag5;
	private final ModelRenderer drag6;
	private final ModelRenderer drag7;
	private final ModelRenderer drag8;
	private final ModelRenderer drag9;
	private final ModelRenderer drag10;
	private final ModelRenderer drag11;
	private final ModelRenderer drag13;
	private final ModelRenderer drag12;
	private final ModelRenderer drag14;
	private final ModelRenderer drag15;
	private final ModelRenderer drag17;
	private final ModelRenderer drag16;
	private final ModelRenderer drag18;
	private final ModelRenderer drag19;
	private final ModelRenderer drag20;
	private final ModelRenderer drag21;
	private final ModelRenderer drag22;
	private final ModelRenderer drag23;
	private final ModelRenderer drag24;
	private final ModelRenderer drag25;
	private final ModelRenderer drag26;
	private final ModelRenderer drag27;
	private final ModelRenderer drag28;
	private final ModelRenderer drag29;
	private final ModelRenderer wingR2;
	private final ModelRenderer wingL1;
	private final ModelRenderer wingL2;
	private final ModelRenderer wingL3;
	private final ModelRenderer wingR3;
	private final ModelRenderer wingR4;
	private final ModelRenderer wingL4;
	private final ModelRenderer wingL5;
	private final ModelRenderer wingL6;
	private final ModelRenderer wingR5;
	private final ModelRenderer wingR6;
	private final ModelRenderer wingR7;
	private final ModelRenderer wingR8;
	private final ModelRenderer wingL7;
	private final ModelRenderer wingL8;
	private final ModelRenderer drag30;
	private final ModelRenderer drag31;
	private final ModelRenderer drag32;
	private final ModelRenderer drag33;
	private final ModelRenderer drag34;
	private final ModelRenderer drag35;
	private final ModelRenderer drag36;
	private final ModelRenderer drag37;
	private final ModelRenderer drag39;
	private final ModelRenderer drag38;
	private final ModelRenderer leftArm12;
	private final ModelRenderer rightArm12;
	private final ModelRenderer leftArm13;
	private final ModelRenderer rightArm13;
	private final ModelRenderer leftArm14;
	private final ModelRenderer rightArm14;
	private final ModelRenderer leftArm15;
	private final ModelRenderer rightArm15;
	private final ModelRenderer leftArm16;
	private final ModelRenderer rightArm16;
	private final ModelRenderer drag40;
	private final ModelRenderer drag41;
	private final ModelRenderer drag42;
	private final ModelRenderer drag43;

	public CraexxeusModel() {
		texWidth = 256;
		texHeight = 128;

		head = new ModelRenderer(this, 66, 7);
		head.addBox(-2.0F, -14.0F, -5.0F, 4, 2, 1);
		head.setPos(0.0F, -14.0F, 15.0F);
		head.setTexSize(256, 128);
		head.mirror = true;
		setRotation(head, 0.0F, 0.0F, 0.0F);
		wingR1 = new ModelRenderer(this, 5, 87);
		wingR1.addBox(-17.0F, -5.0F, 10.0F, 2, 3, 4);
		wingR1.setPos(-9.0F, 7.0F, 6.0F);
		wingR1.setTexSize(256, 128);
		wingR1.mirror = true;
		setRotation(wingR1, 0.0F, 0.0F, 0.0F);
		rightArm = new ModelRenderer(this, 57, 27);
		rightArm.addBox(-4.0F, -7.0F, 1.0F, 1, 3, 2);
		rightArm.setPos(-7.0F, -11.0F, 15.0F);
		rightArm.setTexSize(256, 128);
		rightArm.mirror = true;
		setRotation(rightArm, 0.0F, 0.0F, 0.2617994F);
		leftArm = new ModelRenderer(this, 57, 27);
		leftArm.addBox(3.0F, -7.0F, 1.0F, 1, 3, 2);
		leftArm.setPos(7.0F, -11.0F, 15.0F);
		leftArm.setTexSize(256, 128);
		leftArm.mirror = true;
		setRotation(leftArm, 0.0F, 0.0F, -0.2617994F);
		rightLeg = new ModelRenderer(this, 0, 16);
		rightLeg.addBox(-2.0F, 0.0F, -2.0F, 4, 12, 4);
		rightLeg.setPos(-3.0F, 0.0F, 16.0F);
		rightLeg.setTexSize(256, 128);
		rightLeg.mirror = true;
		setRotation(rightLeg, -1.570796F, 0.2094395F, 0.0F);
		leftLeg = new ModelRenderer(this, 0, 16);
		leftLeg.addBox(-2.0F, 0.0F, -2.0F, 4, 12, 4);
		leftLeg.setPos(3.0F, 0.0F, 16.0F);
		leftLeg.setTexSize(256, 128);
		leftLeg.mirror = true;
		setRotation(leftLeg, -1.570796F, -0.2094395F, 0.0F);
		rightArm2 = new ModelRenderer(this, 90, 7);
		rightArm2.addBox(-1.5F, 14.0F, -19.0F, 1, 1, 5);
		rightArm2.setPos(-7.0F, -11.0F, 15.0F);
		rightArm2.setTexSize(256, 128);
		rightArm2.mirror = true;
		setRotation(rightArm2, 0.0F, 0.0F, 0.2617994F);
		leftArm2 = new ModelRenderer(this, 90, 7);
		leftArm2.addBox(0.5F, 14.0F, -19.0F, 1, 1, 5);
		leftArm2.setPos(7.0F, -11.0F, 15.0F);
		leftArm2.setTexSize(256, 128);
		leftArm2.mirror = true;
		setRotation(leftArm2, 0.0F, 0.0F, -0.2617994F);
		leftArm3 = new ModelRenderer(this, 57, 17);
		leftArm3.addBox(-2.0F, -4.0F, -3.0F, 6, 2, 6);
		leftArm3.setPos(7.0F, -11.0F, 15.0F);
		leftArm3.setTexSize(256, 128);
		leftArm3.mirror = true;
		setRotation(leftArm3, 0.0F, 0.0F, -0.2617994F);
		rightArm3 = new ModelRenderer(this, 57, 17);
		rightArm3.addBox(-4.0F, -4.0F, -3.0F, 6, 2, 6);
		rightArm3.setPos(-7.0F, -11.0F, 15.0F);
		rightArm3.setTexSize(256, 128);
		rightArm3.mirror = true;
		setRotation(rightArm3, 0.0F, 0.0F, 0.2617994F);
		leftArm4 = new ModelRenderer(this, 57, 27);
		leftArm4.addBox(3.0F, -7.0F, -3.0F, 1, 3, 2);
		leftArm4.setPos(7.0F, -11.0F, 15.0F);
		leftArm4.setTexSize(256, 128);
		leftArm4.mirror = true;
		setRotation(leftArm4, 0.0F, 0.0F, -0.2617994F);
		rightArm4 = new ModelRenderer(this, 57, 27);
		rightArm4.addBox(-4.0F, -7.0F, -3.0F, 1, 3, 2);
		rightArm4.setPos(-7.0F, -11.0F, 15.0F);
		rightArm4.setTexSize(256, 128);
		rightArm4.mirror = true;
		setRotation(rightArm4, 0.0F, 0.0F, 0.2617994F);
		leftArm5 = new ModelRenderer(this, 40, 16);
		leftArm5.addBox(-1.0F, -2.0F, -2.0F, 4, 12, 4);
		leftArm5.setPos(7.0F, -11.0F, 15.0F);
		leftArm5.setTexSize(256, 128);
		leftArm5.mirror = true;
		setRotation(leftArm5, 0.0F, 0.0F, -0.2617994F);
		rightArm5 = new ModelRenderer(this, 40, 16);
		rightArm5.addBox(-3.0F, -2.0F, -2.0F, 4, 12, 4);
		rightArm5.setPos(-7.0F, -11.0F, 15.0F);
		rightArm5.setTexSize(256, 128);
		rightArm5.mirror = true;
		setRotation(rightArm5, 0.0F, 0.0F, 0.2617994F);
		rightArm6 = new ModelRenderer(this, 73, 29);
		rightArm6.addBox(-2.0F, 7.0F, -7.0F, 2, 2, 10);
		rightArm6.setPos(-7.0F, -11.0F, 15.0F);
		rightArm6.setTexSize(256, 128);
		rightArm6.mirror = true;
		setRotation(rightArm6, 0.0F, 0.0F, 0.2617994F);
		leftArm6 = new ModelRenderer(this, 73, 29);
		leftArm6.addBox(0.0F, 7.0F, -7.0F, 2, 2, 10);
		leftArm6.setPos(7.0F, -11.0F, 15.0F);
		leftArm6.setTexSize(256, 128);
		leftArm6.mirror = true;
		setRotation(leftArm6, 0.0F, 0.0F, -0.2617994F);
		rightArm7 = new ModelRenderer(this, 72, 92);
		rightArm7.addBox(-1.5F, 4.0F, -27.0F, 1, 2, 2);
		rightArm7.setPos(-7.0F, -11.0F, 15.0F);
		rightArm7.setTexSize(256, 128);
		rightArm7.mirror = true;
		setRotation(rightArm7, 0.0F, 0.0F, 0.2617994F);
		leftArm7 = new ModelRenderer(this, 72, 92);
		leftArm7.addBox(0.5F, 4.0F, -27.0F, 1, 2, 2);
		leftArm7.setPos(7.0F, -11.0F, 15.0F);
		leftArm7.setTexSize(256, 128);
		leftArm7.mirror = true;
		setRotation(leftArm7, 0.0F, 0.0F, -0.2617994F);
		rightArm8 = new ModelRenderer(this, 111, 1);
		rightArm8.addBox(-1.5F, 5.0F, -24.0F, 1, 6, 2);
		rightArm8.setPos(-7.0F, -11.0F, 15.0F);
		rightArm8.setTexSize(256, 128);
		rightArm8.mirror = true;
		setRotation(rightArm8, 0.0F, 0.0F, 0.2617994F);
		leftArm8 = new ModelRenderer(this, 111, 1);
		leftArm8.addBox(0.5F, 5.0F, -24.0F, 1, 6, 2);
		leftArm8.setPos(7.0F, -11.0F, 15.0F);
		leftArm8.setTexSize(256, 128);
		leftArm8.mirror = true;
		setRotation(leftArm8, 0.0F, 0.0F, -0.2617994F);
		rightArm9 = new ModelRenderer(this, 99, 14);
		rightArm9.addBox(-1.5F, 12.0F, -19.0F, 1, 2, 2);
		rightArm9.setPos(-7.0F, -11.0F, 15.0F);
		rightArm9.setTexSize(256, 128);
		rightArm9.mirror = true;
		setRotation(rightArm9, 0.0F, 0.0F, 0.2617994F);
		leftArm9 = new ModelRenderer(this, 99, 14);
		leftArm9.addBox(0.5F, 12.0F, -19.0F, 1, 2, 2);
		leftArm9.setPos(7.0F, -11.0F, 15.0F);
		leftArm9.setTexSize(256, 128);
		leftArm9.mirror = true;
		setRotation(leftArm9, 0.0F, 0.0F, -0.2617994F);
		rightArm10 = new ModelRenderer(this, 90, 7);
		rightArm10.addBox(-1.5F, 1.0F, -19.0F, 1, 1, 5);
		rightArm10.setPos(-7.0F, -11.0F, 15.0F);
		rightArm10.setTexSize(256, 128);
		rightArm10.mirror = true;
		setRotation(rightArm10, 0.0F, 0.0F, 0.2617994F);
		leftArm10 = new ModelRenderer(this, 90, 7);
		leftArm10.addBox(0.5F, 1.0F, -19.0F, 1, 1, 5);
		leftArm10.setPos(7.0F, -11.0F, 15.0F);
		leftArm10.setTexSize(256, 128);
		leftArm10.mirror = true;
		setRotation(leftArm10, 0.0F, 0.0F, -0.2617994F);
		rightArm11 = new ModelRenderer(this, 90, 1);
		rightArm11.addBox(-1.5F, 2.0F, -19.0F, 1, 2, 2);
		rightArm11.setPos(-7.0F, -11.0F, 15.0F);
		rightArm11.setTexSize(256, 128);
		rightArm11.mirror = true;
		setRotation(rightArm11, 0.0F, 0.0F, 0.2617994F);
		leftArm11 = new ModelRenderer(this, 90, 1);
		leftArm11.addBox(0.5F, 2.0F, -19.0F, 1, 2, 2);
		leftArm11.setPos(7.0F, -11.0F, 15.0F);
		leftArm11.setTexSize(256, 128);
		leftArm11.mirror = true;
		setRotation(leftArm11, 0.0F, 0.0F, -0.2617994F);
		head2 = new ModelRenderer(this, 0, 0);
		head2.addBox(-4.0F, -5.0F, -4.0F, 8, 5, 8);
		head2.setPos(0.0F, -14.0F, 15.0F);
		head2.setTexSize(256, 128);
		head2.mirror = true;
		setRotation(head2, 0.0F, 0.0F, 0.0F);
		head3 = new ModelRenderer(this, 103, 28);
		head3.addBox(5.0F, -9.0F, 2.0F, 1, 4, 11);
		head3.setPos(0.0F, -14.0F, 15.0F);
		head3.setTexSize(256, 128);
		head3.mirror = true;
		setRotation(head3, 0.5235988F, 0.0F, 0.0F);
		head4 = new ModelRenderer(this, 66, 0);
		head4.addBox(-4.0F, -10.0F, -5.0F, 8, 1, 1);
		head4.setPos(0.0F, -14.0F, 15.0F);
		head4.setTexSize(256, 128);
		head4.mirror = true;
		setRotation(head4, 0.0F, 0.0F, 0.0F);
		head5 = new ModelRenderer(this, 66, 3);
		head5.addBox(-3.0F, -12.0F, -5.0F, 6, 2, 1);
		head5.setPos(0.0F, -14.0F, 15.0F);
		head5.setTexSize(256, 128);
		head5.mirror = true;
		setRotation(head5, 0.0F, 0.0F, 0.0F);
		head6 = new ModelRenderer(this, 33, 0);
		head6.addBox(-5.0F, -9.0F, -5.0F, 10, 4, 11);
		head6.setPos(0.0F, -14.0F, 15.0F);
		head6.setTexSize(256, 128);
		head6.mirror = true;
		setRotation(head6, 0.0F, 0.0F, 0.0F);
		head7 = new ModelRenderer(this, 103, 28);
		head7.addBox(-6.0F, -9.0F, 2.0F, 1, 4, 11);
		head7.setPos(0.0F, -14.0F, 15.0F);
		head7.setTexSize(256, 128);
		head7.mirror = true;
		setRotation(head7, 0.5235988F, 0.0F, 0.0F);
		body8 = new ModelRenderer(this, 16, 16);
		body8.addBox(-4.0F, 0.0F, -2.0F, 8, 12, 4);
		body8.setPos(0.0F, -14.0F, 15.0F);
		body8.setTexSize(256, 128);
		body8.mirror = true;
		setRotation(body8, 0.0F, 0.0F, 0.0F);
		drag = new ModelRenderer(this, 149, 96);
		drag.addBox(8.0F, 20.0F, -20.0F, 4, 14, 8);
		drag.setPos(0.0F, -15.0F, -1.0F);
		drag.setTexSize(256, 128);
		drag.mirror = true;
		setRotation(drag, 0.0F, 0.0F, 0.0F);
		drag2 = new ModelRenderer(this, 87, 111);
		drag2.addBox(-5.0F, -20.0F, -1.0F, 4, 13, 2);
		drag2.setPos(0.0F, 6.0F, 23.0F);
		drag2.setTexSize(256, 128);
		drag2.mirror = true;
		setRotation(drag2, 0.0F, 0.0F, 0.0F);
		drag3 = new ModelRenderer(this, 210, 49);
		drag3.addBox(-9.0F, 18.0F, -12.0F, 18, 18, 1);
		drag3.setPos(0.0F, -15.0F, -1.0F);
		drag3.setTexSize(256, 128);
		drag3.mirror = true;
		setRotation(drag3, 0.0F, 0.0F, 0.0F);
		drag4 = new ModelRenderer(this, 114, 66);
		drag4.addBox(-7.0F, 35.0F, -20.0F, 14, 4, 8);
		drag4.setPos(0.0F, -15.0F, -1.0F);
		drag4.setTexSize(256, 128);
		drag4.mirror = true;
		setRotation(drag4, 0.0F, 0.0F, 0.0F);
		drag5 = new ModelRenderer(this, 202, 104);
		drag5.addBox(12.0F, 23.0F, -18.0F, 3, 2, 2);
		drag5.setPos(0.0F, -15.0F, -1.0F);
		drag5.setTexSize(256, 128);
		drag5.mirror = true;
		setRotation(drag5, 0.0F, 0.0F, 0.0F);
		drag6 = new ModelRenderer(this, 207, 76);
		drag6.addBox(-3.0F, 33.0F, -20.0F, 2, 2, 1);
		drag6.setPos(0.0F, -15.0F, -1.0F);
		drag6.setTexSize(256, 128);
		drag6.mirror = true;
		setRotation(drag6, 0.0F, 0.0F, 0.0F);
		drag7 = new ModelRenderer(this, 114, 49);
		drag7.addBox(-7.0F, 15.0F, -20.0F, 14, 4, 8);
		drag7.setPos(0.0F, -15.0F, -1.0F);
		drag7.setTexSize(256, 128);
		drag7.mirror = true;
		setRotation(drag7, 0.0F, 0.0F, 0.0F);
		drag8 = new ModelRenderer(this, 207, 76);
		drag8.addBox(-6.0F, 33.0F, -20.0F, 2, 2, 1);
		drag8.setPos(0.0F, -15.0F, -1.0F);
		drag8.setTexSize(256, 128);
		drag8.mirror = true;
		setRotation(drag8, 0.0F, 0.0F, 0.0F);
		drag9 = new ModelRenderer(this, 207, 76);
		drag9.addBox(4.0F, 33.0F, -20.0F, 2, 2, 1);
		drag9.setPos(0.0F, -15.0F, -1.0F);
		drag9.setTexSize(256, 128);
		drag9.mirror = true;
		setRotation(drag9, 0.0F, 0.0F, 0.0F);
		drag10 = new ModelRenderer(this, 207, 76);
		drag10.addBox(1.0F, 33.0F, -20.0F, 2, 2, 1);
		drag10.setPos(0.0F, -15.0F, -1.0F);
		drag10.setTexSize(256, 128);
		drag10.mirror = true;
		setRotation(drag10, 0.0F, 0.0F, 0.0F);
		drag11 = new ModelRenderer(this, 207, 76);
		drag11.addBox(-6.0F, 19.0F, -20.0F, 2, 2, 1);
		drag11.setPos(0.0F, -15.0F, -1.0F);
		drag11.setTexSize(256, 128);
		drag11.mirror = true;
		setRotation(drag11, 0.0F, 0.0F, 0.0F);
		drag13 = new ModelRenderer(this, 207, 76);
		drag13.addBox(-3.0F, 19.0F, -20.0F, 2, 2, 1);
		drag13.setPos(0.0F, -15.0F, -1.0F);
		drag13.setTexSize(256, 128);
		drag13.mirror = true;
		setRotation(drag13, 0.0F, 0.0F, 0.0F);
		drag12 = new ModelRenderer(this, 207, 76);
		drag12.addBox(1.0F, 19.0F, -20.0F, 2, 2, 1);
		drag12.setPos(0.0F, -15.0F, -1.0F);
		drag12.setTexSize(256, 128);
		drag12.mirror = true;
		setRotation(drag12, 0.0F, 0.0F, 0.0F);
		drag14 = new ModelRenderer(this, 207, 76);
		drag14.addBox(-8.0F, 31.0F, -20.0F, 2, 2, 1);
		drag14.setPos(0.0F, -15.0F, -1.0F);
		drag14.setTexSize(256, 128);
		drag14.mirror = true;
		setRotation(drag14, 0.0F, 0.0F, 0.0F);
		drag15 = new ModelRenderer(this, 207, 76);
		drag15.addBox(4.0F, 19.0F, -20.0F, 2, 2, 1);
		drag15.setPos(0.0F, -15.0F, -1.0F);
		drag15.setTexSize(256, 128);
		drag15.mirror = true;
		setRotation(drag15, 0.0F, 0.0F, 0.0F);
		drag17 = new ModelRenderer(this, 207, 76);
		drag17.addBox(-8.0F, 21.0F, -20.0F, 2, 2, 1);
		drag17.setPos(0.0F, -15.0F, -1.0F);
		drag17.setTexSize(256, 128);
		drag17.mirror = true;
		setRotation(drag17, 0.0F, 0.0F, 0.0F);
		drag16 = new ModelRenderer(this, 207, 76);
		drag16.addBox(-8.0F, 24.0F, -20.0F, 2, 2, 1);
		drag16.setPos(0.0F, -15.0F, -1.0F);
		drag16.setTexSize(256, 128);
		drag16.mirror = true;
		setRotation(drag16, 0.0F, 0.0F, 0.0F);
		drag18 = new ModelRenderer(this, 207, 76);
		drag18.addBox(-8.0F, 28.0F, -20.0F, 2, 2, 1);
		drag18.setPos(0.0F, -15.0F, -1.0F);
		drag18.setTexSize(256, 128);
		drag18.mirror = true;
		setRotation(drag18, 0.0F, 0.0F, 0.0F);
		drag19 = new ModelRenderer(this, 207, 76);
		drag19.addBox(6.0F, 24.0F, -20.0F, 2, 2, 1);
		drag19.setPos(0.0F, -15.0F, -1.0F);
		drag19.setTexSize(256, 128);
		drag19.mirror = true;
		setRotation(drag19, 0.0F, 0.0F, 0.0F);
		drag20 = new ModelRenderer(this, 207, 76);
		drag20.addBox(6.0F, 31.0F, -20.0F, 2, 2, 1);
		drag20.setPos(0.0F, -15.0F, -1.0F);
		drag20.setTexSize(256, 128);
		drag20.mirror = true;
		setRotation(drag20, 0.0F, 0.0F, 0.0F);
		drag21 = new ModelRenderer(this, 207, 76);
		drag21.addBox(6.0F, 28.0F, -20.0F, 2, 2, 1);
		drag21.setPos(0.0F, -15.0F, -1.0F);
		drag21.setTexSize(256, 128);
		drag21.mirror = true;
		setRotation(drag21, 0.0F, 0.0F, 0.0F);
		drag22 = new ModelRenderer(this, 207, 76);
		drag22.addBox(6.0F, 21.0F, -20.0F, 2, 2, 1);
		drag22.setPos(0.0F, -15.0F, -1.0F);
		drag22.setTexSize(256, 128);
		drag22.mirror = true;
		setRotation(drag22, 0.0F, 0.0F, 0.0F);
		drag23 = new ModelRenderer(this, 121, 96);
		drag23.addBox(-12.0F, 20.0F, -20.0F, 4, 14, 8);
		drag23.setPos(0.0F, -15.0F, -1.0F);
		drag23.setTexSize(256, 128);
		drag23.mirror = true;
		setRotation(drag23, 0.0F, 0.0F, 0.0F);
		drag24 = new ModelRenderer(this, 202, 104);
		drag24.addBox(-15.0F, 23.0F, -18.0F, 3, 2, 2);
		drag24.setPos(0.0F, -15.0F, -1.0F);
		drag24.setTexSize(256, 128);
		drag24.mirror = true;
		setRotation(drag24, 0.0F, 0.0F, 0.0F);
		drag25 = new ModelRenderer(this, 176, 96);
		drag25.addBox(-16.0F, 13.0F, -20.0F, 6, 6, 6);
		drag25.setPos(0.0F, -15.0F, -1.0F);
		drag25.setTexSize(256, 128);
		drag25.mirror = true;
		setRotation(drag25, 0.0F, 0.0F, 0.0F);
		drag26 = new ModelRenderer(this, 218, 96);
		drag26.addBox(-21.0F, 26.0F, -20.0F, 6, 6, 6);
		drag26.setPos(0.0F, -15.0F, -1.0F);
		drag26.setTexSize(256, 128);
		drag26.mirror = true;
		setRotation(drag26, 0.0F, 0.0F, 0.0F);
		drag27 = new ModelRenderer(this, 227, 111);
		drag27.addBox(-17.0F, 23.0F, -18.0F, 2, 3, 2);
		drag27.setPos(0.0F, -15.0F, -1.0F);
		drag27.setTexSize(256, 128);
		drag27.mirror = true;
		setRotation(drag27, 0.0F, 0.0F, 0.0F);
		drag28 = new ModelRenderer(this, 202, 96);
		drag28.addBox(-15.0F, 19.0F, -18.0F, 2, 4, 2);
		drag28.setPos(0.0F, -15.0F, -1.0F);
		drag28.setTexSize(256, 128);
		drag28.mirror = true;
		setRotation(drag28, 0.0F, 0.0F, 0.0F);
		drag29 = new ModelRenderer(this, 129, 51);
		drag29.addBox(-10.0F, 25.0F, -19.0F, 20, 8, 34);
		drag29.setPos(0.0F, -15.0F, 7.0F);
		drag29.setTexSize(256, 128);
		drag29.mirror = true;
		setRotation(drag29, 0.0F, 0.0F, 0.0F);
		wingR2 = new ModelRenderer(this, 5, 40);
		wingR2.addBox(-20.0F, -5.0F, 10.0F, 2, 3, 4);
		wingR2.setPos(-10.0F, 15.0F, 7.0F);
		wingR2.setTexSize(256, 128);
		wingR2.mirror = true;
		setRotation(wingR2, 0.0F, 0.0F, 0.0F);
		wingL1 = new ModelRenderer(this, 5, 87);
		wingL1.addBox(16.0F, -5.0F, 10.0F, 2, 3, 4);
		wingL1.setPos(8.0F, 7.0F, 6.0F);
		wingL1.setTexSize(256, 128);
		wingL1.mirror = true;
		setRotation(wingL1, 0.0F, 0.0F, 0.0F);
		wingL2 = new ModelRenderer(this, 5, 40);
		wingL2.addBox(18.0F, -5.0F, 10.0F, 2, 3, 4);
		wingL2.setPos(10.0F, 15.0F, 7.0F);
		wingL2.setTexSize(256, 128);
		wingL2.mirror = true;
		setRotation(wingL2, 0.0F, 0.0F, 0.0F);
		wingL3 = new ModelRenderer(this, 1, 73);
		wingL3.addBox(0.0F, -2.0F, -16.0F, 18, 3, 30);
		wingL3.setPos(8.0F, 7.0F, 6.0F);
		wingL3.setTexSize(256, 128);
		wingL3.mirror = true;
		setRotation(wingL3, 0.0F, 0.0F, 0.0F);
		wingR3 = new ModelRenderer(this, 1, 73);
		wingR3.addBox(-17.0F, -2.0F, -16.0F, 18, 3, 30);
		wingR3.setPos(-9.0F, 7.0F, 6.0F);
		wingR3.setTexSize(256, 128);
		wingR3.mirror = true;
		setRotation(wingR3, 0.0F, 0.0F, 0.0F);
		wingR4 = new ModelRenderer(this, 1, 35);
		wingR4.addBox(-20.0F, -2.0F, -16.0F, 20, 3, 30);
		wingR4.setPos(-10.0F, 15.0F, 7.0F);
		wingR4.setTexSize(256, 128);
		wingR4.mirror = true;
		setRotation(wingR4, 0.0F, 0.0F, 0.0F);
		wingL4 = new ModelRenderer(this, 1, 35);
		wingL4.addBox(0.0F, -2.0F, -16.0F, 20, 3, 30);
		wingL4.setPos(10.0F, 15.0F, 7.0F);
		wingL4.setTexSize(256, 128);
		wingL4.mirror = true;
		setRotation(wingL4, 0.0F, 0.0F, 0.0F);
		wingL5 = new ModelRenderer(this, 5, 40);
		wingL5.addBox(18.0F, -5.0F, -3.0F, 2, 3, 4);
		wingL5.setPos(10.0F, 15.0F, 7.0F);
		wingL5.setTexSize(256, 128);
		wingL5.mirror = true;
		setRotation(wingL5, 0.0F, 0.0F, 0.0F);
		wingL6 = new ModelRenderer(this, 5, 87);
		wingL6.addBox(16.0F, -5.0F, -3.0F, 2, 3, 4);
		wingL6.setPos(8.0F, 7.0F, 6.0F);
		wingL6.setTexSize(256, 128);
		wingL6.mirror = true;
		setRotation(wingL6, 0.0F, 0.0F, 0.0F);
		wingR5 = new ModelRenderer(this, 5, 87);
		wingR5.addBox(-17.0F, -5.0F, -3.0F, 2, 3, 4);
		wingR5.setPos(-9.0F, 7.0F, 6.0F);
		wingR5.setTexSize(256, 128);
		wingR5.mirror = true;
		setRotation(wingR5, 0.0F, 0.0F, 0.0F);
		wingR6 = new ModelRenderer(this, 5, 40);
		wingR6.addBox(-20.0F, -5.0F, -3.0F, 2, 3, 4);
		wingR6.setPos(-10.0F, 15.0F, 7.0F);
		wingR6.setTexSize(256, 128);
		wingR6.mirror = true;
		setRotation(wingR6, 0.0F, 0.0F, 0.0F);
		wingR7 = new ModelRenderer(this, 5, 87);
		wingR7.addBox(-17.0F, -5.0F, -16.0F, 2, 3, 4);
		wingR7.setPos(-9.0F, 7.0F, 6.0F);
		wingR7.setTexSize(256, 128);
		wingR7.mirror = true;
		setRotation(wingR7, 0.0F, 0.0F, 0.0F);
		wingR8 = new ModelRenderer(this, 5, 40);
		wingR8.addBox(-20.0F, -5.0F, -16.0F, 2, 3, 4);
		wingR8.setPos(-10.0F, 15.0F, 7.0F);
		wingR8.setTexSize(256, 128);
		wingR8.mirror = true;
		setRotation(wingR8, 0.0F, 0.0F, 0.0F);
		wingL7 = new ModelRenderer(this, 5, 87);
		wingL7.addBox(16.0F, -5.0F, -16.0F, 2, 3, 4);
		wingL7.setPos(8.0F, 7.0F, 6.0F);
		wingL7.setTexSize(256, 128);
		wingL7.mirror = true;
		setRotation(wingL7, 0.0F, 0.0F, 0.0F);
		wingL8 = new ModelRenderer(this, 5, 40);
		wingL8.addBox(18.0F, -5.0F, -16.0F, 2, 3, 4);
		wingL8.setPos(10.0F, 15.0F, 7.0F);
		wingL8.setTexSize(256, 128);
		wingL8.mirror = true;
		setRotation(wingL8, 0.0F, 0.0F, 0.0F);
		drag30 = new ModelRenderer(this, 129, 1);
		drag30.addBox(-8.0F, 17.0F, -19.0F, 16, 8, 34);
		drag30.setPos(0.0F, -15.0F, 7.0F);
		drag30.setTexSize(256, 128);
		drag30.mirror = true;
		setRotation(drag30, 0.0F, 0.0F, 0.0F);
		drag31 = new ModelRenderer(this, 198, 1);
		drag31.addBox(-6.0F, 0.0F, -1.0F, 12, 17, 2);
		drag31.setPos(0.0F, 6.0F, 23.0F);
		drag31.setTexSize(256, 128);
		drag31.mirror = true;
		setRotation(drag31, 0.0F, 0.0F, 0.0F);
		drag32 = new ModelRenderer(this, 175, 111);
		drag32.addBox(-11.0F, -7.0F, -1.0F, 22, 7, 2);
		drag32.setPos(0.0F, 6.0F, 23.0F);
		drag32.setTexSize(256, 128);
		drag32.mirror = true;
		setRotation(drag32, 0.0F, 0.0F, 0.0F);
		drag33 = new ModelRenderer(this, 20, 111);
		drag33.addBox(-18.0F, -7.0F, -1.0F, 7, 3, 2);
		drag33.setPos(0.0F, 6.0F, 23.0F);
		drag33.setTexSize(256, 128);
		drag33.mirror = true;
		setRotation(drag33, 0.0F, 0.0F, 0.0F);
		drag34 = new ModelRenderer(this, 102, 111);
		drag34.addBox(6.0F, -14.0F, -1.0F, 5, 7, 2);
		drag34.setPos(0.0F, 6.0F, 23.0F);
		drag34.setTexSize(256, 128);
		drag34.mirror = true;
		setRotation(drag34, 0.0F, 0.0F, 0.0F);
		drag35 = new ModelRenderer(this, 87, 111);
		drag35.addBox(1.0F, -20.0F, -1.0F, 4, 13, 2);
		drag35.setPos(0.0F, 6.0F, 23.0F);
		drag35.setTexSize(256, 128);
		drag35.mirror = true;
		setRotation(drag35, 0.0F, 0.0F, 0.0F);
		drag36 = new ModelRenderer(this, 102, 111);
		drag36.addBox(-11.0F, -14.0F, -1.0F, 5, 7, 2);
		drag36.setPos(0.0F, 6.0F, 23.0F);
		drag36.setTexSize(256, 128);
		drag36.mirror = true;
		setRotation(drag36, 0.0F, 0.0F, 0.0F);
		drag37 = new ModelRenderer(this, 66, 111);
		drag37.addBox(-18.0F, -12.0F, -1.0F, 5, 5, 2);
		drag37.setPos(0.0F, 6.0F, 23.0F);
		drag37.setTexSize(256, 128);
		drag37.mirror = true;
		setRotation(drag37, 0.0F, 0.0F, 0.0F);
		drag39 = new ModelRenderer(this, 66, 111);
		drag39.addBox(13.0F, -12.0F, -1.0F, 5, 5, 2);
		drag39.setPos(0.0F, 6.0F, 23.0F);
		drag39.setTexSize(256, 128);
		drag39.mirror = true;
		setRotation(drag39, 0.0F, 0.0F, 0.0F);
		drag38 = new ModelRenderer(this, 44, 111);
		drag38.addBox(11.0F, -7.0F, -1.0F, 7, 3, 2);
		drag38.setPos(0.0F, 6.0F, 23.0F);
		drag38.setTexSize(256, 128);
		drag38.mirror = true;
		setRotation(drag38, 0.0F, 0.0F, 0.0F);
		leftArm12 = new ModelRenderer(this, 89, 1);
		leftArm12.addBox(0.5F, 4.0F, -22.0F, 1, 8, 18);
		leftArm12.setPos(7.0F, -11.0F, 15.0F);
		leftArm12.setTexSize(256, 128);
		leftArm12.mirror = true;
		setRotation(leftArm12, 0.0F, 0.0F, -0.2617994F);
		rightArm12 = new ModelRenderer(this, 89, 1);
		rightArm12.addBox(-1.5F, 4.0F, -22.0F, 1, 8, 18);
		rightArm12.setPos(-7.0F, -11.0F, 15.0F);
		rightArm12.setTexSize(256, 128);
		rightArm12.mirror = true;
		setRotation(rightArm12, 0.0F, 0.0F, 0.2617994F);
		leftArm13 = new ModelRenderer(this, 72, 70);
		leftArm13.addBox(0.5F, 6.0F, -39.0F, 1, 2, 15);
		leftArm13.setPos(7.0F, -11.0F, 15.0F);
		leftArm13.setTexSize(256, 128);
		leftArm13.mirror = true;
		setRotation(leftArm13, 0.0F, 0.0F, -0.2617994F);
		rightArm13 = new ModelRenderer(this, 72, 70);
		rightArm13.addBox(-1.5F, 6.0F, -39.0F, 1, 2, 15);
		rightArm13.setPos(-7.0F, -11.0F, 15.0F);
		rightArm13.setTexSize(256, 128);
		rightArm13.mirror = true;
		setRotation(rightArm13, 0.0F, 0.0F, 0.2617994F);
		leftArm14 = new ModelRenderer(this, 72, 92);
		leftArm14.addBox(0.5F, 4.0F, -39.0F, 1, 2, 2);
		leftArm14.setPos(7.0F, -11.0F, 15.0F);
		leftArm14.setTexSize(256, 128);
		leftArm14.mirror = true;
		setRotation(leftArm14, 0.0F, 0.0F, -0.2617994F);
		rightArm14 = new ModelRenderer(this, 72, 92);
		rightArm14.addBox(-1.5F, 4.0F, -39.0F, 1, 2, 2);
		rightArm14.setPos(-7.0F, -11.0F, 15.0F);
		rightArm14.setTexSize(256, 128);
		rightArm14.mirror = true;
		setRotation(rightArm14, 0.0F, 0.0F, 0.2617994F);
		leftArm15 = new ModelRenderer(this, 72, 92);
		leftArm15.addBox(0.5F, 4.0F, -35.0F, 1, 2, 2);
		leftArm15.setPos(7.0F, -11.0F, 15.0F);
		leftArm15.setTexSize(256, 128);
		leftArm15.mirror = true;
		setRotation(leftArm15, 0.0F, 0.0F, -0.2617994F);
		rightArm15 = new ModelRenderer(this, 72, 92);
		rightArm15.addBox(-1.5F, 4.0F, -35.0F, 1, 2, 2);
		rightArm15.setPos(-7.0F, -11.0F, 15.0F);
		rightArm15.setTexSize(256, 128);
		rightArm15.mirror = true;
		setRotation(rightArm15, 0.0F, 0.0F, 0.2617994F);
		leftArm16 = new ModelRenderer(this, 72, 92);
		leftArm16.addBox(0.5F, 4.0F, -31.0F, 1, 2, 2);
		leftArm16.setPos(7.0F, -11.0F, 15.0F);
		leftArm16.setTexSize(256, 128);
		leftArm16.mirror = true;
		setRotation(leftArm16, 0.0F, 0.0F, -0.2617994F);
		rightArm16 = new ModelRenderer(this, 72, 92);
		rightArm16.addBox(-1.5F, 4.0F, -31.0F, 1, 2, 2);
		rightArm16.setPos(-7.0F, -11.0F, 15.0F);
		rightArm16.setTexSize(256, 128);
		rightArm16.mirror = true;
		setRotation(rightArm16, 0.0F, 0.0F, 0.2617994F);
		drag40 = new ModelRenderer(this, 176, 96);
		drag40.addBox(10.0F, 13.0F, -20.0F, 6, 6, 6);
		drag40.setPos(0.0F, -15.0F, -1.0F);
		drag40.setTexSize(256, 128);
		drag40.mirror = true;
		setRotation(drag40, 0.0F, 0.0F, 0.0F);
		drag41 = new ModelRenderer(this, 218, 96);
		drag41.addBox(15.0F, 26.0F, -20.0F, 6, 6, 6);
		drag41.setPos(0.0F, -15.0F, -1.0F);
		drag41.setTexSize(256, 128);
		drag41.mirror = true;
		setRotation(drag41, 0.0F, 0.0F, 0.0F);
		drag42 = new ModelRenderer(this, 202, 96);
		drag42.addBox(13.0F, 19.0F, -18.0F, 2, 4, 2);
		drag42.setPos(0.0F, -15.0F, -1.0F);
		drag42.setTexSize(256, 128);
		drag42.mirror = true;
		setRotation(drag42, 0.0F, 0.0F, 0.0F);
		drag43 = new ModelRenderer(this, 227, 111);
		drag43.addBox(15.0F, 23.0F, -18.0F, 2, 3, 2);
		drag43.setPos(0.0F, -15.0F, -1.0F);
		drag43.setTexSize(256, 128);
		drag43.mirror = true;
		setRotation(drag43, 0.0F, 0.0F, 0.0F);
	}

	@Override
	public void renderToBuffer(MatrixStack matrix, IVertexBuilder buffer, int light, int overlay, float red, float green, float blue, float alpha) {
		head.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		wingR1.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		rightArm.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leftArm.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		rightLeg.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leftLeg.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		rightArm2.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leftArm2.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leftArm3.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		rightArm3.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leftArm4.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		rightArm4.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leftArm5.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		rightArm5.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		rightArm6.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leftArm6.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		rightArm7.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leftArm7.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		rightArm8.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leftArm8.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		rightArm9.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leftArm9.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		rightArm10.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leftArm10.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		rightArm11.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leftArm11.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head2.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head3.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head4.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head5.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head6.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head7.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body8.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		drag.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		drag2.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		drag3.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		drag4.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		drag5.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		drag6.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		drag7.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		drag8.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		drag9.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		drag10.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		drag11.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		drag13.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		drag12.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		drag14.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		drag15.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		drag17.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		drag16.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		drag18.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		drag19.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		drag20.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		drag21.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		drag22.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		drag23.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		drag24.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		drag25.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		drag26.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		drag27.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		drag28.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		drag29.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		wingR2.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		wingL1.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		wingL2.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		wingL3.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		wingR3.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		wingR4.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		wingL4.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		wingL5.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		wingL6.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		wingR5.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		wingR6.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		wingR7.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		wingR8.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		wingL7.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		wingL8.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		drag30.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		drag31.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		drag32.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		drag33.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		drag34.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		drag35.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		drag36.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		drag37.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		drag39.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		drag38.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leftArm12.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		rightArm12.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leftArm13.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		rightArm13.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leftArm14.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		rightArm14.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leftArm15.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		rightArm15.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leftArm16.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		rightArm16.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		drag40.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		drag41.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		drag42.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		drag43.render(matrix, buffer, light, overlay, red, green, blue, alpha);
	}

	private void setRotation(ModelRenderer model, float x, float y, float z) {
		model.xRot = x;
		model.yRot = y;
		model.zRot = z;
	}

	@Override
	public void setupAnim(MobEntity entityIn, float limbSwing, float limbSwingAmount, float ageInTicks, float netHeadYaw, float headPitch) {
		wingR1.zRot = (MathHelper.cos(ageInTicks * 0.1F) * 3.1415927F * 0.15F);
		wingR2.zRot = (MathHelper.cos(ageInTicks * 0.1F) * 3.1415927F * 0.15F);
		wingR3.zRot = (MathHelper.cos(ageInTicks * 0.1F) * 3.1415927F * 0.15F);
		wingR4.zRot = (MathHelper.cos(ageInTicks * 0.1F) * 3.1415927F * 0.15F);

		wingL1.zRot = (-wingR1.zRot);
		wingL2.zRot = (-wingR1.zRot);
		wingL3.zRot = (-wingR1.zRot);
		wingL4.zRot = (-wingR1.zRot);

		wingR5.zRot = (MathHelper.cos(ageInTicks * 0.1F) * 3.1415927F * 0.15F);
		wingR6.zRot = (MathHelper.cos(ageInTicks * 0.1F) * 3.1415927F * 0.15F);
		wingR7.zRot = (MathHelper.cos(ageInTicks * 0.1F) * 3.1415927F * 0.15F);
		wingR8.zRot = (MathHelper.cos(ageInTicks * 0.1F) * 3.1415927F * 0.15F);

		wingL5.zRot = (-wingR1.zRot);
		wingL6.zRot = (-wingR1.zRot);
		wingL7.zRot = (-wingR1.zRot);
		wingL8.zRot = (-wingR1.zRot);
	}
}
