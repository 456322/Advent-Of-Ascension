package net.tslat.aoa3.client.model.entity.boss;

import com.mojang.blaze3d.matrix.MatrixStack;
import com.mojang.blaze3d.vertex.IVertexBuilder;
import net.minecraft.client.renderer.entity.model.EntityModel;
import net.minecraft.client.renderer.model.ModelRenderer;
import net.minecraft.entity.MobEntity;
import net.minecraft.util.math.MathHelper;

public class PenumbraModel extends EntityModel<MobEntity> {
	private final ModelRenderer head;
	private final ModelRenderer body;
	private final ModelRenderer rightArm;
	private final ModelRenderer leftArm;
	private final ModelRenderer rightLeg;
	private final ModelRenderer leftLeg;
	private final ModelRenderer head2;
	private final ModelRenderer head3;
	private final ModelRenderer head4;
	private final ModelRenderer head5;
	private final ModelRenderer head6;
	private final ModelRenderer rightArm2;
	private final ModelRenderer leftArm2;
	private final ModelRenderer head7;
	private final ModelRenderer head8;
	private final ModelRenderer head9;
	private final ModelRenderer head10;
	private final ModelRenderer head11;
	private final ModelRenderer head12;
	private final ModelRenderer head13;
	private final ModelRenderer head14;
	private final ModelRenderer head15;
	private final ModelRenderer head16;
	private final ModelRenderer rightArm3;
	private final ModelRenderer rightArm4;
	private final ModelRenderer rightArm5;
	private final ModelRenderer rightArm7;
	private final ModelRenderer rightArm6;
	private final ModelRenderer rightArm8;
	private final ModelRenderer rightArm9;
	private final ModelRenderer rightArm10;
	private final ModelRenderer rightArm11;
	private final ModelRenderer head17;
	private final ModelRenderer head18;
	private final ModelRenderer head19;
	private final ModelRenderer head20;
	private final ModelRenderer head21;
	private final ModelRenderer head22;
	private final ModelRenderer head23;
	private final ModelRenderer head24;
	private final ModelRenderer head25;
	private final ModelRenderer leftArm3;
	private final ModelRenderer rightArm12;
	private final ModelRenderer leftArm4;
	private final ModelRenderer leftArm5;
	private final ModelRenderer body2;
	private final ModelRenderer body3;
	private final ModelRenderer body4;
	private final ModelRenderer body5;
	private final ModelRenderer body6;
	private final ModelRenderer body7;
	private final ModelRenderer body8;
	private final ModelRenderer body9;
	private final ModelRenderer body10;
	private final ModelRenderer body11;
	private final ModelRenderer body12;
	private final ModelRenderer body13;
	private final ModelRenderer body14;
	private final ModelRenderer body15;
	private final ModelRenderer body16;
	private final ModelRenderer body17;
	private final ModelRenderer body18;
	private final ModelRenderer body19;
	private final ModelRenderer body20;
	private final ModelRenderer body21;

	public PenumbraModel() {
		textureWidth = 64;
		textureHeight = 64;
		(head = new ModelRenderer(this, 0, 0)).addBox(-2.0f, -8.0f, -5.0f, 4, 2, 10);
		head.setRotationPoint(0.0f, -2.0f, 0.0f);
		head.setTextureSize(64, 64);
		head.mirror = true;
		setRotation(head, 0.0f, 0.0f, 0.0f);
		(body = new ModelRenderer(this, 19, 52)).addBox(-1.5f, -13.0f, -1.5f, 3, 3, 3);
		body.setRotationPoint(2.5f, 3.0f, 7.0f);
		body.setTextureSize(64, 64);
		body.mirror = true;
		setRotation(body, 0.0f, 0.0f, 0.0f);
		(rightArm = new ModelRenderer(this, 40, 1)).addBox(-4.0f, -6.0f, -3.0f, 6, 4, 6);
		rightArm.setRotationPoint(-6.0f, 2.0f, 1.0f);
		rightArm.setTextureSize(64, 64);
		rightArm.mirror = true;
		setRotation(rightArm, 0.0f, 0.0f, 0.0f);
		(leftArm = new ModelRenderer(this, 32, 7)).addBox(-5.0f, -6.0f, 0.0f, 2, 16, 0);
		leftArm.setRotationPoint(-6.0f, 2.0f, 1.0f);
		leftArm.setTextureSize(64, 64);
		leftArm.mirror = true;
		setRotation(leftArm, 0.0f, 0.0f, 0.0f);
		(rightLeg = new ModelRenderer(this, 17, 47)).addBox(-2.0f, 0.0f, -2.0f, 4, 12, 4);
		rightLeg.setRotationPoint(-3.0f, 12.0f, 1.0f);
		rightLeg.setTextureSize(64, 64);
		rightLeg.mirror = true;
		setRotation(rightLeg, 0.0f, 0.0f, 0.0f);
		(leftLeg = new ModelRenderer(this, 17, 47)).addBox(-2.0f, 0.0f, -2.0f, 4, 12, 4);
		leftLeg.setRotationPoint(3.0f, 12.0f, 1.0f);
		leftLeg.setTextureSize(64, 64);
		leftLeg.mirror = true;
		setRotation(leftLeg, 0.0f, 0.0f, 0.0f);
		(head2 = new ModelRenderer(this, 0, 61)).addBox(-2.0f, -4.0f, -7.0f, 1, 1, 1);
		head2.setRotationPoint(0.0f, -2.0f, 0.0f);
		head2.setTextureSize(64, 64);
		head2.mirror = true;
		setRotation(head2, 0.0f, 0.0f, 0.0f);
		(head3 = new ModelRenderer(this, 0, 0)).addBox(2.0f, -9.0f, 1.0f, 1, 1, 2);
		head3.setRotationPoint(0.0f, -2.0f, 0.0f);
		head3.setTextureSize(64, 64);
		head3.mirror = true;
		setRotation(head3, 0.0f, 0.0f, 0.0f);
		(head4 = new ModelRenderer(this, 0, 0)).addBox(2.0f, -7.0f, -1.0f, 1, 1, 1);
		head4.setRotationPoint(0.0f, -2.0f, 0.0f);
		head4.setTextureSize(64, 64);
		head4.mirror = true;
		setRotation(head4, 0.0f, 0.0f, 0.0f);
		(head5 = new ModelRenderer(this, 25, 1)).addBox(2.0f, -8.0f, 1.0f, 1, 1, 2);
		head5.setRotationPoint(0.0f, -2.0f, 0.0f);
		head5.setTextureSize(64, 64);
		head5.mirror = true;
		setRotation(head5, 0.0f, 0.0f, 0.0f);
		(head6 = new ModelRenderer(this, 0, 28)).addBox(-4.0f, -3.0f, -7.0f, 8, 3, 12);
		head6.setRotationPoint(0.0f, -2.0f, 0.0f);
		head6.setTextureSize(64, 64);
		head6.mirror = true;
		setRotation(head6, 0.0f, 0.0f, 0.0f);
		(rightArm2 = new ModelRenderer(this, 0, 53)).addBox(-2.0f, -15.0f, -4.0f, 2, 3, 2);
		rightArm2.setRotationPoint(-6.0f, 2.0f, 1.0f);
		rightArm2.setTextureSize(64, 64);
		rightArm2.mirror = true;
		setRotation(rightArm2, 0.5235988f, 0.0f, 0.0f);
		(leftArm2 = new ModelRenderer(this, 37, 12)).addBox(-1.0f, -2.0f, -2.0f, 4, 12, 4);
		leftArm2.setRotationPoint(6.0f, 2.0f, 1.0f);
		leftArm2.setTextureSize(64, 64);
		leftArm2.mirror = true;
		setRotation(leftArm2, 0.0f, 0.0f, 0.0f);
		(head7 = new ModelRenderer(this, 0, 13)).addBox(-3.0f, -6.0f, -6.0f, 6, 3, 11);
		head7.setRotationPoint(0.0f, -2.0f, 0.0f);
		head7.setTextureSize(64, 64);
		head7.mirror = true;
		setRotation(head7, 0.0f, 0.0f, 0.0f);
		(head8 = new ModelRenderer(this, 0, 61)).addBox(-4.0f, -4.0f, -1.0f, 1, 1, 1);
		head8.setRotationPoint(0.0f, -2.0f, 0.0f);
		head8.setTextureSize(64, 64);
		head8.mirror = true;
		setRotation(head8, 0.0f, 0.0f, 0.0f);
		(head9 = new ModelRenderer(this, 0, 61)).addBox(3.0f, -4.0f, -1.0f, 1, 1, 1);
		head9.setRotationPoint(0.0f, -2.0f, 0.0f);
		head9.setTextureSize(64, 64);
		head9.mirror = true;
		setRotation(head9, 0.0f, 0.0f, 0.0f);
		(head10 = new ModelRenderer(this, 0, 61)).addBox(1.0f, -4.0f, -7.0f, 1, 1, 1);
		head10.setRotationPoint(0.0f, -2.0f, 0.0f);
		head10.setTextureSize(64, 64);
		head10.mirror = true;
		setRotation(head10, 0.0f, 0.0f, 0.0f);
		(head11 = new ModelRenderer(this, 0, 61)).addBox(3.0f, -4.0f, -7.0f, 1, 1, 1);
		head11.setRotationPoint(0.0f, -2.0f, 0.0f);
		head11.setTextureSize(64, 64);
		head11.mirror = true;
		setRotation(head11, 0.0f, 0.0f, 0.0f);
		(head12 = new ModelRenderer(this, 0, 61)).addBox(-4.0f, -4.0f, -7.0f, 1, 1, 1);
		head12.setRotationPoint(0.0f, -2.0f, 0.0f);
		head12.setTextureSize(64, 64);
		head12.mirror = true;
		setRotation(head12, 0.0f, 0.0f, 0.0f);
		(head13 = new ModelRenderer(this, 0, 61)).addBox(3.0f, -4.0f, -5.0f, 1, 1, 1);
		head13.setRotationPoint(0.0f, -2.0f, 0.0f);
		head13.setTextureSize(64, 64);
		head13.mirror = true;
		setRotation(head13, 0.0f, 0.0f, 0.0f);
		(head14 = new ModelRenderer(this, 0, 61)).addBox(-4.0f, -4.0f, -5.0f, 1, 1, 1);
		head14.setRotationPoint(0.0f, -2.0f, 0.0f);
		head14.setTextureSize(64, 64);
		head14.mirror = true;
		setRotation(head14, 0.0f, 0.0f, 0.0f);
		(head15 = new ModelRenderer(this, 0, 61)).addBox(3.0f, -4.0f, -3.0f, 1, 1, 1);
		head15.setRotationPoint(0.0f, -2.0f, 0.0f);
		head15.setTextureSize(64, 64);
		head15.mirror = true;
		setRotation(head15, 0.0f, 0.0f, 0.0f);
		(head16 = new ModelRenderer(this, 0, 61)).addBox(-4.0f, -4.0f, -3.0f, 1, 1, 1);
		head16.setRotationPoint(0.0f, -2.0f, 0.0f);
		head16.setTextureSize(64, 64);
		head16.mirror = true;
		setRotation(head16, 0.0f, 0.0f, 0.0f);
		(rightArm3 = new ModelRenderer(this, 37, 12)).addBox(-3.0f, -2.0f, -2.0f, 4, 12, 4);
		rightArm3.setRotationPoint(-6.0f, 2.0f, 1.0f);
		rightArm3.setTextureSize(64, 64);
		rightArm3.mirror = true;
		setRotation(rightArm3, 0.0f, 0.0f, 0.0f);
		(rightArm4 = new ModelRenderer(this, 56, 12)).addBox(-2.0f, -10.0f, -7.0f, 2, 27, 2);
		rightArm4.setRotationPoint(-6.0f, 2.0f, 1.0f);
		rightArm4.setTextureSize(64, 64);
		rightArm4.mirror = true;
		setRotation(rightArm4, 0.5235988f, 0.0f, 0.0f);
		(rightArm5 = new ModelRenderer(this, 0, 44)).addBox(-2.0f, -12.0f, -9.0f, 2, 2, 6);
		rightArm5.setRotationPoint(-6.0f, 2.0f, 1.0f);
		rightArm5.setTextureSize(64, 64);
		rightArm5.mirror = true;
		setRotation(rightArm5, 0.5235988f, 0.0f, 0.0f);
		(rightArm7 = new ModelRenderer(this, 7, 59)).addBox(-2.0f, -14.5f, -12.0f, 2, 2, 2);
		rightArm7.setRotationPoint(-6.0f, 2.0f, 1.0f);
		rightArm7.setTextureSize(64, 64);
		rightArm7.mirror = true;
		setRotation(rightArm7, 0.5235988f, 0.0f, 0.0f);
		(rightArm6 = new ModelRenderer(this, 0, 53)).addBox(-2.0f, -15.0f, -10.0f, 2, 3, 2);
		rightArm6.setRotationPoint(-6.0f, 2.0f, 1.0f);
		rightArm6.setTextureSize(64, 64);
		rightArm6.mirror = true;
		setRotation(rightArm6, 0.5235988f, 0.0f, 0.0f);
		(rightArm8 = new ModelRenderer(this, 0, 44)).addBox(-2.0f, -17.0f, -9.0f, 2, 2, 6);
		rightArm8.setRotationPoint(-6.0f, 2.0f, 1.0f);
		rightArm8.setTextureSize(64, 64);
		rightArm8.mirror = true;
		setRotation(rightArm8, 0.5235988f, 0.0f, 0.0f);
		(rightArm9 = new ModelRenderer(this, 7, 59)).addBox(-2.0f, -19.0f, -9.0f, 2, 2, 2);
		rightArm9.setRotationPoint(-6.0f, 2.0f, 1.0f);
		rightArm9.setTextureSize(64, 64);
		rightArm9.mirror = true;
		setRotation(rightArm9, 0.5235988f, 0.0f, 0.0f);
		(rightArm10 = new ModelRenderer(this, 7, 59)).addBox(-2.0f, -19.0f, -5.0f, 2, 2, 2);
		rightArm10.setRotationPoint(-6.0f, 2.0f, 1.0f);
		rightArm10.setTextureSize(64, 64);
		rightArm10.mirror = true;
		setRotation(rightArm10, 0.5235988f, 0.0f, 0.0f);
		(rightArm11 = new ModelRenderer(this, 7, 59)).addBox(-2.0f, -14.5f, -2.0f, 2, 2, 2);
		rightArm11.setRotationPoint(-6.0f, 2.0f, 1.0f);
		rightArm11.setTextureSize(64, 64);
		rightArm11.mirror = true;
		setRotation(rightArm11, 0.5235988f, 0.0f, 0.0f);
		(head17 = new ModelRenderer(this, 24, 0)).addBox(2.0f, -7.0f, 0.0f, 1, 1, 3);
		head17.setRotationPoint(0.0f, -2.0f, 0.0f);
		head17.setTextureSize(64, 64);
		head17.mirror = true;
		setRotation(head17, 0.0f, 0.0f, 0.0f);
		(head18 = new ModelRenderer(this, 0, 0)).addBox(2.0f, -8.0f, 3.0f, 1, 2, 1);
		head18.setRotationPoint(0.0f, -2.0f, 0.0f);
		head18.setTextureSize(64, 64);
		head18.mirror = true;
		setRotation(head18, 0.0f, 0.0f, 0.0f);
		(head19 = new ModelRenderer(this, 0, 0)).addBox(2.0f, -8.0f, 0.0f, 1, 1, 1);
		head19.setRotationPoint(0.0f, -2.0f, 0.0f);
		head19.setTextureSize(64, 64);
		head19.mirror = true;
		setRotation(head19, 0.0f, 0.0f, 0.0f);
		(head20 = new ModelRenderer(this, 0, 0)).addBox(-3.0f, -7.0f, -1.0f, 1, 1, 1);
		head20.setRotationPoint(0.0f, -2.0f, 0.0f);
		head20.setTextureSize(64, 64);
		head20.mirror = true;
		setRotation(head20, 0.0f, 0.0f, 0.0f);
		(head21 = new ModelRenderer(this, 24, 0)).addBox(-3.0f, -7.0f, 0.0f, 1, 1, 3);
		head21.setRotationPoint(0.0f, -2.0f, 0.0f);
		head21.setTextureSize(64, 64);
		head21.mirror = true;
		setRotation(head21, 0.0f, 0.0f, 0.0f);
		(head22 = new ModelRenderer(this, 0, 0)).addBox(-3.0f, -8.0f, 0.0f, 1, 1, 1);
		head22.setRotationPoint(0.0f, -2.0f, 0.0f);
		head22.setTextureSize(64, 64);
		head22.mirror = true;
		setRotation(head22, 0.0f, 0.0f, 0.0f);
		(head23 = new ModelRenderer(this, 25, 1)).addBox(-3.0f, -8.0f, 1.0f, 1, 1, 2);
		head23.setRotationPoint(0.0f, -2.0f, 0.0f);
		head23.setTextureSize(64, 64);
		head23.mirror = true;
		setRotation(head23, 0.0f, 0.0f, 0.0f);
		(head24 = new ModelRenderer(this, 0, 0)).addBox(-3.0f, -9.0f, 1.0f, 1, 1, 2);
		head24.setRotationPoint(0.0f, -2.0f, 0.0f);
		head24.setTextureSize(64, 64);
		head24.mirror = true;
		setRotation(head24, 0.0f, 0.0f, 0.0f);
		(head25 = new ModelRenderer(this, 0, 0)).addBox(-3.0f, -8.0f, 3.0f, 1, 2, 1);
		head25.setRotationPoint(0.0f, -2.0f, 0.0f);
		head25.setTextureSize(64, 64);
		head25.mirror = true;
		setRotation(head25, 0.0f, 0.0f, 0.0f);
		(leftArm3 = new ModelRenderer(this, 40, 1)).addBox(-2.0f, -6.0f, -3.0f, 6, 4, 6);
		leftArm3.setRotationPoint(6.0f, 2.0f, 1.0f);
		leftArm3.setTextureSize(64, 64);
		leftArm3.mirror = true;
		setRotation(leftArm3, 0.0f, 0.0f, 0.0f);
		(rightArm12 = new ModelRenderer(this, 32, 33)).addBox(-4.0f, -9.0f, 0.0f, 6, 3, 0);
		rightArm12.setRotationPoint(-6.0f, 2.0f, 1.0f);
		rightArm12.setTextureSize(64, 64);
		rightArm12.mirror = true;
		setRotation(rightArm12, 0.0f, 0.0f, 0.0f);
		(leftArm4 = new ModelRenderer(this, 28, 7)).addBox(3.0f, -6.0f, 0.0f, 2, 16, 0);
		leftArm4.setRotationPoint(6.0f, 2.0f, 1.0f);
		leftArm4.setTextureSize(64, 64);
		leftArm4.mirror = true;
		setRotation(leftArm4, 0.0f, 0.0f, 0.0f);
		(leftArm5 = new ModelRenderer(this, 32, 33)).addBox(-2.0f, -9.0f, 0.0f, 6, 3, 0);
		leftArm5.setRotationPoint(6.0f, 2.0f, 1.0f);
		leftArm5.setTextureSize(64, 64);
		leftArm5.mirror = true;
		setRotation(leftArm5, 0.0f, 0.0f, 0.0f);
		(body2 = new ModelRenderer(this, 35, 43)).addBox(-4.0f, 0.0f, -2.0f, 8, 14, 6);
		body2.setRotationPoint(0.0f, -2.0f, 0.0f);
		body2.setTextureSize(64, 64);
		body2.mirror = true;
		setRotation(body2, 0.0f, 0.0f, 0.0f);
		(body3 = new ModelRenderer(this, 28, 12)).addBox(1.0f, -11.0f, 0.06666667f, 2, 8, 0);
		body3.setRotationPoint(2.5f, 4.0f, 8.0f);
		body3.setTextureSize(64, 64);
		body3.mirror = true;
		setRotation(body3, 0.0f, 0.0f, 0.0f);
		(body4 = new ModelRenderer(this, 42, 48)).addBox(1.0f, -22.0f, 3.933333f, 1, 4, 1);
		body4.setRotationPoint(2.5f, 3.0f, 7.0f);
		body4.setTextureSize(64, 64);
		body4.mirror = true;
		setRotation(body4, 0.4363323f, 0.0f, 0.0f);
		(body5 = new ModelRenderer(this, 19, 52)).addBox(-1.5f, -3.0f, -2.5f, 3, 3, 3);
		body5.setRotationPoint(2.5f, 3.0f, 7.0f);
		body5.setTextureSize(64, 64);
		body5.mirror = true;
		setRotation(body5, -0.4363323f, 0.0f, 0.0f);
		(body6 = new ModelRenderer(this, 28, 12)).addBox(1.0f, 0.0f, 0.06666667f, 2, 8, 0);
		body6.setRotationPoint(2.5f, 3.0f, 7.0f);
		body6.setTextureSize(64, 64);
		body6.mirror = true;
		setRotation(body6, -0.4363323f, 0.0f, 0.0f);
		(body7 = new ModelRenderer(this, 28, 12)).addBox(1.0f, -19.0f, 6.0f, 2, 8, 0);
		body7.setRotationPoint(2.5f, 3.0f, 7.0f);
		body7.setTextureSize(64, 64);
		body7.mirror = true;
		setRotation(body7, 0.4363323f, 0.0f, 0.0f);
		(body8 = new ModelRenderer(this, 42, 48)).addBox(-2.0f, -22.0f, 3.933333f, 1, 4, 1);
		body8.setRotationPoint(2.5f, 3.0f, 7.0f);
		body8.setTextureSize(64, 64);
		body8.mirror = true;
		setRotation(body8, 0.4363323f, 0.0f, 0.0f);
		(body9 = new ModelRenderer(this, 32, 12)).addBox(-3.0f, 0.0f, 0.06666667f, 2, 8, 0);
		body9.setRotationPoint(-2.5f, 3.0f, 7.0f);
		body9.setTextureSize(64, 64);
		body9.mirror = true;
		setRotation(body9, -0.4363323f, 0.0f, 0.0f);
		(body10 = new ModelRenderer(this, 19, 52)).addBox(-1.5f, -3.0f, -2.5f, 3, 3, 3);
		body10.setRotationPoint(-2.5f, 3.0f, 7.0f);
		body10.setTextureSize(64, 64);
		body10.mirror = true;
		setRotation(body10, -0.4363323f, 0.0f, 0.0f);
		(body11 = new ModelRenderer(this, 32, 12)).addBox(-3.0f, -11.0f, 0.06666667f, 2, 8, 0);
		body11.setRotationPoint(-2.5f, 4.0f, 8.0f);
		body11.setTextureSize(64, 64);
		body11.mirror = true;
		setRotation(body11, 0.0f, 0.0f, 0.0f);
		(body12 = new ModelRenderer(this, 19, 52)).addBox(-1.5f, -13.0f, -1.5f, 3, 3, 3);
		body12.setRotationPoint(-2.5f, 3.0f, 7.0f);
		body12.setTextureSize(64, 64);
		body12.mirror = true;
		setRotation(body12, 0.0f, 0.0f, 0.0f);
		(body13 = new ModelRenderer(this, 32, 12)).addBox(-3.0f, -19.0f, 6.0f, 2, 8, 0);
		body13.setRotationPoint(-2.5f, 3.0f, 7.0f);
		body13.setTextureSize(64, 64);
		body13.mirror = true;
		setRotation(body13, 0.4363323f, 0.0f, 0.0f);
		(body14 = new ModelRenderer(this, 42, 48)).addBox(1.0f, -22.0f, 3.933333f, 1, 4, 1);
		body14.setRotationPoint(-2.5f, 3.0f, 7.0f);
		body14.setTextureSize(64, 64);
		body14.mirror = true;
		setRotation(body14, 0.4363323f, 0.0f, 0.0f);
		(body15 = new ModelRenderer(this, 42, 48)).addBox(-2.0f, -22.0f, 3.933333f, 1, 4, 1);
		body15.setRotationPoint(-2.5f, 3.0f, 7.0f);
		body15.setTextureSize(64, 64);
		body15.mirror = true;
		setRotation(body15, 0.4363323f, 0.0f, 0.0f);
		(body16 = new ModelRenderer(this, 42, 48)).addBox(-1.0f, -11.0f, -2.0f, 2, 8, 2);
		body16.setRotationPoint(-2.5f, 4.0f, 8.0f);
		body16.setTextureSize(64, 64);
		body16.mirror = true;
		setRotation(body16, 0.0f, 0.0f, 0.0f);
		(body17 = new ModelRenderer(this, 42, 48)).addBox(-1.0f, -11.0f, -2.0f, 2, 8, 2);
		body17.setRotationPoint(2.5f, 4.0f, 8.0f);
		body17.setTextureSize(64, 64);
		body17.mirror = true;
		setRotation(body17, 0.0f, 0.0f, 0.0f);
		(body18 = new ModelRenderer(this, 42, 48)).addBox(-1.0f, -19.0f, 3.933333f, 2, 8, 2);
		body18.setRotationPoint(2.5f, 3.0f, 7.0f);
		body18.setTextureSize(64, 64);
		body18.mirror = true;
		setRotation(body18, 0.4363323f, 0.0f, 0.0f);
		(body19 = new ModelRenderer(this, 42, 48)).addBox(-1.0f, -19.0f, 3.933333f, 2, 8, 2);
		body19.setRotationPoint(-2.5f, 3.0f, 7.0f);
		body19.setTextureSize(64, 64);
		body19.mirror = true;
		setRotation(body19, 0.4363323f, 0.0f, 0.0f);
		(body20 = new ModelRenderer(this, 42, 48)).addBox(-1.0f, 0.0f, -2.0f, 2, 8, 2);
		body20.setRotationPoint(-2.5f, 3.0f, 7.0f);
		body20.setTextureSize(64, 64);
		body20.mirror = true;
		setRotation(body20, -0.4363323f, 0.0f, 0.0f);
		(body21 = new ModelRenderer(this, 42, 48)).addBox(-1.0f, 0.0f, -2.0f, 2, 8, 2);
		body21.setRotationPoint(2.5f, 3.0f, 7.0f);
		body21.setTextureSize(64, 64);
		body21.mirror = true;
		setRotation(body21, -0.4363323f, 0.0f, 0.0f);
	}

	@Override
	public void render(MatrixStack matrix, IVertexBuilder buffer, int light, int overlay, float red, float green, float blue, float alpha) {
		head.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		rightArm.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leftArm.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		rightLeg.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leftLeg.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head2.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head3.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head4.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head5.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head6.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		rightArm2.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leftArm2.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head7.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head8.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head9.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head10.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head11.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head12.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head13.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head14.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head15.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head16.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		rightArm3.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		rightArm4.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		rightArm5.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		rightArm7.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		rightArm6.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		rightArm8.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		rightArm9.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		rightArm10.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		rightArm11.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head17.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head18.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head19.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head20.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head21.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head22.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head23.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head24.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		head25.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leftArm3.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		rightArm12.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leftArm4.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		leftArm5.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body2.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body3.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body4.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body5.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body6.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body7.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body8.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body9.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body10.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body11.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body12.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body13.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body14.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body15.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body16.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body17.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body18.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body19.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body20.render(matrix, buffer, light, overlay, red, green, blue, alpha);
		body21.render(matrix, buffer, light, overlay, red, green, blue, alpha);
	}

	private void setRotation(final ModelRenderer model, final float x, final float y, final float z) {
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
	}

	@Override
	public void setRotationAngles(MobEntity entityIn, float limbSwing, float limbSwingAmount, float ageInTicks, float netHeadYaw, float headPitch) {
		head.rotateAngleY = netHeadYaw / 57.295776f;
		head.rotateAngleX = headPitch / 54.11268f;
		head2.rotateAngleY = netHeadYaw / 57.295776f;
		head2.rotateAngleX = headPitch / 54.11268f;
		head3.rotateAngleY = netHeadYaw / 57.295776f;
		head3.rotateAngleX = headPitch / 54.11268f;
		head4.rotateAngleY = netHeadYaw / 57.295776f;
		head4.rotateAngleX = headPitch / 54.11268f;
		head5.rotateAngleY = netHeadYaw / 57.295776f;
		head5.rotateAngleX = headPitch / 54.11268f;
		head6.rotateAngleY = netHeadYaw / 57.295776f;
		head6.rotateAngleX = headPitch / 54.11268f;
		head7.rotateAngleY = netHeadYaw / 57.295776f;
		head7.rotateAngleX = headPitch / 54.11268f;
		head8.rotateAngleY = netHeadYaw / 57.295776f;
		head8.rotateAngleX = headPitch / 54.11268f;
		head9.rotateAngleY = netHeadYaw / 57.295776f;
		head9.rotateAngleX = headPitch / 54.11268f;
		head10.rotateAngleY = netHeadYaw / 57.295776f;
		head10.rotateAngleX = headPitch / 54.11268f;
		head11.rotateAngleY = netHeadYaw / 57.295776f;
		head11.rotateAngleX = headPitch / 54.11268f;
		head12.rotateAngleY = netHeadYaw / 57.295776f;
		head12.rotateAngleX = headPitch / 54.11268f;
		head13.rotateAngleY = netHeadYaw / 57.295776f;
		head13.rotateAngleX = headPitch / 54.11268f;
		head14.rotateAngleY = netHeadYaw / 57.295776f;
		head14.rotateAngleX = headPitch / 54.11268f;
		head15.rotateAngleY = netHeadYaw / 57.295776f;
		head15.rotateAngleX = headPitch / 54.11268f;
		head16.rotateAngleY = netHeadYaw / 57.295776f;
		head16.rotateAngleX = headPitch / 54.11268f;
		head17.rotateAngleY = netHeadYaw / 57.295776f;
		head17.rotateAngleX = headPitch / 54.11268f;
		head18.rotateAngleY = netHeadYaw / 57.295776f;
		head18.rotateAngleX = headPitch / 54.11268f;
		head19.rotateAngleY = netHeadYaw / 57.295776f;
		head19.rotateAngleX = headPitch / 54.11268f;
		head20.rotateAngleY = netHeadYaw / 57.295776f;
		head20.rotateAngleX = headPitch / 54.11268f;
		head21.rotateAngleY = netHeadYaw / 57.295776f;
		head21.rotateAngleX = headPitch / 54.11268f;
		head22.rotateAngleY = netHeadYaw / 57.295776f;
		head22.rotateAngleX = headPitch / 54.11268f;
		head23.rotateAngleY = netHeadYaw / 57.295776f;
		head23.rotateAngleX = headPitch / 54.11268f;
		head24.rotateAngleY = netHeadYaw / 57.295776f;
		head24.rotateAngleX = headPitch / 54.11268f;
		head25.rotateAngleY = netHeadYaw / 57.295776f;
		head25.rotateAngleX = headPitch / 54.11268f;
		rightArm.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 2.0f * limbSwingAmount * 0.5f;
		rightArm.rotateAngleZ = 0.0f;
		rightArm2.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 2.0f * limbSwingAmount * 0.5f + 0.523f;
		rightArm2.rotateAngleZ = 0.0f;
		rightArm3.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 2.0f * limbSwingAmount * 0.5f;
		rightArm3.rotateAngleZ = 0.0f;
		rightArm4.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 2.0f * limbSwingAmount * 0.5f + 0.523f;
		rightArm4.rotateAngleZ = 0.0f;
		rightArm5.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 2.0f * limbSwingAmount * 0.5f + 0.523f;
		rightArm5.rotateAngleZ = 0.0f;
		rightArm6.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 2.0f * limbSwingAmount * 0.5f + 0.523f;
		rightArm6.rotateAngleZ = 0.0f;
		rightArm7.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 2.0f * limbSwingAmount * 0.5f + 0.523f;
		rightArm7.rotateAngleZ = 0.0f;
		rightArm8.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 2.0f * limbSwingAmount * 0.5f + 0.523f;
		rightArm8.rotateAngleZ = 0.0f;
		rightArm9.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 2.0f * limbSwingAmount * 0.5f + 0.523f;
		rightArm9.rotateAngleZ = 0.0f;
		rightArm10.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 2.0f * limbSwingAmount * 0.5f + 0.523f;
		rightArm10.rotateAngleZ = 0.0f;
		rightArm11.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 2.0f * limbSwingAmount * 0.5f + 0.523f;
		rightArm11.rotateAngleZ = 0.0f;
		rightArm12.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 2.0f * limbSwingAmount * 0.5f;
		rightArm12.rotateAngleZ = 0.0f;
		leftArm.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f) * 2.0f * limbSwingAmount * 0.5f;
		leftArm.rotateAngleZ = 0.0f;
		leftArm2.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f) * 2.0f * limbSwingAmount * 0.5f;
		leftArm2.rotateAngleZ = 0.0f;
		leftArm3.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f) * 2.0f * limbSwingAmount * 0.5f;
		leftArm3.rotateAngleZ = 0.0f;
		leftArm4.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f) * 2.0f * limbSwingAmount * 0.5f;
		leftArm4.rotateAngleZ = 0.0f;
		leftArm5.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f) * 2.0f * limbSwingAmount * 0.5f;
		leftArm5.rotateAngleZ = 0.0f;
		rightLeg.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f) * 1.4f * limbSwingAmount;
		rightLeg.rotateAngleY = 0.0f;
		leftLeg.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f + 3.1415927f) * 1.4f * limbSwingAmount;
	}
}
